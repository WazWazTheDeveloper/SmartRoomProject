(function(e){function n(n){for(var s,o,r=n[0],c=n[1],l=n[2],d=0,h=[];d<r.length;d++)o=r[d],Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&h.push(a[o][0]),a[o]=0;for(s in c)Object.prototype.hasOwnProperty.call(c,s)&&(e[s]=c[s]);u&&u(n);while(h.length)h.shift()();return i.push.apply(i,l||[]),t()}function t(){for(var e,n=0;n<i.length;n++){for(var t=i[n],s=!0,o=1;o<t.length;o++){var r=t[o];0!==a[r]&&(s=!1)}s&&(i.splice(n--,1),e=c(c.s=t[0]))}return e}var s={},o={app:0},a={app:0},i=[];function r(e){return c.p+"static/js/"+({"chunk-monaco-editor":"chunk-monaco-editor"}[e]||e)+"."+{"chunk-0875d0b8":"a981b63f","chunk-43f459de":"4fdc3d1e","chunk-46feddca":"3e269fc5","chunk-75c1afb9":"21eb1f4b","chunk-5cff3e97":"ccbc0ea4","chunk-615f377b":"433a76a8","chunk-0ab85f5c":"0b6a23bb","chunk-11f9ec5a":"033bd80c","chunk-160b51c6":"401684be","chunk-267cc152":"be2219d3","chunk-17e170fa":"289faf73","chunk-2d0aa193":"1368d6a2","chunk-1fd1af46":"6ab2bcd3","chunk-2aeed5c1":"fbaf166f","chunk-d142fd52":"a22a05d9","chunk-50728d70":"3d88ceba","chunk-2d0b26c4":"23a624c9","chunk-3bdcf584":"ad74ba42","chunk-7eafee9e":"681212b1","chunk-50a5cdfa":"3c79ed66","chunk-575c8fb7":"4e4b60bd","chunk-596a50d8":"e99177b3","chunk-5e8bbcdb":"4269bacd","chunk-0775ce20":"98d599c1","chunk-14d6328c":"e660afd2","chunk-aadf8a56":"4ef134ba","chunk-c5072336":"ca2b441d","chunk-2e2f424e":"87cc4805","chunk-28233d66":"c15f1ca2","chunk-37dbe099":"0d250202","chunk-7e213561":"7a94dc94","chunk-eecb1de6":"cca4e7c6","chunk-61fb1656":"6bce2b46","chunk-6b6fb658":"c6c978d6","chunk-78ee6a46":"82f0809a","chunk-7b59aba3":"b38b7bd8","chunk-8161687a":"9ee25dfa","chunk-0c20f250":"cdf68a97","chunk-3ceb5e1d":"949a53d9","chunk-4568aaf6":"038245bb","chunk-6c468a64":"ac194a87","chunk-9526fa42":"372aab27","chunk-7d8ccdfe":"f01f7645","chunk-e8b1caf4":"79ec0ec8","chunk-9335f8e6":"fa6d79fe","chunk-a876701e":"d52e504d","chunk-b229b3d4":"bcabb524","chunk-ba2e30b0":"32efe45e","chunk-182def1c":"f16854a9","chunk-2d237515":"28adc72d","chunk-50a251aa":"3fe91c01","chunk-b1137cc8":"6c90badc","chunk-583aae1c":"9eb3e13a","chunk-441be094":"b953f516","chunk-615dcd9d":"179003a4","chunk-626c09dc":"66dd81a5","chunk-06de0012":"5bbfa3f9","chunk-bcd44488":"2d44b565","chunk-1f758299":"68c5efed","chunk-df896a0a":"514c4595","chunk-1fd4d15c":"2b33ac8c","chunk-202d058c":"52c3415e","chunk-890e1858":"bd3654d3","chunk-7970afcc":"ea328a9d","chunk-e4818b78":"6e3a4d12","chunk-monaco-editor":"cf811917","chunk-38e26fa8":"fbcbb057","chunk-547eb8a5":"6985c0af","chunk-058a2593":"905a09f1","chunk-0a779bc0":"5cfada26","chunk-19f9b363":"b509077d","chunk-3ffac944":"1e4db269","chunk-49501bb6":"2685e8db","chunk-4b435aa7":"f45e00e5","chunk-4c2cae49":"871777a6","chunk-66999888":"f46e1bb3","chunk-7186f538":"e13210dc","chunk-8ef8715e":"30f56337","chunk-a95b6732":"ac4a5177","chunk-bbbcf79c":"4c2e62e9","chunk-d3939fe6":"95e7e31d","chunk-e334e728":"5ae05e09"}[e]+".js"}function c(n){if(s[n])return s[n].exports;var t=s[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,c),t.l=!0,t.exports}c.e=function(e){var n=[],t={"chunk-0875d0b8":1,"chunk-5cff3e97":1,"chunk-615f377b":1,"chunk-11f9ec5a":1,"chunk-267cc152":1,"chunk-17e170fa":1,"chunk-2aeed5c1":1,"chunk-50728d70":1,"chunk-2d0b26c4":1,"chunk-3bdcf584":1,"chunk-7eafee9e":1,"chunk-50a5cdfa":1,"chunk-575c8fb7":1,"chunk-596a50d8":1,"chunk-0775ce20":1,"chunk-14d6328c":1,"chunk-aadf8a56":1,"chunk-c5072336":1,"chunk-2e2f424e":1,"chunk-28233d66":1,"chunk-37dbe099":1,"chunk-7e213561":1,"chunk-eecb1de6":1,"chunk-61fb1656":1,"chunk-78ee6a46":1,"chunk-7b59aba3":1,"chunk-8161687a":1,"chunk-3ceb5e1d":1,"chunk-4568aaf6":1,"chunk-6c468a64":1,"chunk-9526fa42":1,"chunk-7d8ccdfe":1,"chunk-e8b1caf4":1,"chunk-9335f8e6":1,"chunk-a876701e":1,"chunk-b229b3d4":1,"chunk-ba2e30b0":1,"chunk-182def1c":1,"chunk-50a251aa":1,"chunk-b1137cc8":1,"chunk-583aae1c":1,"chunk-441be094":1,"chunk-615dcd9d":1,"chunk-626c09dc":1,"chunk-06de0012":1,"chunk-bcd44488":1,"chunk-1f758299":1,"chunk-1fd4d15c":1,"chunk-202d058c":1,"chunk-890e1858":1,"chunk-7970afcc":1,"chunk-e4818b78":1,"chunk-monaco-editor":1,"chunk-38e26fa8":1,"chunk-547eb8a5":1,"chunk-058a2593":1,"chunk-0a779bc0":1,"chunk-19f9b363":1,"chunk-3ffac944":1,"chunk-49501bb6":1,"chunk-4b435aa7":1,"chunk-4c2cae49":1,"chunk-66999888":1,"chunk-7186f538":1,"chunk-8ef8715e":1,"chunk-a95b6732":1,"chunk-bbbcf79c":1,"chunk-d3939fe6":1,"chunk-e334e728":1};o[e]?n.push(o[e]):0!==o[e]&&t[e]&&n.push(o[e]=new Promise((function(n,t){for(var s="static/css/"+({"chunk-monaco-editor":"chunk-monaco-editor"}[e]||e)+"."+{"chunk-0875d0b8":"a14b10c9","chunk-43f459de":"31d6cfe0","chunk-46feddca":"31d6cfe0","chunk-75c1afb9":"31d6cfe0","chunk-5cff3e97":"03af5827","chunk-615f377b":"902ebb66","chunk-0ab85f5c":"31d6cfe0","chunk-11f9ec5a":"e2f1aa99","chunk-160b51c6":"31d6cfe0","chunk-267cc152":"b95fe178","chunk-17e170fa":"0cbf2d91","chunk-2d0aa193":"31d6cfe0","chunk-1fd1af46":"31d6cfe0","chunk-2aeed5c1":"7d4c8647","chunk-d142fd52":"31d6cfe0","chunk-50728d70":"390c246d","chunk-2d0b26c4":"0f56df12","chunk-3bdcf584":"5666da7b","chunk-7eafee9e":"82ea7c9d","chunk-50a5cdfa":"04b5fd9a","chunk-575c8fb7":"761bfd54","chunk-596a50d8":"c74eb180","chunk-5e8bbcdb":"31d6cfe0","chunk-0775ce20":"e92fa96b","chunk-14d6328c":"5353f6ba","chunk-aadf8a56":"d2add695","chunk-c5072336":"7e2192c6","chunk-2e2f424e":"597f642c","chunk-28233d66":"446453f4","chunk-37dbe099":"9128c7f0","chunk-7e213561":"f5af59a0","chunk-eecb1de6":"d2b44c65","chunk-61fb1656":"5666da7b","chunk-6b6fb658":"31d6cfe0","chunk-78ee6a46":"e81ebf7b","chunk-7b59aba3":"284719e6","chunk-8161687a":"584ac95c","chunk-0c20f250":"31d6cfe0","chunk-3ceb5e1d":"7e35dbdf","chunk-4568aaf6":"c3bcb04e","chunk-6c468a64":"23ca8910","chunk-9526fa42":"a3bd4369","chunk-7d8ccdfe":"ffe24f69","chunk-e8b1caf4":"b5cfa48a","chunk-9335f8e6":"8120ff8e","chunk-a876701e":"34dd1040","chunk-b229b3d4":"ac5cfef8","chunk-ba2e30b0":"e8d84ed4","chunk-182def1c":"3710051a","chunk-2d237515":"31d6cfe0","chunk-50a251aa":"6be545f5","chunk-b1137cc8":"d1ec53fd","chunk-583aae1c":"e5c29a90","chunk-441be094":"ff6faee2","chunk-615dcd9d":"db11cffb","chunk-626c09dc":"0541e8b5","chunk-06de0012":"781b9555","chunk-bcd44488":"aa2e0c3b","chunk-1f758299":"46975173","chunk-df896a0a":"31d6cfe0","chunk-1fd4d15c":"597f642c","chunk-202d058c":"b1fcf410","chunk-890e1858":"07625462","chunk-7970afcc":"55541a0d","chunk-e4818b78":"597f642c","chunk-monaco-editor":"7ee3669f","chunk-38e26fa8":"192f4e2d","chunk-547eb8a5":"6716ca04","chunk-058a2593":"f826e4fb","chunk-0a779bc0":"9ed40dde","chunk-19f9b363":"eb034c5e","chunk-3ffac944":"e2afb06f","chunk-49501bb6":"a4c48f63","chunk-4b435aa7":"a4c48f63","chunk-4c2cae49":"02393890","chunk-66999888":"9b84557a","chunk-7186f538":"dfadf60c","chunk-8ef8715e":"f08bd7c4","chunk-a95b6732":"a4c48f63","chunk-bbbcf79c":"a4c48f63","chunk-d3939fe6":"b362b99e","chunk-e334e728":"d11972ff"}[e]+".css",a=c.p+s,i=document.getElementsByTagName("link"),r=0;r<i.length;r++){var l=i[r],d=l.getAttribute("data-href")||l.getAttribute("href");if("stylesheet"===l.rel&&(d===s||d===a))return n()}var h=document.getElementsByTagName("style");for(r=0;r<h.length;r++){l=h[r],d=l.getAttribute("data-href");if(d===s||d===a)return n()}var u=document.createElement("link");u.rel="stylesheet",u.type="text/css",u.onload=n,u.onerror=function(n){var s=n&&n.target&&n.target.src||a,i=new Error("Loading CSS chunk "+e+" failed.\n("+s+")");i.code="CSS_CHUNK_LOAD_FAILED",i.request=s,delete o[e],u.parentNode.removeChild(u),t(i)},u.href=a;var m=document.getElementsByTagName("head")[0];m.appendChild(u)})).then((function(){o[e]=0})));var s=a[e];if(0!==s)if(s)n.push(s[2]);else{var i=new Promise((function(n,t){s=a[e]=[n,t]}));n.push(s[2]=i);var l,d=document.createElement("script");d.charset="utf-8",d.timeout=120,c.nc&&d.setAttribute("nonce",c.nc),d.src=r(e);var h=new Error;l=function(n){d.onerror=d.onload=null,clearTimeout(u);var t=a[e];if(0!==t){if(t){var s=n&&("load"===n.type?"missing":n.type),o=n&&n.target&&n.target.src;h.message="Loading chunk "+e+" failed.\n("+s+": "+o+")",h.name="ChunkLoadError",h.type=s,h.request=o,t[1](h)}a[e]=void 0}};var u=setTimeout((function(){l({type:"timeout",target:d})}),12e4);d.onerror=d.onload=l,document.head.appendChild(d)}return Promise.all(n)},c.m=e,c.c=s,c.d=function(e,n,t){c.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},c.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,n){if(1&n&&(e=c(e)),8&n)return e;if(4&n&&"object"===typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(c.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var s in e)c.d(t,s,function(n){return e[n]}.bind(null,s));return t},c.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return c.d(n,"a",n),n},c.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},c.p="",c.oe=function(e){throw console.error(e),e};var l=window["webpackJsonp"]=window["webpackJsonp"]||[],d=l.push.bind(l);l.push=n,l=l.slice();for(var h=0;h<l.length;h++)n(l[h]);var u=d;i.push([0,"vendors~app"]),t()})({0:function(e,n,t){e.exports=t("cd49")},"000c":function(e,n,t){},"0613":function(e,n,t){"use strict";t("2ca0"),t("caad"),t("4ec9"),t("d3b7"),t("3ca3"),t("ddb0"),t("e9c4");var s=t("5502"),o=(t("25f0"),t("4c61")),a=t("c198"),i=t.n(a),r=t("f8d5"),c=t.n(r),l="uKV5",d="YWSCVU8Z55N9N1G1",h=function(){return localStorage.getItem(l)},u=function(){var e=Object(o["j"])(4);return localStorage.setItem(l,e),e},m=function(e,n){try{return i.a.encrypt(e,n)}catch(t){return console.error(t),e}},b=function(e,n){try{var t=i.a.decrypt(e,n);return t.toString(c.a)}catch(s){return console.error(s),e}},p=function(e){var n=u(),t=m(Object(o["G"])(e),d);localStorage.setItem(n,t)},f=function(){var e=h();if(e){var n=localStorage.getItem(e);if(n){var t=b(n,d),s=Object(o["C"])(t);return s}}},_=function(){var e=h();e&&(localStorage.removeItem(e),localStorage.removeItem(l))},g=function(){var e=localStorage.getItem("language");return e||(e=navigator.language.startsWith("zh")?"zh":"en",localStorage.setItem("language",e)),e},z=function(){var e=localStorage.getItem("theme");return e&&["light","dark"].includes(e)?e:"dark"},S=function(){var e=localStorage.getItem("syncOsTheme")||"false";return"undefined"===e||JSON.parse(e)},v=function(){var e=localStorage.getItem("leftBarCollapse")||"true";return"undefined"===e||JSON.parse(e)};n["a"]=Object(s["a"])({state:{user:f()||{},theme:z(),syncOsTheme:S(),lang:g(),leftBarCollapse:v(),alertCount:0,selectedModule:JSON.parse(localStorage.getItem("selectedModule")),request_queue:0,edition:localStorage.getItem("edition"),afterCurrentUserPwdChanged:!1,schemaStoreMap:new Map},actions:{SET_ALERT_COUNT:function(e){var n=e.commit,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;n("SET_ALERT_COUNT",t)},SET_LANGUAGE:function(e,n){var t=e.commit;t("SET_LANGUAGE",n)},SET_LEFT_BAR_COLLAPSE:function(e){var n=e.commit,t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];n("SET_LEFT_BAR_COLLAPSE",!!t)},UPDATE_USER_INFO:function(e){var n=e.commit,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};n("UPDATE_USER_INFO",t)},SET_REQ_CHANGE:function(e){var n=e.commit,t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];n("SET_REQ_CHANGE",!!t)},UPDATE_SETTINGS:function(e){var n=e.commit,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};n("UPDATE_SETTINGS",t)}},mutations:{SET_ALERT_COUNT:function(e,n){e.alertCount=n},UPDATE_USER_INFO:function(e,n){var t=n.logOut,s=void 0!==t&&t;s?_():p(n),e.user=n},SET_LEFT_BAR_COLLAPSE:function(e,n){localStorage.setItem("leftBarCollapse",!!n),e.leftBarCollapse=!!n},SET_LANGUAGE:function(e,n){localStorage.setItem("language",n),null!==n&&void 0!==n||localStorage.removeItem("language"),n&&e.lang!==n&&location.reload()},SET_REQ_CHANGE:function(e,n){n?++e.request_queue:--e.request_queue},UPDATE_EDITION:function(e,n){n?localStorage.setItem("edition",n):localStorage.removeItem("edition"),e.edition=n},UPDATE_SETTINGS:function(e,n){var t=n.lang,s=n.theme,o=n.syncOsTheme;localStorage.setItem("language",null!==t&&void 0!==t?t:e.lang),localStorage.setItem("theme",null!==s&&void 0!==s?s:e.theme),localStorage.setItem("syncOsTheme",JSON.stringify(o)),(t&&e.lang!==t||s&&e.theme!==s||e.syncOsTheme!==o)&&(e.lang=null!==t&&void 0!==t?t:e.lang,e.theme=null!==s&&void 0!==s?s:e.theme,e.syncOsTheme=o,location.reload())},SET_AFTER_CURRENT_USER_PWD_CHANGED:function(e,n){e.afterCurrentUserPwdChanged=n},SET_SCHEMA_DATA:function(e,n){e.schemaStoreMap.set(n.key,n.data)}},getters:{edition:function(e){var n=e.edition;if(!n)return 2;var t=String(n).toLowerCase();return"enterprise"==t?1:2},isDev:function(){return!1},configPageBtnStyle:function(e){return{left:e.leftBarCollapse?"104px":"224px"}},getSchema:function(e){return function(n){return e.schemaStoreMap.get(n)}}}})},"0742":function(e){e.exports=JSON.parse('{"emqx_resource_schema":{"auto_restart_interval":{"desc":"The auto restart interval after the resource is disconnected.","label":"Auto Restart Interval"},"batch_size":{"desc":"Maximum batch count. If equal to 1, there\'s effectively no batching.","label":"Max Batch Size"},"batch_time":{"desc":"Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.","label":"Max Batch Wait Time"},"creation_opts":{"desc":"Creation options.","label":"Creation Options"},"enable_batch":{"desc":"Batch mode enabled.","label":"Enable Batch"},"enable_queue":{"desc":"Enable disk buffer queue (only applicable for egress bridges).\\nWhen Enabled, messages will be buffered on disk when the bridge connection is down.\\nWhen disabled the messages are buffered in RAM only.","label":"Enable Disk Buffer Queue"},"health_check_interval":{"desc":"Health check interval.","label":"Health Check Interval"},"inflight_window":{"desc":"Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.","label":"Inflight Window"},"max_queue_bytes":{"desc":"Maximum number of bytes to buffer for each buffer worker.","label":"Max Buffer Queue Size"},"query_mode":{"desc":"Query mode. Optional \'sync/async\', default \'async\'.","label":"Query Mode"},"request_ttl":{"desc":"Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.","label":"Request TTL"},"resource_opts":{"desc":"Resource options.","label":"Resource Options"},"resume_interval":{"desc":"The interval at which the buffer worker attempts to resend failed requests in the inflight window.","label":"Resume Interval"},"start_after_created":{"desc":"Whether start the resource right after created.","label":"Start After Created"},"start_timeout":{"desc":"Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.","label":"Start Timeout"},"worker_pool_size":{"desc":"The number of buffer workers. Only applicable for egress type bridges.\\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.","label":"Buffer Pool Size"},"max_buffer_bytes":{"label":"Max Buffer Queue Size","desc":"Maximum number of bytes to buffer for each buffer worker."}}}')},1:function(e,n){},"17aa":function(e,n,t){"use strict";t.r(n),n["default"]={name:{zh:"名称",en:"Name"},status:{zh:"状态",en:"Status"},connection:{zh:"连接",en:"Connections"},listeners:{zh:"监听器",en:"Listeners"},running:{zh:"Enabled",en:"Enabled"},stopped:{zh:"Disabled",en:"Disabled"},auth:{en:"Authentication",zh:"接入认证"},clients:{zh:"客户端",en:"Clients"},more:{zh:"更多",en:"More"},enable:{zh:"启用",en:"Enable"},disable:{zh:"停用",en:"Disable"},addListener:{zh:"添加监听器",en:"Add Listener"},editListener:{zh:"编辑监听器",en:"Edit Listener"},disableListenerTip:{zh:"在禁用监听器后，监听器中的所有连接将被关闭，是否继续？",en:"All connections in the listener will be closed after disabling the listener. Continue?"},addAuth:{en:"Create Authentication",zh:"添加认证"},clientid:{zh:"客户端ID",en:"Client ID"},username:{zh:"用户名",en:"Username"},maxKeepalive:{zh:"最大心跳时间",en:"Max Keepalive Time"},min:{en:"Minute",zh:"分"},hour:{en:"Hour",zh:"小时"},initial:{zh:"初始化",en:"Initialize "},basicConfig:{zh:"基础参数",en:"Basic Configuration"},maxHeader:{zh:"最大 Header 数",en:"Max Header"},maxHeaderLen:{zh:"单个 Header 最大长度",en:"Max Each Header Length"},maxBodyLen:{zh:"最大 Body 长度",en:"Max Body Length"},idleTime:{zh:"空闲超时时间",en:"Idle Timeout"},useLog:{zh:"启用统计",en:"Enable Statistics"},mountPoint:{zh:"挂载点",en:"MountPoint"},lType:{zh:"类型",en:"Type"},lAddress:{zh:"监听地址",en:"Bind"},lMaxConn:{zh:"最大连接数",en:"Max Connections"},clientAuth:{zh:"配置客户端接入认证",en:"Client authentication"},clientAuthDesc:{zh:"您可以在启用网关之后，进入详情页面进行配置。配置并启用客户端认证后未通过认证的客户端无法连接到集群中。",en:"You can configure authentication after enable the gateway.When client authentication is enabled, clients that fail to pass authentication cannot connect to the cluster."},predefinedTopic:{zh:"预设 Topic 列表",en:"Predefined Topic List"},broadcast:{zh:"开启广播",en:"Enable Broadcast"},qos3:{zh:"启用 QoS3",en:"Enable QoS3"},connectionRequire:{zh:"连接模式",en:"Connection Required"},heartbeat:{zh:"心跳间隔",en:"Heartbeat"},notifyType:{zh:"通知类型",en:"Notification Message Type"},subQos:{zh:"订阅 QoS",en:"Subscribe QoS"},pubQos:{zh:"发布 QoS",en:"Publish QoS"},resDirectory:{en:"Resource Definition Files Directory",zh:"资源定义文件目录"},qmodewindow:{zh:"QMode Time Window",en:"QMode Time Window"},minLifetime:{en:"Minimum Lifetime",zh:"最小心跳时间"},maxLifetime:{en:"Maximum Lifetime",zh:"最大心跳时间"},aObserve:{zh:"Auto Observe",en:"Auto Observe"},updateStrategy:{zh:"Update Message Strategy",en:"Update Message Strategy"},trCommand:{zh:"下行命令",en:"Command"},trResponse:{zh:"应答消息",en:"Response"},trNotify:{zh:"通知消息",en:"Notify"},trRegister:{zh:"注册事件",en:"Register"},trUpdate:{zh:"更新事件",en:"Update"},maxConnRate:{zh:"最大连接速率",en:"Max Connection Rate"},maxConn:{zh:"最大连接数",en:"Max Connections"},sendTimeout:{zh:"发送超时时间",en:"Send Timeout"},sendTimeoutClose:{zh:"关闭发送超时连接",en:"Send Timeout Close"},sslversion:{zh:"SSL 版本",en:"SSL Versions"},dtlsversion:{zh:"DTLS 版本",en:"DTLS Versions"},sendBuf:{zh:"发送缓冲区大小",en:"Send Buffer"},recBuf:{zh:"接收缓冲区大小",en:"Receive Buffer"},endpointName:{zh:"EndPoint Name",en:"EndPoint Name"},ipaddress:{zh:"IP 地址",en:"IP Address"},connectedAt:{zh:"注册时间",en:"Registered At"},lifetime:{zh:"LifeTime",en:"LifeTime"},alreadyLoad:{zh:"此网关已经初始化",en:"This gateway is already loaded"},grpcListener:{zh:"gRPC 监听",en:"gRPC ConnectionAdapter"},grpcConnection:{zh:"gRPC 连接",en:"gRPC ConnectionHandler"},noAuthTips:{zh:"如需对接入的客户端进行身份认证，请先添加认证，配置并启用客户端认证后未通过认证的客户端将无法连接到集群中。",en:"To authenticate the client, please add authentication first. After configuring and enabling client authentication, clients that fail to pass authentication will not be able to connect to the cluster."},missinggRPCTLSFile:{zh:"缺少 gRPC 监听的 Cert 或 Key 内容",en:"Missing Cert or Key content for gRPC ConnectionAdapter"},setup:{zh:"配置",en:"Setup"},updateListenerTip:{zh:"更新监听器会导致已有连接断开，继续？",en:"Updating the listener will cause existing connections to be disconnected. Continue?"},settings:{zh:"设置",en:"Settings"},disableGatewayTip:{zh:"禁用网关将导致通过此网关接入的连接全部断开，继续？",en:"Disabling the gateway will cause all connections accessed through this gateway to be disconnected. Continue?"},failIfNoPeerCert:{zh:"没有证书则 SSL 失败",en:"SSL Fail If No Peer Cert"},SSLdepth:{zh:"CA 证书深度",en:"CACert Depth"},SSLPassword:{zh:"密钥文件密码",en:"Key File Passphrase"},enableOcspStapling:{zh:"启用 OCSP Stapling",en:"Enable OCSP Stapling"},responderUrl:{zh:"OCSP 服务器地址",en:"OCSP Responder URL"},issuerPem:{zh:"OCSP 签发者证书",en:"OCSP Issuer Certificate"},refreshInterval:{zh:"OCSP 刷新间隔",en:"OCSP Refresh Interval"},refreshHttpTimeout:{zh:"OCSP 刷新 HTTP 超时时间",en:"OCSP Refresh HTTP Timeout"},enableCrlCheck:{en:"Enable CRL Check",zh:"启用 CRL 检查"},showLimiter:{zh:"速率配置（可选）",en:"Limiter (Optional)"}}},"1f00":function(e,n,t){"use strict";t.r(n),n["default"]={addASubscription:{zh:"添加订阅",en:"New Subscription"},pleaseEnter:{zh:"请输入",en:"Please enter"},connect:{zh:"连接",en:"Connections"},clients:{zh:"客户端",en:"Clients"},currentConnection:{zh:"当前在线连接客户端",en:"Current Clients"},reset:{zh:"重置",en:"Reset"},detailed:{zh:"详细",en:"Detailed"},clientId:{zh:"客户端 ID",en:"Client ID"},clientid:{zh:"客户端 ID",en:"Client ID"},$all:{zh:"全部用户",en:"All users"},username:{zh:"用户名",en:"Username"},ipAddress:{zh:"IP 地址",en:"IP Address"},port:{zh:"端口",en:"Port"},keepalive:{zh:"心跳",en:"Keepalive"},expiryInterval:{zh:"会话过期间隔",en:"Session Expiry Interval"},createdAt:{zh:"会话创建时间",en:"Created At"},accessNode:{zh:"接入节点",en:"Access Node"},protocol:{zh:"接入协议",en:"Protocol"},protocolVersion:{zh:"协议版本",en:"Protocol Version"},protoType:{zh:"协议",en:"Protocol"},clearSession:{zh:"清除会话",en:"Clear Session"},SSL:{zh:"连接加密",en:"SSL"},connectedAt:{zh:"连接时间",en:"Connected At"},disconnectedAt:{zh:"断开连接时间",en:"Disconnected At"},connectedStatus:{zh:"状态",en:"Status"},connected:{zh:"已连接",en:"Connected"},disconnected:{zh:"未连接",en:"Disconnected"},disconnect:{zh:"断开连接",en:"Disconnect"},cleanSession:{zh:"清除会话",en:"Clean Session"},willDisconnectTheConnection:{zh:"此操作将踢除该客户端连接，是否继续？",en:"This operation will kick off the client, continue?"},willKickSelectedConnections:{zh:"此操作将踢除选中的客户端连接，已选中 {n} 个客户端，是否继续？",en:"This operation will kick off the selected clients, {n} clients have been selected, continue?"},kickedOutSuc:{zh:"踢除成功",en:"Kicked out successfully"},willCleanSession:{zh:"确认清除会话？",en:"Confirm Clean Session?"},successfulDisconnection:{zh:"断开成功",en:"Successfully disconnect"},successfulCleanSession:{zh:"成功清除会话",en:"Session cleared successfully"},clientDetails:{zh:"客户端详情",en:"Client"},basicInfo:{zh:"基本信息",en:"Basic Info"},subscriptions:{zh:"订阅数",en:"Subscriptions"},subscriptionList:{zh:"订阅列表",en:"Subscriptions"},connectionInfo:{zh:"连接信息",en:"Connection Info"},sessionInfo:{zh:"会话信息",en:"Session Info"},isBridge:{zh:"桥接标识",en:"Bridge"},protocolType:{zh:"协议类型",en:"Protocol Type"},sslCert:{zh:"SSL 证书",en:"SSL"},subscription:{zh:"订阅数量",en:"Subscriptions"},inflight:{zh:"飞行窗口",en:"Inflight"},mqueue:{zh:"消息队列",en:"Message Queue"},heapSize:{zh:"进程堆栈",en:"Heap Size"},reductions:{zh:"调度递减计数",en:"Reductions"},mailbox:{zh:"进程邮箱中的消息数量",en:"Mailbox"},currentSubscription:{zh:"当前订阅",en:"Subscriptions"},node:{zh:"节点",en:"Node"},unsubscribe:{zh:"取消订阅",en:"Unsubscribe"},onLine:{zh:"在线",en:"Online"},unsubscribeTitle:{zh:"此操作将取消订阅该主题",en:"This action will cancel subscription to the topic"},recvCnt:{zh:"接收的 TCP 报文数量",en:"TCP Packets Received"},recvMsg:{zh:"接收的 PUBLISH 消息数量",en:"Received PUBLISH Messages"},recvOct:{zh:"接收字节数",en:"Bytes Received"},recvPkt:{zh:"接收的{proto}报文数量",en:"{proto}Packets Received"},sendCnt:{zh:"发送的 TCP 报文数量",en:"TCP Packets Sent"},sendMsg:{zh:"发送的 PUBLISH 消息数量",en:"PUBLISH Messages Sent"},sendOct:{zh:"发送字节数",en:"Bytes Sent"},sendPkt:{zh:"发送的{proto}报文数量",en:"{proto}Packets Sent"},sendLwPkt:{zh:"发送的报文数量",en:"Messages Sent"},recvMsgQos0:{zh:"QoS 0 消息流入",en:"QoS 0 Messages Received"},recvMsgQos1:{zh:"QoS 1 消息流入",en:"QoS 1 Messages Received"},recvMsgQos2:{zh:"QoS 2 消息流入",en:"QoS 2 Messages Received"},recvMsgDropped:{zh:"消息流入丢弃数",en:"Dropped Incoming Messages"},recvMsgDroppedAwaitPubrelTimeout:{zh:"消息流入丢弃数（过期）",en:"Dropped Incoming Messages (Expired)"},sendMsgQos0:{zh:"QoS 0 消息流出",en:"QoS 0 Messages Sent"},sendMsgQos1:{zh:"QoS 1 消息流出",en:"QoS 1 Messages Sent"},sendMsgQos2:{zh:"QoS 2 消息流出",en:"QoS 2 Messages Sent"},sendMsgDropped:{zh:"消息流出丢弃数",en:"Dropped Outgoing Messages"},sendMsgDroppedExpired:{zh:"消息流出丢弃数（过期）",en:"Dropped Outgoing Messages (Expired)"},sendMsgDroppedQueueFull:{zh:"消息流出丢弃数（队列已满）",en:"Dropped Outgoing Messages (Queue Full)"},sendMsgDroppedTooLarge:{zh:"消息流出丢弃数（消息过大）",en:"Dropped Outgoing Messages (Oversize)"},kickOut:{zh:"踢除",en:"Kick Out"},awaitingRel:{zh:"QoS 2 报文接收队列",en:"QoS 2 Message Receive Queue"},collapse:{zh:"折叠",en:"Collapse"},expand:{zh:"展开",en:"Expand"},authSuccess:{zh:"认证成功",en:"Auth Success"},authFailed:{zh:"认证失败",en:"Auth Failed"},connectSuccess:{zh:"连接成功",en:"Connected"},clientDetailErr:{zh:"客户端详情获取出错",en:"There are some errors occurred in retrieving the client's detail"},endpointName:{zh:"Endpoint",en:"Endpoint"},lifetime:{zh:"注册时间",en:"LifeTime"},clientDoesNotExist:{zh:"该客户端不存在",en:"The client does not exist"},gte:{zh:"在此之后",en:"After"},lte:{zh:"在此之前",en:"Before"},bytes:{zh:"流量收发（字节）",en:"Bytes"},packets:{zh:"报文",en:"Packets"},messages:{zh:"消息数量",en:"Messages"},wildcardSupported:{zh:"支持使用主题通配符",en:"Topic Wildcards is available"},wildcard:{zh:"通配符",en:"Wildcard"},topicFilterDesc:{zh:"例如，输入 test/#，将过滤得到 topic 是 test/1、test/2 等的订阅",en:"e.g. typing test/# will filter for subscriptions where the topic is test/1, test/2, etc."},noLocal:{zh:"No Local",en:"No Local"},retainAsPublished:{zh:"Retain as Published",en:"Retain as Published"},retainHandling:{zh:"Retain Handling",en:"Retain Handling"},topicRequired:{zh:"主题不能为空",en:"Topic is required"},topic:{zh:"主题",en:"Topic"},qos:{zh:"QoS",en:"QoS"},payload:{zh:"Payload",en:"Payload"},from_clientid:{zh:"来自于客户端 ID",en:"From Client ID"},from_username:{zh:"来自于用户名",en:"From Username"},reason:{zh:"原因",en:"Reason"},peername:{zh:"Peername",en:"Peername"},action:{zh:"动作",en:"Action"},result:{zh:"结果",en:"Result"},reason_code:{zh:"原因码",en:"Reason Code"},neverExpire:{zh:"永不过期",en:"Never Expire"}}},"2f20":function(e,n,t){"use strict";t.r(n),n["default"]={topic:{zh:"主题",en:"Topic"}}},"2fc2":function(e,n,t){"use strict";t.d(n,"N",(function(){return c})),t.d(n,"M",(function(){return l})),t.d(n,"o",(function(){return d})),t.d(n,"L",(function(){return h})),t.d(n,"F",(function(){return u})),t.d(n,"H",(function(){return m})),t.d(n,"B",(function(){return b})),t.d(n,"D",(function(){return p})),t.d(n,"k",(function(){return f})),t.d(n,"n",(function(){return _})),t.d(n,"E",(function(){return g})),t.d(n,"t",(function(){return z})),t.d(n,"r",(function(){return S})),t.d(n,"s",(function(){return v})),t.d(n,"m",(function(){return y})),t.d(n,"z",(function(){return T})),t.d(n,"J",(function(){return k})),t.d(n,"y",(function(){return w})),t.d(n,"e",(function(){return P})),t.d(n,"b",(function(){return C})),t.d(n,"d",(function(){return D})),t.d(n,"c",(function(){return M})),t.d(n,"w",(function(){return E})),t.d(n,"x",(function(){return R})),t.d(n,"C",(function(){return x})),t.d(n,"G",(function(){return A})),t.d(n,"l",(function(){return q})),t.d(n,"a",(function(){return L})),t.d(n,"v",(function(){return I})),t.d(n,"f",(function(){return Q})),t.d(n,"g",(function(){return O})),t.d(n,"j",(function(){return B})),t.d(n,"q",(function(){return U})),t.d(n,"A",(function(){return j})),t.d(n,"K",(function(){return H})),t.d(n,"h",(function(){return F})),t.d(n,"u",(function(){return K})),t.d(n,"i",(function(){return W})),t.d(n,"I",(function(){return $})),t.d(n,"p",(function(){return G}));var s,o,a,i=t("fc11"),r=(t("4ec9"),t("d3b7"),t("3ca3"),t("ddb0"),t("a15b"),t("d81d"),t("ca5a")),c={Connecting:"MCONNECTING",Connected:"MCONNECTED",Disconnecting:"MDISCONNECTING",Disconnected:"MDISCONNECTED",Reconnecting:"MRECONNECTING"},l=new Map([[!1,"verify_none"],[!0,"verify_peer"]]),d=l.get(!0),h=[r["x"].Plaintext,r["x"].Base64,r["x"].JSON,r["x"].Hex],u="$events/",m="rule-topology",b=[r["A"].QoS0,r["A"].QoS1,r["A"].QoS2],p=",",f="t/#",_="*",g="$bridges/",z=(s={},Object(i["a"])(s,r["n"].STOMP,[r["a"].SCRAM]),Object(i["a"])(s,r["n"].CoAP,[r["a"].SCRAM]),Object(i["a"])(s,r["n"].ExProto,[r["a"].SCRAM]),Object(i["a"])(s,r["n"].MQTT_SN,[r["a"].SCRAM,r["a"].JWT]),Object(i["a"])(s,r["n"].LwM2M,[r["a"].SCRAM,r["a"].JWT]),s),S=(o={},Object(i["a"])(o,r["n"].STOMP,[]),Object(i["a"])(o,r["n"].CoAP,[]),Object(i["a"])(o,r["n"].ExProto,[]),Object(i["a"])(o,r["n"].MQTT_SN,[r["j"].BuiltInDatabase,r["j"].MySQL,r["j"].MongoDB,r["j"].PostgreSQL,r["j"].Redis]),Object(i["a"])(o,r["n"].LwM2M,[r["j"].BuiltInDatabase,r["j"].MySQL,r["j"].MongoDB,r["j"].PostgreSQL,r["j"].Redis]),o),v=(a={},Object(i["a"])(a,r["n"].CoAP,[r["s"].TCP,r["s"].SSL]),Object(i["a"])(a,r["n"].LwM2M,[r["s"].TCP,r["s"].SSL]),Object(i["a"])(a,r["n"].MQTT_SN,[r["s"].TCP,r["s"].SSL]),Object(i["a"])(a,r["n"].STOMP,[r["s"].UDP,r["s"].DTLS]),a),y=r["E"].Suffix,T=["plain","md5","sha","sha256","sha512"],k=["max_subscriptions","upgrade_qos","max_inflight","retry_interval","max_awaiting_rel","await_rel_timeout","session_expiry_interval","max_mqueue_len","mqueue_priorities","mqueue_default_priority","mqueue_store_qos0"],w=[{label:"v3.1",value:"v3"},{label:"v3.1.1",value:"v4"},{label:"v5",value:"v5"}],P="${clientid}, ${username}, ${password}",C="${username}, ${clientid}, ${peerhost}, ${cert_common_name}, ${cert_subject}",D="${username}, ${clientid}, ${peerhost}",M="${username}, ${clientid}, ${peerhost}, ${mountpoint}, ${topic}, ${action}",E=["01","02","03","04","05"],R=["01","02","04","10","11","18","19","80","81","82","83","84","85","86","87","88","89","8A","8B","8C","8D","8E","8F","90","91","92","93","94","95","96","97","98","99","9A","9B","9C","9D","9E","9F","A0","A1","A2"],x="ECONNABORTED",A=100,q="public",L=["admin","root","administrator"],N=Object({NODE_ENV:"production",VUE_APP_EMQX_VERSION:"v5.1",BASE_URL:""}).VUE_APP_VERSION,I="enterprise"===N,Q=[r["d"].Webhook,r["d"].MQTT,r["d"].InfluxDB,r["d"].Kafka,r["d"].Pulsar],O=[r["d"].MQTT],B="_duplication",U=/^\*{6}$/,j=/^(?![\d]+$)(?![a-zA-Z]+$)(?![^\da-zA-Z]+$)[ -~]{8,64}$/,H=parseInt("0xFFFFFFFF",16),F=["crt","key","pem","jks","der","cer","pfx"].map((function(e){return".".concat(e)})).join(", "),K="infinity",W=/^[A-Za-z0-9]+[A-Za-z0-9-_]*$/,$={sm:12,md:12,lg:6},G="v5.1"},3183:function(e,n,t){"use strict";t.r(n),n["default"]={mqtt:{zh:"MQTT",en:"MQTT"},cluster:{zh:"集群",en:"Cluster"},log:{zh:"日志",en:"Log"},dashboard:{zh:"仪表盘",en:"Dashboard"},global:{zh:"全局",en:"Global"},default:{zh:"默认",en:"Default"},listenerZoneDesc:{zh:"监听器所属的配置组，一个 Zone 定义了一组配置项 (比如最大连接数等)，Listener 可以通过该配置项指定使用某个 Zone，以使用该 Zone 下的所有配置。多个 Listener 可以共享同一个 Zone",en:"The configuration group to which the listener belongs. A Zone defines a set of configuration items (such as the maximum number of connections), and a Listener can specify a Zone to use all the configurations in the Zone. Multiple Listeners can share the same Zone."},mqttPath:{zh:"WebSocket 连接的路径，例如 /mqtt，作用是指定 WebSocket 连接的路径，以便在服务器上找到正确的 WebSocket 端点",en:"The path of the WebSocket connection, such as /mqtt, is used to specify the path of the WebSocket connection so that the correct WebSocket endpoint can be found on the server."},confirmRemove:{zh:"此操作将移除 {name}，是否继续？",en:"This will remove {name}, continue?"},readOnlyTip:{zh:"此配置项不支持热配置，请到配置文件内修改并重启服务",en:"This configuration does not support online-reload. Please update the config file and restart EMQX."},telemetry:{zh:"遥测数据",en:"Telemetry"},telemetryTip:{zh:"遥测收集有关 EMQX 使用情况的信息，与我们共享这些指标可以帮助我们更好地了解您如何使用我们的产品，并可以持续地帮助我们改进产品",en:"Telemetry collects information about EMQX usage. Sharing these metrics helps us to better understand how EMQX is used, so we can continuously improve it."},enableTelemetry:{zh:"启动遥测",en:"Enable telemetry"},rate:{zh:"速率限制",en:"Rate Limit"},limiter:{zh:"速率限制器",en:"Limiter"},invaiteNode:{zh:"邀请节点",en:"Invite nodes"},inviteNodeDesc:{zh:"当集群节点的服务发现方法 ('cluster.discovery_strategy') 是 'manual' 的时候，可手动邀请节点加入集群",en:"When 'cluster.service_discovery' is configured with 'manual', you may invite another node to join the cluster."},removeNodeConfirm:{zh:"是否移除该节点？",en:"This will remove the current node Continue?"},invite:{zh:"邀请",en:"Invite"},inviteSuccess:{zh:"邀请成功",en:"Invite Successfully"},clusterType:{zh:"集群方式",en:"Cluster Type"},currentNode:{zh:"当前节点",en:"Current Node"},nodeRequired:{zh:"请输入节点名称",en:"Node name is required"},basic:{zh:"基础",en:"Basic"},newBucket:{zh:"新建桶",en:"New Bucket"},bucketName:{zh:"桶名称",en:"Bucket Name"},duplicateBucket:{zh:"复制桶",en:"Duplicate Bucket"},bucketNameRequired:{zh:"请输入桶名称",en:"Bucket name is required"},bucketNameExist:{zh:"桶已存在",en:"Bucket already exists"},dashboardHttpTip:{zh:"部分参数修改后，可能需要重新启动 EMQX Dashboard ！",en:"Some parameters need to be restarted EMQX Dashboard to take effect!"},limierNameRegError:{zh:"请输入由字母和数字组成的名称",en:"Please enter a name composed of letters and numbers"},confirmDeleteListenerType:{zh:"请输入监听器的名称来确认删除",en:"Please type the listener name to confirm."},acceptors:{zh:"接收器",en:"Acceptors"},proxyProtocol:{zh:"代理协议",en:"Proxy Protocol"},proxyProtocolTimeout:{zh:"代理协议超时",en:"Proxy Protocol Timeout"},connectionTitle:{zh:"连接",en:"Connection"},vm:{zh:"Erlang 虚拟机",en:"Erlang VM"},os:{zh:"操作系统",en:"Operating System"},console:{zh:"控制台日志",en:"Console Log"},file:{zh:"文件日志",en:"File Log"},connection:{zh:"连接速率",en:"Connection"},rateMatchError:{zh:"请输入格式正确的速率配置",en:"Please enter a properly formatted rate configuration"}}},3309:function(e){e.exports=JSON.parse('{"emqx_resource_schema":{"auto_restart_interval":{"desc":"资源断开以后，自动重连的时间间隔。","label":"自动重连间隔"},"batch_size":{"desc":"最大批量请求大小。如果设为1，则无批处理。","label":"最大批量请求大小"},"batch_time":{"desc":"在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。","label":"批量等待最大间隔"},"creation_opts":{"desc":"资源启动相关的选项。","label":"资源启动选项"},"enable_batch":{"desc":"启用批量模式。","label":"启用批量模式"},"enable_queue":{"desc":"启用磁盘缓存队列（仅对 egress 方向桥接有用）。","label":"启用磁盘缓存队列"},"health_check_interval":{"desc":"健康检查间隔。","label":"健康检查间隔"},"inflight_window":{"desc":"请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。","label":"请求飞行队列窗口"},"max_queue_bytes":{"desc":"每个缓存 worker 允许使用的最大字节数。","label":"缓存队列最大长度"},"query_mode":{"desc":"请求模式。可选 \'同步/异步\'，默认为\'异步\'模式。","label":"请求模式"},"request_ttl":{"desc":"从请求进入缓冲区开始计时，如果请求在规定的时间内仍停留在缓冲区内或者已发送但未能及时收到响应或确认，该请求将被视为过期。","label":"请求超期"},"resource_opts":{"desc":"资源相关的选项。","label":"资源选项"},"resume_interval":{"desc":"在发送失败后尝试重传飞行窗口中的请求的时间间隔。","label":"重试时间间隔"},"start_after_created":{"desc":"是否在创建资源后立即启动资源。","label":"创建后立即启动"},"start_timeout":{"desc":"在回复资源创建请求前等待资源进入健康状态的时间。","label":"启动超时时间"},"worker_pool_size":{"desc":"缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。","label":"缓存池大小"},"max_buffer_bytes":{"label":"缓存队列最大长度","desc":"每个缓存 worker 允许使用的最大字节数。"}}}')},"3ad0":function(e,n,t){"use strict";t.r(n),n["default"]={language:{zh:"语言",en:"Language"},languageTip:{zh:"选择 Dashboard 页面内所展示的语言",en:"Select the language displayed in the Dashboard page"},theme:{zh:"主题",en:"Theme"},themeTip:{zh:"Dashboard 的系统主题颜色，支持明亮和暗黑。当开启同步操作系统主题时，将无法手动切换主题",en:"Dashboard's system theme, supporting Light and Dark. When Sync OS theme is enabled, it will not be possible to switch themes manually"},light:{en:"Light",zh:"明亮"},dark:{en:"Dark",zh:"暗黑"},syncOsTheme:{zh:"同步操作系统主题",en:"Sync OS Theme"},syncOsThemeTip:{zh:"开启后，系统将跟随操作系统主题自动切换",en:"Automatically switch between Light and Night themes when your system does."},mqttStudy:{zh:"MQTT 协议入门与进阶",en:"The Easy-to-understand Guide to MQTT Protocol"},findMQTTClient:{zh:"找到合适您的 MQTT 客户端",en:"Choosing the best MQTT client for your needs"},mqttV5Intro:{zh:"MQTT 5.0 介绍",en:"MQTT 5.0 Introduction"},gettingStarted:{zh:"EMQX 快速入门指南",en:"EMQX Getting Started Guide"},dashboardIntro:{zh:"EMQX Dashboard 介绍",en:"EMQX Dashboard Introduction"},howAccessControl:{zh:"如何进行访问控制",en:"How to implement Access Control"},howDataBridge:{zh:"如何使用数据桥接",en:"How to use Data Bridge"},howRuleEngine:{zh:"如何使用规则引擎",en:"How to use Rule Engine"},learnConfig:{zh:"EMQX 配置文件指南",en:"EMQX Configuration Files Guide"},restAPI:{zh:"使用 EMQX REST API",en:"Working with EMQX REST API"},faq:{zh:"常见问题解答",en:"FAQ"},tryEnterprise:{zh:"免费下载 EMQX 企业版",en:"Download EMQX Enterprise"},tryCloud:{zh:"免费试用 EMQX Cloud",en:"Try EMQX Cloud for free"},exploreMqtt:{zh:"探索 MQTT",en:"Explore MQTT"}}},4678:function(e,n,t){var s={"./af":"2bfb","./af.js":"2bfb","./ar":"8e73","./ar-dz":"a356","./ar-dz.js":"a356","./ar-kw":"423e","./ar-kw.js":"423e","./ar-ly":"1cfd","./ar-ly.js":"1cfd","./ar-ma":"0a84","./ar-ma.js":"0a84","./ar-sa":"8230","./ar-sa.js":"8230","./ar-tn":"6d83","./ar-tn.js":"6d83","./ar.js":"8e73","./az":"485c","./az.js":"485c","./be":"1fc1","./be.js":"1fc1","./bg":"84aa","./bg.js":"84aa","./bm":"a7fa","./bm.js":"a7fa","./bn":"9043","./bn-bd":"9686","./bn-bd.js":"9686","./bn.js":"9043","./bo":"d26a","./bo.js":"d26a","./br":"6887","./br.js":"6887","./bs":"2554","./bs.js":"2554","./ca":"d716","./ca.js":"d716","./cs":"3c0d","./cs.js":"3c0d","./cv":"03ec","./cv.js":"03ec","./cy":"9797","./cy.js":"9797","./da":"0f14","./da.js":"0f14","./de":"b469","./de-at":"b3eb","./de-at.js":"b3eb","./de-ch":"bb71","./de-ch.js":"bb71","./de.js":"b469","./dv":"598a","./dv.js":"598a","./el":"8d47","./el.js":"8d47","./en-au":"0e6b","./en-au.js":"0e6b","./en-ca":"3886","./en-ca.js":"3886","./en-gb":"39a6","./en-gb.js":"39a6","./en-ie":"e1d3","./en-ie.js":"e1d3","./en-il":"7333","./en-il.js":"7333","./en-in":"ec2e","./en-in.js":"ec2e","./en-nz":"6f50","./en-nz.js":"6f50","./en-sg":"b7e9","./en-sg.js":"b7e9","./eo":"65db","./eo.js":"65db","./es":"898b","./es-do":"0a3c","./es-do.js":"0a3c","./es-mx":"b5b7","./es-mx.js":"b5b7","./es-us":"55c9","./es-us.js":"55c9","./es.js":"898b","./et":"ec18","./et.js":"ec18","./eu":"0ff2","./eu.js":"0ff2","./fa":"8df4","./fa.js":"8df4","./fi":"81e9","./fi.js":"81e9","./fil":"d69a","./fil.js":"d69a","./fo":"0721","./fo.js":"0721","./fr":"9f26","./fr-ca":"d9f8","./fr-ca.js":"d9f8","./fr-ch":"0e49","./fr-ch.js":"0e49","./fr.js":"9f26","./fy":"7118","./fy.js":"7118","./ga":"5120","./ga.js":"5120","./gd":"f6b4","./gd.js":"f6b4","./gl":"8840","./gl.js":"8840","./gom-deva":"aaf2","./gom-deva.js":"aaf2","./gom-latn":"0caa","./gom-latn.js":"0caa","./gu":"e0c5","./gu.js":"e0c5","./he":"c7aa","./he.js":"c7aa","./hi":"dc4d","./hi.js":"dc4d","./hr":"4ba9","./hr.js":"4ba9","./hu":"5b14","./hu.js":"5b14","./hy-am":"d6b6","./hy-am.js":"d6b6","./id":"5038","./id.js":"5038","./is":"0558","./is.js":"0558","./it":"6e98","./it-ch":"6f12","./it-ch.js":"6f12","./it.js":"6e98","./ja":"079e","./ja.js":"079e","./jv":"b540","./jv.js":"b540","./ka":"201b","./ka.js":"201b","./kk":"6d79","./kk.js":"6d79","./km":"e81d","./km.js":"e81d","./kn":"3e92","./kn.js":"3e92","./ko":"22f8","./ko.js":"22f8","./ku":"2421","./ku.js":"2421","./ky":"9609","./ky.js":"9609","./lb":"440c","./lb.js":"440c","./lo":"b29d","./lo.js":"b29d","./lt":"26f9","./lt.js":"26f9","./lv":"b97c","./lv.js":"b97c","./me":"293c","./me.js":"293c","./mi":"688b","./mi.js":"688b","./mk":"6909","./mk.js":"6909","./ml":"02fb","./ml.js":"02fb","./mn":"958b","./mn.js":"958b","./mr":"39bd","./mr.js":"39bd","./ms":"ebe4","./ms-my":"6403","./ms-my.js":"6403","./ms.js":"ebe4","./mt":"1b45","./mt.js":"1b45","./my":"8689","./my.js":"8689","./nb":"6ce3","./nb.js":"6ce3","./ne":"3a39","./ne.js":"3a39","./nl":"facd","./nl-be":"db29","./nl-be.js":"db29","./nl.js":"facd","./nn":"b84c","./nn.js":"b84c","./oc-lnc":"167b","./oc-lnc.js":"167b","./pa-in":"f3ff","./pa-in.js":"f3ff","./pl":"8d57","./pl.js":"8d57","./pt":"f260","./pt-br":"d2d4","./pt-br.js":"d2d4","./pt.js":"f260","./ro":"972c","./ro.js":"972c","./ru":"957c","./ru.js":"957c","./sd":"6784","./sd.js":"6784","./se":"ffff","./se.js":"ffff","./si":"eda5","./si.js":"eda5","./sk":"7be6","./sk.js":"7be6","./sl":"8155","./sl.js":"8155","./sq":"c8f3","./sq.js":"c8f3","./sr":"cf1e","./sr-cyrl":"13e9","./sr-cyrl.js":"13e9","./sr.js":"cf1e","./ss":"52bd","./ss.js":"52bd","./sv":"5fbd","./sv.js":"5fbd","./sw":"74dc","./sw.js":"74dc","./ta":"3de5","./ta.js":"3de5","./te":"5cbb","./te.js":"5cbb","./tet":"576c","./tet.js":"576c","./tg":"3b1b","./tg.js":"3b1b","./th":"10e8","./th.js":"10e8","./tk":"5aff","./tk.js":"5aff","./tl-ph":"0f38","./tl-ph.js":"0f38","./tlh":"cf75","./tlh.js":"cf75","./tr":"0e81","./tr.js":"0e81","./tzl":"cf51","./tzl.js":"cf51","./tzm":"c109","./tzm-latn":"b53d","./tzm-latn.js":"b53d","./tzm.js":"c109","./ug-cn":"6117","./ug-cn.js":"6117","./uk":"ada2","./uk.js":"ada2","./ur":"5294","./ur.js":"5294","./uz":"2e8c","./uz-latn":"010e","./uz-latn.js":"010e","./uz.js":"2e8c","./vi":"2921","./vi.js":"2921","./x-pseudo":"fd7e","./x-pseudo.js":"fd7e","./yo":"7f33","./yo.js":"7f33","./zh-cn":"5c3a","./zh-cn.js":"5c3a","./zh-hk":"49ab","./zh-hk.js":"49ab","./zh-mo":"3a6c","./zh-mo.js":"3a6c","./zh-tw":"90ea","./zh-tw.js":"90ea"};function o(e){var n=a(e);return t(n)}function a(e){if(!t.o(s,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return s[e]}o.keys=function(){return Object.keys(s)},o.resolve=a,e.exports=o,o.id="4678"},"4c61":function(e,n,t){"use strict";t.d(n,"l",(function(){return m})),t.d(n,"b",(function(){return b})),t.d(n,"a",(function(){return f})),t.d(n,"f",(function(){return _})),t.d(n,"w",(function(){return z})),t.d(n,"c",(function(){return S})),t.d(n,"n",(function(){return v})),t.d(n,"m",(function(){return y})),t.d(n,"C",(function(){return T})),t.d(n,"G",(function(){return k})),t.d(n,"v",(function(){return w})),t.d(n,"q",(function(){return P})),t.d(n,"j",(function(){return E})),t.d(n,"x",(function(){return R})),t.d(n,"u",(function(){return x})),t.d(n,"r",(function(){return A})),t.d(n,"t",(function(){return q})),t.d(n,"I",(function(){return O})),t.d(n,"d",(function(){return B})),t.d(n,"K",(function(){return U})),t.d(n,"B",(function(){return j})),t.d(n,"k",(function(){return H})),t.d(n,"A",(function(){return F})),t.d(n,"p",(function(){return K})),t.d(n,"E",(function(){return W})),t.d(n,"H",(function(){return $})),t.d(n,"J",(function(){return G})),t.d(n,"e",(function(){return X})),t.d(n,"D",(function(){return J})),t.d(n,"g",(function(){return V})),t.d(n,"o",(function(){return ne})),t.d(n,"s",(function(){return ae})),t.d(n,"F",(function(){return ie})),t.d(n,"h",(function(){return le})),t.d(n,"y",(function(){return de})),t.d(n,"z",(function(){return he})),t.d(n,"i",(function(){return ue}));var s=t("fc11"),o=t("f3f3"),a=t("c964"),i=t("d0ff"),r=t("0122"),c=(t("d0af"),t("6f59")),l=(t("96cf"),t("ac1f"),t("466d"),t("4d63"),t("c607"),t("2c3e"),t("25f0"),t("d3b7"),t("00b4"),t("fb6a"),t("c740"),t("1276"),t("a15b"),t("5319"),t("3ca3"),t("ddb0"),t("2b3d"),t("9861"),t("e9c4"),t("99af"),t("7db0"),t("a9e3"),t("d81d"),t("cb29"),t("498a"),t("b0c0"),t("b6802"),t("4de4"),t("4e82"),t("b64b"),t("159b"),t("4fadc"),t("6062"),t("2ef0")),d=t("c1df"),h=t.n(d),u=t("2fc2"),m=function(e){return h()(e).format("YYYY-MM-DD HH:mm:ss")},b=function(e,n){if("string"!==typeof e||"string"!==typeof n)throw!1;return!!String.prototype.match.call(e,new RegExp(n,"i"))};function p(e){if("number"===typeof e)return e;if(void 0===e)return 0;var n="KMGTP",t=new RegExp("^\\d+(\\.\\d+)?[".concat(n,"]$"));if("string"===typeof e&&t.test(e.toUpperCase())){var s=e.toUpperCase().slice(-1);return parseFloat(e)*Math.pow(1024,n.split("").findIndex((function(e){return e===s})))}return parseFloat(e)}var f=function(e,n){var t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],s=p(e)/p(n)*100;return s<1?t?1:Math.round(s):s?s>100?100:s:0},_=function(e,n){var t=new RegExp("^\\d+(.\\d+)?(".concat(n.join("|"),")$"));return t.test(e)},g=Object(c["a"])(/^[0-9]+(\.[0-9]+)?([\0-\/:-\uFFFF]+)$/,{unit:2}),z=function(e){var n,t=e.match(g);return t&&null!==(n=t.groups)&&void 0!==n&&n.unit?t.groups.unit:""},S=function(e,n,t){return void 0!==n&&void 0!==t?e>=n&&e<=t:void 0!==n?e>=n:void 0===t||e<=t},v=function(e){var n=document.createElement("iframe");n.src=e,n.style.display="none",document.body.appendChild(n)},y=function(e){var n,t,s=e.data,o=e.headers;if(s instanceof Blob){var a=(null===(n=o["content-disposition"])||void 0===n?void 0:n.replace(/\w+; filename=(.*)/,"$1"))||"file",i=new Blob([s],{type:o["content-type"]}),r=document.createElement("a"),c=window.URL.createObjectURL(i);r.href=c,r.download=decodeURI(a),r.style.display="none",document.body.appendChild(r),r.click(),null===(t=r.parentNode)||void 0===t||t.removeChild(r),window.URL.revokeObjectURL(c)}},T=function(e){try{return JSON.parse(e)}catch(n){console.error("An error occurred while parsing the JSON string")}},k=function(e,n){try{return"string"===typeof e?e:JSON.stringify(e,null,n)}catch(t){return console.error(t),"stringify error"}},w=function(e,n){var t=n.find((function(n){var t=n.value;return t===e}));return(null===t||void 0===t?void 0:t.label)||""},P=function(e){var n=Object(r["a"])(e);if("string"!==n&&"number"!==n)return e;var t=(new Intl.NumberFormat).format(Number(e));return"NaN"===t?"":t},C=48,D=97,M=String.fromCharCode.apply(String,Object(i["a"])(new Array(10).fill(C).map((function(e,n){return e+n})).concat(new Array(26).fill(D).map((function(e,n){return e+n}))))),E=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:8,n=M.length;return new Array(e).fill("").reduce((function(e){var t=Math.floor(Math.random()*n);return e+M.substring(t,t+1)}),"")},R=function(e){return e.trim().split(",").map((function(e){var n=e.trim();return n.replace(/'|"/g,"")})).join(", ")},x=function(e){var n=e.trim(),t="",s="",o="",a=null,i=/^FOREACH/i;if(a=i.test(n)?n.match(Object(c["a"])(/(.|\n)+WHERE((.|\n)+)/,{where:2})):n.match(Object(c["a"])(/^SELECT((.|\n)+)FROM((.|\n)+)(WHERE((.|\n)+))/i,{select:1,from:3,where:6}))||n.match(Object(c["a"])(/^SELECT((.|\n)+)FROM((.|\n)+)/i,{select:1,from:3})),a){var r=a,l=r.groups,d=l||{},h=d.foreach,u=void 0===h?"":h,m=d.select,b=void 0===m?"":m,p=d.from,f=void 0===p?"":p,_=d.where,g=void 0===_?"":_;t=u||b.trim(),s=R(f),g&&(o=g.trim())}return{fieldStr:t,fromStr:s,whereStr:o}},A=function(e){var n=/^FOREACH(.|\n)+/i.test(e);return n?e:e.split(",").map((function(e){return e.trim()})).join(",\n  ")},q=function(e){var n=e.type,t=e.name;return"".concat(n,":").concat(t)},L=["KB","MB","GB"],N=1024,I=1024*N,Q=1024*I,O=function(e,n){var t=function(e){return n?e.toFixed(n):e};return e<N?t(e)+"Byte":e<I?t(e/N)+"KB":e<Q?t(e/I)+"MB":t(e/Q)+"GB"},B=(new RegExp("^(\\d+(\\.\\d+)?)(".concat(L.join("|"),")$")),function(e){return e.filter((function(e){return!!e})).length>0}),U=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100;return new Promise((function(n){window.setTimeout((function(){n(!0)}),e)}))},j=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;return parseFloat(e.toFixed(n))},H=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(n){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(e.prev=0,!n.validate||!Object(l["isFunction"])(n.validate)){e.next=4;break}return e.next=4,n.validate();case 4:return e.abrupt("return",Promise.resolve());case 7:return e.prev=7,e.t0=e["catch"](0),F(),e.abrupt("return",Promise.reject(e.t0));case 11:case"end":return e.stop()}}),e,null,[[0,7]])})));return function(n){return e.apply(this,arguments)}}(),F=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:".el-form-item.is-error",n=document.querySelector(e);return!!n&&(n.scrollIntoView({behavior:"smooth",block:"center"}),!0)},K=function(e){var n=/.+\.(.+)/,t=e.match(n);return t?t[1]:""},W=function(e){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return e.sort((function(e,t){var s=e.localeCompare(t);return n?s:-s}))},$=function(e){return e.replace(/(^[a-z])|(\s[a-z])/g,(function(e){return e.toUpperCase()}))},G=function(e){return/^(http)/.test(e)?e:"http://".concat(e)},X=function e(n){var t=Object.keys(n).filter((function(t){return Object(l["isObject"])(n[t])&&!Array.isArray(n[t])&&(n[t]=e(n[t])),"string"===typeof n[t]&&!n[t]}));return Object(l["omit"])(n,t)},J=function(e){return e&&"string"===typeof e?e.replace(/\s/g," "):e},V=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4,t=new RegExp(".{1,".concat(n,"}"),"g");return e.match(t)},Y=/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/,Z=(new RegExp("\\[(?<text>[^\\]]+)\\]\\((?<link>".concat(Y.source,")\\)"),"g"),function(e){var n=Object(r["a"])(e);return"string"===n?"":void 0}),ee=function(e){var n=Object(l["cloneDeep"])(e),t=function e(n){var t=Object.keys(n);t.forEach((function(t){var s=n[t];"object"===Object(r["a"])(s)?e(n[t]):n[t]=Z(n[t])}))};return t(n),n},ne=function(e,n){var t=function e(n,t){var s=Object.keys(t);s.forEach((function(s){var o=t[s],a="object"===Object(r["a"])(o);s in n?a&&e(n[s],o):n[s]=a?ee(o):Z(o)}))};return t(e,n),e},te=/select\s+/i,se=/\s+from\s+/i,oe=/\s+where\s+/i,ae=function(e){if("string"!==typeof e)return e;var n=[te,se,oe].reduce((function(e,n){return n.test(e)?e.replace(n,(function(e){return"\n".concat(e.trim(),"\n  ")})):e}),e);return"\n"===n[0]?n.slice(1):n},ie=function(e){return Object(i["a"])(new Set(e))},re=new RegExp("".concat(u["j"],"$")),ce=new RegExp("".concat(u["j"],"_(?<numPart>\\d+)$")),le=function(e){return re.test(e)?"".concat(e,"_1"):ce.test(e)?e.replace(/\d+$/,(function(e){return(Number(e)+1).toString()})):"".concat(e).concat(u["j"])},de=function(e){return 0===Object.keys(e).length},he=function(e){if("string"!==typeof e)return!1;try{var n=JSON.parse(e);return"object"===Object(r["a"])(n)&&null!==n}catch(t){return!1}},ue=function(e,n){return e.reduce((function(e,t,a){return Object(o["a"])(Object(o["a"])({},e),{},Object(s["a"])({},t,a+n))}),{})}},"574c":function(e,n,t){"use strict";t.r(n),n["default"]={v300:{zh:"已接受连接",en:"Connection accepted"},v301:{zh:"服务端不支持客户端请求的MQTT协议级别",en:"The Server does not support the level of the MQTT protocol requested by the Client"},v302:{zh:"客户端标识符是正确的 UTF-8，但服务器不允许",en:"The Client identifier is correct UTF-8 but not allowed by the Server"},v303:{zh:"网络连接已建立，但 MQTT 服务不可用",en:"The Network Connection has been made but the MQTT service is unavailable"},v304:{zh:"用户名或密码中的数据格式错误",en:"The data in the user name or password is malformed"},v305:{zh:"客户端无权连接",en:"The Client is not authorized to connect"},v500:{zh:"授予的 QoS 0",en:"Granted QoS 0"},v501:{zh:"授予的 QoS 1",en:"Granted QoS 1"},v502:{zh:"授予 QoS 2",en:"Granted QoS 2"},v504:{zh:"与遗嘱消息断开连接",en:"Disconnect with Will Message"},v510:{zh:"没有匹配的订阅者",en:"No matching subscribers"},v511:{zh:"不存在订阅",en:"No subscription existed"},v518:{zh:"继续认证",en:"Continue authentication"},v519:{zh:"重新认证",en:"Re-authenticate"},v580:{zh:"未指定的错误",en:"Unspecified error"},v581:{zh:"畸形数据包",en:"Malformed Packet"},v582:{zh:"协议错误",en:"Protocol Error"},v583:{zh:"实现特定错误",en:"Implementation specific error"},v584:{zh:"不支持的协议版本",en:"Unsupported Protocol Version"},v585:{zh:"客户端标识符无效",en:"Client Identifier not valid"},v586:{zh:"错误的用户名或密码",en:"Bad User Name or Password"},v587:{zh:"未经授权",en:"Not authorized"},v588:{zh:"服务器无法使用",en:"Server unavailable"},v589:{zh:"服务器繁忙",en:"Server busy"},v58A:{zh:"禁止",en:"Banned"},v58B:{zh:"服务器关闭",en:"Server shutting down"},v58C:{zh:"错误的身份验证方法",en:"Bad authentication method"},v58D:{zh:"保持活动超时",en:"Keep Alive timeout"},v58E:{zh:"会话接管",en:"Session taken over"},v58F:{zh:"主题过滤器无效",en:"Topic Filter invalid"},v590:{zh:"主题名称无效",en:"Topic Name invalid"},v591:{zh:"正在使用的数据包标识符",en:"Packet Identifier in use"},v592:{zh:"未找到数据包标识符",en:"Packet Identifier not found"},v593:{zh:"超过接收最大值",en:"Receive Maximum exceeded"},v594:{zh:"主题别名无效",en:"Topic Alias invalid"},v595:{zh:"数据包太大",en:"Packet too large"},v596:{zh:"留言率太高",en:"Message rate too high"},v597:{zh:"超出配额",en:"Quota exceeded"},v598:{zh:"行政行为",en:"Administrative action"},v599:{zh:"有效载荷格式无效",en:"Payload format invalid"},v59A:{zh:"不支持保留",en:"Retain not supported"},v59B:{zh:"不支持 QoS",en:"QoS not supported"},v59C:{zh:"使用另一台服务器",en:"Use another server"},v59D:{zh:"服务器搬家了",en:"Server moved"},v59E:{zh:"不支持共享订阅",en:"Shared Subscriptions not supported"},v59F:{zh:"超出连接率",en:"Connection rate exceeded"},v5A0:{zh:"最长连接时间",en:"Maximum connect time"},v5A1:{zh:"不支持订阅标识符",en:"Subscription Identifiers not supported"},v5A2:{zh:"不支持通配符订阅",en:"Wildcard Subscriptions not supported"}}},"5a9d":function(e,n,t){"use strict";t.r(n),n["default"]={name:{zh:"名称",en:"Name"},numberOfHooks:{zh:"钩子数量",en:"Number of hooks"},success:{zh:"成功",en:"Success"},failure:{zh:"失败",en:"Failure"},rate:{zh:"速度",en:"Rate"},second:{zh:"秒",en:"Second"},status:{zh:"状态",en:"Status"},addExhook:{zh:"添加 ExHook",en:"Add ExHook"},hooks:{zh:"已注册钩子",en:"Hooks"},basicInfo:{zh:"基本信息",en:"Basic Info"},urlDesc:{zh:"回调服务器地址。需要配置为以 `http` 或 `https` 开头的 gRPC 服务器的 URL 地址。例如：`http://127.0.0.1:8080`。该 gRPC 服务器必须实现了 `exhook.proto` 中定义的 `HookProvider` 服务。",en:"Server address. This needs to be configured as the URL address of a gRPC server starting with `http` or `https`. For example: `http://127.0.0.1:8080`. The gRPC server must implement the `HookProvider` service defined in `exhook.proto`."},poolSizeDesc:{zh:"gRPC 客户端进程池大小。",en:"Process pool size for gRPC client. "},requestTimeOutDesc:{zh:"请求超时时间。请求超时后，视为本次请求失败。",en:"Request timeout. After the request timeout, the request is treated failure"},failedAction:{zh:"失败动作",en:"Failed Action"},failedActionDesc:{zh:"请求失败后的备用动作，目前仅对 ` client.authenticate` 和 `client.authorize` 钩子有效。可选值为 `ignore` ：忽略本次权限检查；`deny`：返回权限检查失败。",en:"Alternate action after request failure, currently only available for ` client.authenticate` and ` client.authorize` hooks. The available values are `ignore`: ignore this permission check; `deny`: return a permission check failure."},autoReconnect:{zh:"自动重连",en:"Auto Reconnect"},autoReconnectDesc:{zh:"是否开启自动重连。当加载 ExHook 回调服务器失败后，是否进行重试。",en:"If or not enable auto reconnect. If enabled, retry when loading ExHook callback server fails."},autoReconnectInterval:{zh:"自动重连周期",en:"Auto Reconnect Interval"},overview:{zh:"概览",en:"Overview"},registeredHooks:{zh:"已注册钩子",en:"Registered hooks"},metricsData:{zh:"指标数据",en:"Metrics Data"},currentRate:{zh:"当前速率",en:"Current Rate"},params:{zh:"参数",en:"Params"},connected:{zh:"已连接",en:"Connected"},connecting:{zh:"连接中",en:"Connecting"},stopped:{zh:"已停止",en:"Stopped"},error:{zh:"发生错误",en:"Error"},disabled:{zh:"禁用",en:"Disabled"},rateUnit:{zh:"次/秒",en:"time/sec"},nodeMetricsData:{zh:"节点指标",en:"Node Metrics"},nodeStatusDesc:{zh:"每个节点上钩子执行指标数据",en:"Hook execution metrics data on each node"}}},"5d78":function(e,n,t){"use strict";t.r(n),n["default"]={monitoringPlatform:{zh:"监控平台",en:"Monitoring platform"},monitoringPlatformFormItemLabel:{zh:"选择一个监控平台，配置完成后点击“帮助”按钮查看如何配置监控平台。",en:"Select a monitoring platform, click the Help button after configuration to see how to configure the monitoring platform."},enablePushgateway:{zh:"启用 Pushgateway",en:"Enable Pushgateway"},enablePushgatewayDesc:{zh:"启用后，EMQX 将会将监控数据推送到 Pushgateway，然后由 Prometheus 从 Pushgateway 中拉取数据。",en:"After enabling, EMQX will push the monitoring metrics data to the Pushgateway, and then Prometheus will pull the data from the Pushgateway."},interval:{zh:"采集间隔",en:"Interval"},jobName:{zh:"Job 名称",en:"Job Name"},jobNameDesc:{zh:"推送到 Pushgateway 的 Job 名称。可用变量为：<br/>\n- ${'{'}name{'}'}: EMQX 节点的名称。<br/>\n- ${'{'}host{'}'}: EMQX 节点主机名。<br/>\n例如，当 EMQX 节点名为 <code>emqx{'@'}127.0.0.1</code> 则 name 变量的值为 <code>emqx</code>，host 变量的值为 <code>127.0.0.1</code>。<br/>\n默认值为: <code>${'{'}name{'}'}/instance/${'{'}name{'}'}~${'{'}host{'}'}</code>",en:"Job Name that is pushed to the Pushgateway. Available variables:<br/>\n- ${'{'}name{'}'}: Name of EMQX node.<br/>\n- ${'{'}host{'}'}: Host name of EMQX node.<br/>\nFor example, when the EMQX node name is <code>emqx{'@'}127.0.0.1</code> then the <code>name</code> variable takes value <code>emqx</code> and the <code>host</code> variable takes value <code>127.0.0.1</code>.<br/>\nDefault value is: <code>${'{'}name{'}'}/instance/${'{'}name{'}'}~${'{'}host{'}'}</code>"},headersDesc:{zh:"推送到 Pushgateway 的 HTTP Headers 列表。<br/>\n例如，<code> {'{'} Authorization = \"some-authz-tokens\"{'}'}</code>",en:"A list of HTTP Headers when pushing to Pushgateway.<br/>\nFor example, <code> {'{'} Authorization = \"some-authz-tokens\"{'}'}</code>"},dataReportingInterval:{zh:"监控数据指标上报到监控服务的时间间隔。",en:"The time interval at which monitoring data metrics are reported to the monitoring service."},pushgatewayServer:{zh:"Pushgateway 服务",en:"Pushgateway Server"},pushgatewayDesc:{zh:"通常情况下不需要使用。启用后，将会在每个节点上启动 Pushgateway，用于收集 Prometheus Push 模式的监控数据。",en:"Usually not needed. When enabled, Pushgateway will be started on each node to collect Prometheus Push mode monitoring data."},learn:{zh:"了解",en:"Learn "},usePushgateway:{zh:"使用 Pushgateway",en:"Use Pushgateway"},whenToUsePushgateway:{zh:"何时使用 Pushgateway",en:"When to use Pushgateway"},promSetupHelp:{zh:"Prometheus 与 Grafana 配置帮助",en:"Prometheus and Grafana setup help"},promSetupHelpDesc:{zh:"EMQX 支持将数据集成到 Prometheus 服务中来监控数据，可以使用 Grafana 来可视化监控数据。通常使用默认方法即可完成配置，也可选择使用 Pushgateway。",en:"EMQX supports integrating data into the Prometheus service to monitor data, and you can use Grafana to visualize monitoring data. Usually the default method can be used to complete the configuration, or you can choose to use Pushgateway."},pushgatewayInstall:{zh:"安装 Pushgateway 或 Node Exporter 服务",en:"Install the Pushgateway or Node Exporter service"},promStepOne:{zh:"可以使用 Docker 来安装和启动 Pushgateway 服务，例如使用以下命令：",en:"You can use Docker to install and start the Pushgateway service, for example, use the following command:"},nodeExporterDesc:{zh:"对于监控物理机或虚拟机的系统信息可使用 Node Exporter, 点击查看 ",en:"For monitoring system information of physical machines or VM, you can use Node Exporter, click to view "},installNodeExporter:{zh:"安装和运行 Node Exporter。",en:"Installing and running the Node Exporter."},promConfig:{zh:"配置 Prometheus",en:"Configure Prometheus"},promConfigDesc:{zh:"生成 Prometheus 配置文件，包括 EMQX 服务地址，以及 EMQX 提供监控数据 API 的 Path。",en:"Generate a Prometheus configuration file, including the EMQX service address, and the Path of the EMQX monitoring metrics data API."},promStepTwo:{zh:"在 Prometheus 的配置文件中添加 Pushgateway 服务的地址，Node Exporter 和 Prometheus 的地址在有需要的情况下再添加。",en:"Add the address of the Pushgateway service to the Prometheus configuration file, and add the address of Node Exporter and Prometheus if necessary."},promRun:{zh:"再使用生成的配置文件来启动 Prometheus，例如使用以下命令：",en:"Then use the generated configuration file to start Prometheus, for example, use the following command:"},grafConfig:{zh:"配置 Grafana",en:"Configure Grafana"},promStepThree:{zh:"在 Grafana 中添加 Prometheus 作为数据源，然后添加配置或导入一个 Dashboard 来可视化监控数据，例如可使用以下启动命令：",en:"Add Prometheus as a data source in Grafana, then add a configuration or import a Dashboard to visualize the monitoring data, for example, you can use the following startup command:"},clickDownloadTemplateDesc:{zh:"点击下方按钮下载默认的 Grafana Dashboard 模版。",en:"Click the button below to download the default Grafana Dashboard template."},clickDonwnloadTemplate:{zh:"下载 Grafana 模版",en:"Download Grafana Template"},genPromConfig:{zh:"生成配置文件",en:"Generate Configuration File"},pushgatewayRequired:{zh:"请配置 Pushgateway 地址",en:"Please configure the Pushgateway address"},emqxRequired:{zh:"请配置 EMQX 地址",en:"Please configure the EMQX address"},metricsPathRequired:{zh:"请配置 metrics API path",en:"Please configure the metrics API path"}}},"5e3b":function(e,n,t){"use strict";t.r(n),n["default"]={selector:{zh:"查询器",en:"Selector"},CMD:{zh:"查询命令",en:"CMD"},clientTableExample:{zh:"客户端表结构参考：",en:"The Client Table Example:"},supportedPlaceholders:{zh:"其中 {0} 语句支持的占位符有：",en:"The {0} supports the following placeholders："},authnSQLParagraph1:{zh:"当启用 加盐方式 后，SQL 语句需要从 {0} 中查询出 password_hash  salt 字段。",en:"When the Salt Position is enabled, the SQL needs to query out the password_hash salt from {0}."},authnSQLParagraph2:{zh:"支持查询 is_superuser 字段来向客户端赋予超级权限。",en:"Allows querying is_superuser field to grant superuser privileges to a client."},authnMongoDBParagraph1:{zh:"当启用 加盐方式 后，查询器需要从 MongoDB 中查询出 password_hash  salt 字段。",en:"When the Salt Position is enabled, the Selector needs to query out the password_hash salt from MongoDB."},authnMongoDBParagraph2:{zh:"支持设置 `is_superuser` 字段 来向客户端赋予超级权限。",en:"Allows setting `is_superuser` Field to grant superuser privileges to a client."},authnRedisParagraph1:{zh:"当启用 加盐方式 后，查询命令需要从 Redis 中查询出 password_hash  salt 字段。",en:"When the Salt Position is enabled, the CMD needs to query out the password_hash salt from Redis."},dataStructuresAndCommandExamples:{zh:"示例数据和命令：",en:"Data Structures and Command Examples:"},authnHTTPParagraph1:{zh:"HTTP 认证器将客户端信息传递给服务器，并通过 HTTP 返回值来判断是否具有权限",en:"The HTTP authenticator passes the client information to the server and uses the HTTP response to determine if it has permission."},authnHTTPParagraph2:{zh:"其中请求 Body 支持的占位符有：",en:"The Request Body supports the following placeholders: "},authnHTTPParagraph3:{zh:"HTTP 应答支持设置 is_superuser 字段来向客户端赋予超级权限。",en:"The HTTP Response supports setting is_superuser field to grant superuser privileges to the client."},theTableStructureExample:{zh:"表结构示例：",en:"The Table Structure Example:"},authzSupportedPlaceholders:{zh:"{0} 语句支持的占位符有：",en:"The {0} supports the following placeholders: "},authzSQLParagraph1:{zh:"SQL 语句需要从 {0} 中查询出包含 action permission topic 字段的数据列表",en:"The SQL needs to query a list of data containing the action permission topic field from {0}"},authzMongoDBParagraph1:{zh:"查询器需要从 MongoDB 中查询出包含 action permission topics 字段的数据列表",en:"The Selector needs to query a list of data from MongoDB that contains action permission  topics field"},dataStructureExample:{zh:"数据结构示例：",en:"Data Structure Example:"},authzRedisParagraph1:{zh:"查询命令需要从 Redis 中查询出键为TopicFilter 值为 Action 的权限表",en:"The CMD needs to query the permission records from Redis with the key as TopicFilter and the value as Action"},authzHTTPParagraph1:{zh:"HTTP 授权器 将授权请求传递给服务器，并通过 HTTP 返回值来判断是否具有权限",en:"HTTP Authorizer request to the server and uses the HTTP response to determine if it has permission to access"}}},6195:function(e){e.exports=JSON.parse('{"emqx_conf_schema":{"common_handler_drop_mode_qlen":{"desc":"当缓冲的日志事件数大于此值时，新的日志事件将被丢弃。起到过载保护的功能。\\n为了使过载保护算法正常工作必须要：<code> sync_mode_qlen =< drop_mode_qlen =< flush_qlen </code> 且 drop_mode_qlen > 1\\n要禁用某些模式，请执行以下操作。\\n- 如果sync_mode_qlen被设置为0，所有的日志事件都被同步处理。也就是说，异步日志被禁用。\\n- 如果sync_mode_qlen被设置为与drop_mode_qlen相同的值，同步模式被禁用。也就是说，处理程序总是以异步模式运行，除非调用drop或flushing。\\n- 如果drop_mode_qlen被设置为与flush_qlen相同的值，则drop模式被禁用，永远不会发生。","label":"进入丢弃模式的队列长度"},"cluster_mcast_addr":{"desc":"指定多播 IPv4 地址。\\n当 cluster.discovery_strategy 为 mcast 时，此配置项才有效。","label":"多播地址"},"desc_cluster_dns":{"desc":"DNS SRV 记录服务发现。","label":"DNS SRV 记录服务发现"},"cluster_dns_name":{"desc":"指定 DNS A 记录的名字。emqx 会通过访问这个 DNS A 记录来获取 IP 地址列表。\\n当<code>cluster.discovery_strategy</code> 为 <code>dns</code> 时有效。","label":"DNS名称"},"rpc_keyfile":{"desc":"<code>rpc.certfile</code> 的私钥文件的路径。<br/>\\n注意：此文件内容是私钥，所以需要设置权限为 600。","label":"RPC 私钥文件"},"cluster_mcast_recbuf":{"desc":"接收数据报的内核级缓冲区的大小。\\n当 cluster.discovery_strategy 为 mcast 时，此配置项才有效。","label":"多播接收数据缓冲区"},"cluster_autoheal":{"desc":"集群脑裂自动恢复机制开关。","label":"节点脑裂自动修复机制"},"log_overload_kill_enable":{"desc":"日志处理进程过载时为保护自己节点其它的业务能正常，强制杀死日志处理进程。","label":"日志处理进程过载保护"},"node_etc_dir":{"desc":"<code>etc</code> 存放目录","label":"Etc 目录"},"cluster_proto_dist":{"desc":"分布式 Erlang 集群协议类型。可选值为:<br/>\\n- inet_tcp: 使用 IPv4 <br/>\\n- inet_tls: 使用 TLS，需要配合 <code>etc/ssl_dist.conf</code> 一起使用。","label":"集群内部通信协议"},"log_burst_limit_enable":{"desc":"启用日志限流保护机制。","label":"日志限流保护"},"dist_buffer_size":{"desc":"Erlang分布式缓冲区的繁忙阈值，单位是KB。","label":"Erlang分布式缓冲区的繁忙阈值(KB)"},"common_handler_max_depth":{"desc":"Erlang 内部格式日志格式化和 Erlang 进程消息队列检查的最大深度。","label":"最大深度"},"desc_log":{"desc":"EMQX 日志记录支持日志事件的多个接收器。 每个接收器由一个_log handler_表示，可以独立配置。","label":"日志"},"common_handler_flush_qlen":{"desc":"如果缓冲日志事件的数量增长大于此阈值，则会发生冲刷（删除）操作。 日志处理进程会丢弃缓冲的日志消息。\\n来缓解自身不会由于内存瀑涨而影响其它业务进程。日志内容会提醒有多少事件被删除。","label":"冲刷阈值"},"common_handler_chars_limit":{"desc":"设置单个日志消息的最大长度。 如果超过此长度，则日志消息将被截断。最小可设置的长度为100。\\n注意：如果日志格式为 JSON，限制字符长度可能会导致截断不完整的 JSON 数据。","label":"单条日志长度限制"},"cluster_k8s_namespace":{"desc":"当使用 k8s 方式并且 cluster.k8s.address_type 指定为 dns 类型时，\\n可设置 emqx 节点名的命名空间。与 cluster.k8s.suffix 一起使用用以拼接得到节点名列表。","label":"K8s 命名空间"},"node_name":{"desc":"节点名。格式为 \\\\<name>{\'@\'}\\\\<host>。其中 <host> 可以是 IP 地址，也可以是 FQDN。\\n详见 http://erlang.org/doc/reference_manual/distributed.html。","label":"节点名"},"rpc_port_discovery":{"desc":"<code>manual</code>: 通过 <code>tcp_server_port</code> 来发现端口。\\n<br/><code>stateless</code>: 使用无状态的方式来发现端口，使用如下算法。如果节点名称是 <code>\\nemqxN{\'@\'}127.0.0.1</code>, N 是一个数字，那么监听端口就是 5370 + N。","label":"RPC 端口发现策略"},"log_overload_kill_restart_after":{"desc":"如果处理进程终止，它会在以指定的时间后后自动重新启动。 `infinity` 不自动重启。","label":"处理进程重启机制"},"log_file_handler_rotation_size":{"desc":"此参数控制日志文件轮换。 `infinity` 意味着日志文件将无限增长，否则日志文件将在达到 `max_size`（以字节为单位）时进行轮换。\\n与 rotation count配合使用。如果 counter 为 10，则是10个文件轮换。","label":"日志文件轮换大小"},"desc_log_file_handler":{"desc":"日志处理进程将日志事件打印到文件。","label":"文件日志处理进程"},"rpc_socket_keepalive_count":{"desc":"keepalive 探测消息发送失败的次数，直到 RPC 连接被认为已经断开。","label":"RPC Socket Keepalive 次数"},"cluster_etcd_server":{"desc":"指定 etcd 服务的地址。如有多个服务使用逗号 , 分隔。\\n当 cluster.discovery_strategy 为 etcd 时，此配置项才有效。","label":"Etcd 服务器地址"},"db_backend":{"desc":"配置后端数据库驱动，默认值为 <code>rlog</code> 它适用于大规模的集群。\\n<code>mnesia</code> 是备选数据库，适合中小集群。","label":"内置数据库"},"desc_authorization":{"desc":"授权相关","label":"授权"},"cluster_etcd_ssl":{"desc":"当使用 TLS 连接 etcd 时的配置选项。\\n当 cluster.discovery_strategy 为 etcd 时，此配置项才有效。","label":"Etcd SSL 选项"},"rpc_insecure_fallback":{"desc":"兼容旧的无鉴权模式","label":"向后兼容旧的无鉴权模式"},"cluster_mcast_buffer":{"desc":"用户级缓冲区的大小。\\n当 cluster.discovery_strategy 为 mcast 时，此配置项才有效。","label":"多播用户级缓冲区"},"rpc_authentication_timeout":{"desc":"远程节点认证的超时时间。","label":"RPC 认证超时时间"},"cluster_call_retry_interval":{"desc":"当集群间调用出错时，多长时间重试一次。","label":"重试时间间隔"},"cluster_mcast_sndbuf":{"desc":"外发数据报的内核级缓冲区的大小。\\n当 cluster.discovery_strategy 为 mcast 时，此配置项才有效。","label":"多播发送缓存区"},"rpc_driver":{"desc":"集群间通信使用的传输协议。","label":"RPC 驱动"},"max_ets_tables":{"desc":"Erlang ETS 表的最大数量","label":"Erlang 表的最大数量"},"desc_db":{"desc":"内置数据库的配置。","label":"数据库"},"desc_cluster_etcd":{"desc":"使用 \'etcd\' 服务的服务发现。","label":"\'etcd\' 服务的服务发现"},"cluster_name":{"desc":"EMQX集群名称。每个集群都有一个唯一的名称。服务发现时会用于做路径的一部分。","label":"集群名称"},"log_rotation_enable":{"desc":"启用日志轮换功能。启动后生成日志文件后缀会加上对应的索引数字，比如：log/emqx.log.1。\\n系统会默认生成<code>*.siz/*.idx</code>用于记录日志位置，请不要手动修改这两个文件。","label":"日志轮换"},"cluster_call_cleanup_interval":{"desc":"清理过期事务的时间间隔","label":"清理间隔"},"desc_cluster_static":{"desc":"静态节点服务发现。新节点通过连接一个节点来加入集群。","label":"静态节点服务发现"},"db_default_shard_transport":{"desc":"定义用于推送事务日志的默认传输。<br/>\\n这可以在 <code>db.shard_transports</code> 中基于每个分片被覆盖。\\n<code>gen_rpc</code> 使用 <code>gen_rpc</code> 库，\\n<code>distr</code> 使用 Erlang 发行版。","label":"事务日志传输默认协议"},"cluster_static_seeds":{"desc":"集群中的EMQX节点名称列表，\\n指定固定的节点列表，多个节点间使用逗号 , 分隔。\\n当 cluster.discovery_strategy 为 static 时，此配置项才有效。\\n适合于节点数量较少且固定的集群。","label":"集群静态节点"},"log_overload_kill_qlen":{"desc":"允许的最大队列长度。","label":"最大队列长度"},"node_backtrace_depth":{"desc":"错误信息中打印的最大堆栈层数","label":"最大堆栈导数"},"desc_log_burst_limit":{"desc":"短时间内产生的大量日志事件可能会导致问题，例如：\\n  - 日志文件变得非常大\\n  - 日志文件轮换过快，有用信息被覆盖\\n  - 对系统的整体性能影响\\n\\n日志突发限制功能可以暂时禁用日志记录以避免这些问题。","label":"日志突发限制"},"common_handler_enable":{"desc":"启用此日志处理进程。","label":"启用日志处理进程"},"cluster_k8s_service_name":{"desc":"指定 Kubernetes 中 EMQX 的服务名。\\n当 cluster.discovery_strategy 为 k8s 时，此配置项才有效。","label":"K8s 服务别名"},"common_handler_rotation_count":{"desc":"轮换的最大日志文件数。","label":"最大日志文件数"},"node_cookie":{"desc":"分布式 Erlang 集群使用的 cookie 值。集群间保持一致","label":"节点 Cookie"},"db_role":{"desc":"选择节点的角色。<br/>\\n<code>core</code> 节点提供数据的持久性，并负责写入。建议将核心节点放置在不同的机架或不同的可用区。<br/>\\n<code>repliant</code> 节点是临时工作节点。 从集群中删除它们，不影响数据库冗余<br/>\\n建议复制节点多于核心节点。<br/>\\n注意：该参数仅在设置<code>backend</code>时生效到 <code>rlog</code>。","label":"数据库角色"},"rpc_tcp_server_port":{"desc":"RPC 本地服务使用的 TCP 端口。<br/>\\n只有当 rpc.port_discovery 设置为 manual 时，此配置才会生效。","label":"RPC TCP 服务监听端口"},"desc_console_handler":{"desc":"日志处理进程将日志事件打印到 EMQX 控制台。","label":"Console Handler"},"node_applications":{"desc":"当新EMQX 加入集群时，应重启的Erlang应用程序的列表。","label":"应用"},"log_burst_limit_max_count":{"desc":"在 `window_time` 间隔内处理的最大日志事件数。 达到限制后，将丢弃连续事件，直到 `window_time` 结束。","label":"日志事件数"},"rpc_tcp_client_num":{"desc":"设置本节点与远程节点之间的 RPC 通信通道的最大数量。","label":"RPC TCP 客户端数量"},"cluster_k8s_address_type":{"desc":"当使用 k8s 方式集群时，address_type 用来从 Kubernetes 接口的应答里获取什么形式的 Host 列表。\\n指定 <code>cluster.k8s.address_type</code> 为 <code>ip</code>，则将从 Kubernetes 接口中获取集群中其他节点\\n的IP地址。","label":"K8s 地址类型"},"rpc_socket_sndbuf":{"desc":"TCP 调节参数。TCP 发送缓冲区大小。","label":"RPC 套接字发送缓冲区大小"},"cluster_mcast_ttl":{"desc":"指定多播的 Time-To-Live 值。\\n当 cluster.discovery_strategy 为 mcast 时，此配置项才有效。","label":"多播TTL"},"db_core_nodes":{"desc":"当前节点连接的核心节点列表。<br/>\\n注意：该参数仅在设置<code>backend</code>时生效到 <code>rlog</code>\\n并且设置<code>role</code>为<code>replicant</code>时生效。<br/>\\n该值需要在手动或静态集群发现机制下设置。<br/>\\n如果使用了自动集群发现机制（如<code>etcd</code>），则不需要设置该值。","label":"数据库核心节点"},"log_file_handler_path":{"desc":"日志文件路径及名字。","label":"日志文件名字"},"node_dist_net_ticktime":{"desc":"系统调优参数，此配置将覆盖 vm.args 文件里的 -kernel net_ticktime 参数。当一个节点持续无响应多久之后，认为其已经宕机并断开连接。","label":"节点间心跳间隔"},"desc_cluster_k8s":{"desc":"Kubernetes 服务发现。","label":"Kubernetes 服务发现"},"desc_cluster_mcast":{"desc":"UDP 组播服务发现。","label":"UDP 组播服务发现"},"rpc_cacertfile":{"desc":"验证 <code>rpc.certfile</code> 的 CA 证书文件的路径。<br/>\\n注意：集群中所有节点的证书必须使用同一个 CA 签发。","label":"RPC CA 证书文件"},"desc_node":{"desc":"节点名称、Cookie、配置文件、数据目录和 Erlang 虚拟机（BEAM）启动参数。","label":"节点"},"cluster_k8s_apiserver":{"desc":"指定 Kubernetes API Server。如有多个 Server 使用逗号 , 分隔。\\n当 cluster.discovery_strategy 为 k8s 时，此配置项才有效。","label":"K8s 服务地址"},"common_handler_supervisor_reports":{"desc":"Supervisor 报告的类型。默认为 error 类型。<br/>\\n  - <code>error</code>：仅记录 Erlang 进程中的错误。\\n  - <code>progress</code>：除了 error 信息外，还需要记录进程启动的详细信息。","label":"报告类型"},"node_data_dir":{"desc":"节点数据存放目录，可能会自动创建的子目录如下：<br/>\\n- `mnesia/<node_name>`。EMQX的内置数据库目录。例如，`mnesia/emqx{\'@\'}127.0.0.1`。<br/>\\n如果节点要被重新命名（例如，`emqx{\'@\'}10.0.1.1`）。旧目录应该首先被删除。<br/>\\n- `configs`。在启动时生成的配置，以及集群/本地覆盖的配置。<br/>\\n- `patches`: 热补丁文件将被放在这里。<br/>\\n- `trace`: 日志跟踪文件。<br/>\\n\\n**注意**: 一个数据dir不能被两个或更多的EMQX节点同时使用。","label":"节点数据目录"},"cluster_k8s_suffix":{"desc":"当使用 k8s 方式并且 cluster.k8s.address_type 指定为 dns 类型时，可设置 emqx 节点名的后缀。\\n与 cluster.k8s.namespace 一起使用用以拼接得到节点名列表。","label":"K8s 前缀"},"db_rpc_module":{"desc":"集群间推送事务日志到复制节点使用的协议。","label":"RPC协议"},"cluster_etcd_prefix":{"desc":"指定 etcd 路径的前缀。每个节点在 etcd 中都会创建一个路径:\\nv2/keys/<prefix>/<cluster.name>/<node.name> <br/>\\n当 cluster.discovery_strategy 为 etcd 时，此配置项才有效。","label":"Etcd 路径前缀"},"cluster_mcast_iface":{"desc":"指定节点发现服务需要绑定到本地 IP 地址。\\n当 cluster.discovery_strategy 为 mcast 时，此配置项才有效。","label":"多播绑定地址"},"log_burst_limit_window_time":{"desc":"参考 <code>max_count</code>。","label":"Window Time"},"cluster_dns_record_type":{"desc":"DNS 记录类型。","label":"DNS记录类型"},"cluster_autoclean":{"desc":"指定多久之后从集群中删除离线节点。","label":"自动删除离线节点时间"},"process_limit":{"desc":"Erlang系统同时存在的最大进程数。\\n实际选择的最大值可能比设置的数字大得多。\\n参考: https://www.erlang.org/doc/man/erl.html","label":"Erlang 最大进程数"},"max_ports":{"desc":"Erlang系统同时存在的最大端口数。\\n实际选择的最大值可能比设置的数字大得多。\\n参考: https://www.erlang.org/doc/man/erl.html","label":"Erlang 最大端口数"},"desc_log_rotation":{"desc":"默认情况下，日志存储在 `./log` 目录（用于从 zip 文件安装）或 `/var/log/emqx`（用于二进制安装）。<br/>\\n这部分配置，控制每个日志处理进程保留的文件数量。","label":"日志轮换"},"desc_log_overload_kill":{"desc":"日志过载终止，具有过载保护功能。当日志处理进程使用过多内存，或者缓存的日志消息过多时该功能被激活。<br/>\\n检测到过载时，日志处理进程将终止，并在冷却期后重新启动。","label":"日志过载保护"},"authorization":{"desc":"授权（ACL）。EMQX 支持完整的客户端访问控制（ACL）。","label":"授权"},"rpc_socket_keepalive_idle":{"desc":"broker 之间的连接在最后一条消息发送后保持打开的时间。","label":"RPC Socket Keepalive Idle"},"desc_cluster_call":{"desc":"集群调用功能的选项。","label":"集群调用"},"cluster_mcast_ports":{"desc":"指定多播端口。如有多个端口使用逗号 , 分隔。\\n当 cluster.discovery_strategy 为 mcast 时，此配置项才有效。","label":"多播端口"},"log_overload_kill_mem_size":{"desc":"日志处理进程允许使用的最大内存。","label":"日志处理进程允许使用的最大内存"},"rpc_connect_timeout":{"desc":"建立 RPC 连接的超时时间。","label":"RPC 连接超时时间"},"cluster_etcd_node_ttl":{"desc":"指定 etcd 中节点信息的过期时间。\\n当 cluster.discovery_strategy 为 etcd 时，此配置项才有效。","label":"Etcd 节点过期时间"},"rpc_call_receive_timeout":{"desc":"同步 RPC 的回复超时时间。","label":"RPC 调用接收超时时间"},"rpc_socket_recbuf":{"desc":"TCP 调节参数。TCP 接收缓冲区大小。","label":"RPC 套接字接收缓冲区大小"},"db_tlog_push_mode":{"desc":"同步模式下，核心节点等待复制节点的确认信息，然后再发送下一条事务日志。","label":"Tlog推送模式"},"node_crash_dump_bytes":{"desc":"限制崩溃文件的大小，当崩溃时节点内存太大，\\n如果为了保存现场，需要全部存到崩溃文件中，此处限制最多能保存多大的文件。\\n如果超过此限制，崩溃转储将被截断。如果设置为0，系统不会尝试写入崩溃转储文件。","label":"崩溃文件最大容量"},"rpc_certfile":{"desc":"TLS 证书文件的路径，用于验证集群节点的身份。\\n只有当 <code>rpc.driver</code> 设置为 <code>ssl</code> 时，此配置才会生效。","label":"RPC 证书文件"},"node_crash_dump_seconds":{"desc":"该配置给出了运行时系统允许花费的写入崩溃转储的秒数。当给定的秒数已经过去，运行时系统将被终止。<br/>\\n- 如果设置为0秒，运行时会立即终止，不会尝试写入崩溃转储文件。<br/>\\n- 如果设置为一个正数 S，节点会等待 S 秒来完成崩溃转储文件，然后用SIGALRM信号终止运行时系统。<br/>\\n- 如果设置为一个负值导致运行时系统的终止等待无限期地直到崩溃转储文件已经完全写入。","label":"保存崩溃文件最长时间"},"log_file_handlers":{"desc":"输出到文件的日志处理进程列表","label":"File Handler"},"node_global_gc_interval":{"desc":"系统调优参数，设置节点运行多久强制进行一次全局垃圾回收。禁用设置为 <code>disabled</code>。","label":"全局垃圾回收"},"common_handler_time_offset":{"desc":"日志中的时间戳使用的时间偏移量。\\n可选值为：\\n  - <code>system</code>: 本地系统使用的时区偏移量\\n  - <code>utc</code>: 0 时区的偏移量\\n  - <code>+-[hh]:[mm]</code>: 自定义偏移量，比如 \\"-02:00\\" 或者 \\"+00:00\\"\\n默认值为本地系统的时区偏移量：<code>system</code>。","label":"时间偏移量"},"rpc_mode":{"desc":"在 <code>sync</code> 模式下，发送端等待接收端的 ack信号。","label":"RPC 模式"},"node_crash_dump_file":{"desc":"设置 Erlang crash_dump 文件的存储路径和文件名。","label":"节点崩溃时的Dump文件"},"cluster_mcast_loop":{"desc":"设置多播的报文是否投递到本地回环地址。\\n当 cluster.discovery_strategy 为 mcast 时，此配置项才有效。","label":"多播回环开关"},"rpc_socket_keepalive_interval":{"desc":"keepalive 消息的间隔。","label":"RPC Socket Keepalive 间隔"},"common_handler_level":{"desc":"当前日志处理进程的日志级别。\\n默认为 warning 级别。","label":"日志级别"},"desc_rpc":{"desc":"EMQX 使用 <code>gen_rpc</code> 库来实现跨节点通信。<br/>\\n大多数情况下，默认的配置应该可以工作，但如果你需要做一些性能优化或者实验，可以尝试调整这些参数。","label":"RPC"},"rpc_ssl_server_port":{"desc":"RPC 本地服务使用的监听SSL端口。<br/>\\n只有当 rpc.port_discovery 设置为 manual 且 <code> dirver </code> 设置为 <code>ssl</code>，\\n此配置才会生效。","label":"RPC SSL 服务监听端口"},"desc_cluster":{"desc":"EMQX 节点可以组成一个集群，以提高总容量。<br/> 这里指定了节点之间如何连接。","label":"集群"},"common_handler_sync_mode_qlen":{"desc":"只要缓冲的日志事件的数量低于这个值，所有的日志事件都会被异步处理。\\n这意味着，日志落地速度不会影响正常的业务进程，因为它们不需要等待日志处理进程的响应。\\n如果消息队列的增长超过了这个值，处理程序开始同步处理日志事件。也就是说，发送事件的客户进程必须等待响应。\\n当处理程序将消息队列减少到低于sync_mode_qlen阈值的水平时，异步操作就会恢复。\\n默认为100条信息，当等待的日志事件大于100条时，就开始同步处理日志。","label":"进入同步模式的队列长度"},"common_handler_formatter":{"desc":"选择日志格式类型。 <code>text</code> 用于纯文本，<code>json</code> 用于结构化日志记录。","label":"日志格式类型"},"rpc_async_batch_size":{"desc":"异步模式下，发送的批量消息的最大数量。","label":"异步模式下的批量消息数量"},"cluster_call_max_history":{"desc":"集群间调用最多保留的历史记录数。只用于排错时查看。","label":"最大历史记录"},"cluster_discovery_strategy":{"desc":"集群节点发现方式。可选值为:\\n- manual: 使用 <code>emqx ctl cluster</code> 命令管理集群。<br/>\\n- static: 配置静态节点。配置几个固定的节点，新节点通过连接固定节点中的某一个来加入集群。<br/>\\n- dns: 使用 DNS A 记录的方式发现节点。<br/>\\n- etcd: 使用 etcd 发现节点。<br/>\\n- k8s: 使用 Kubernetes API 发现节点。","label":"集群服务发现策略"},"rpc_send_timeout":{"desc":"发送 RPC 请求的超时时间。","label":"RPC 发送超时时间"},"common_handler_single_line":{"desc":"如果设置为 true，则单行打印日志。 否则，日志消息可能跨越多行。","label":"单行模式"},"rpc_socket_buffer":{"desc":"TCP 调节参数。用户模式套接字缓冲区大小。","label":"RPC 套接字缓冲区大小"},"db_shard_transports":{"desc":"允许为每个 shard 下的事务日志复制操作的传输方法进行调优。<br/>\\n<code>gen_rpc</code> 使用 <code>gen_rpc</code> 库，\\n<code>distr</code> 使用 Erlang 自带的 rpc 库。<br/>如果未指定，\\n默认是使用 <code>db.default_shard_transport</code> 中设置的值。","label":"事务日志传输协议"}},"emqx_limiter_schema":{"max_conn_rate":{"desc":"最大连接速率。<br/>\\n这用于限制此节点的连接速率，\\n一旦达到限制，新连接将被推迟或拒绝。","label":"最大连接速率"},"messages_rate":{"desc":"消息发布速率。<br/>\\n这用于限制该节点的入站消息数量，\\n一旦达到限制，受限客户端的消息发布将会减慢甚至暂停一段时间。","label":"消息发布速率"},"bytes_rate":{"desc":"数据发布速率。<br/>\\n这用于限制该节点的入站字节速率，\\n一旦达到限制，受限客户端的数据发布将会减慢甚至暂停一段时间。","label":"数据发布速率"}},"emqx_schema":{"fields_mqtt_quic_listener_peer_unidi_stream_count":{"desc":"允许对端打开的单向流的数量","label":"对端单向流的数量"},"fields_authorization_no_match":{"desc":"如果用户或客户端不匹配ACL规则，或者从可配置授权源(比如内置数据库、HTTP API 或 PostgreSQL 等。)内未找\\n到此类用户或客户端时，模式的认访问控制操作。\\n在“授权”中查找更多详细信息。","label":"未匹时的默认授权动作"},"sysmon_top_db_hostname":{"desc":"收集数据点的 PostgreSQL 数据库的主机名。","label":"数据库主机名"},"zones":{"desc":"<code>zone</code> 是按<code>name</code> 分组的一组配置。\\n对于灵活的配置映射，可以将 <code>name</code> 设置为侦听器的 <code>zone</code> 配置。\\n注：名为 <code>default</code> 的内置区域是自动创建的，无法删除。"},"fields_mqtt_quic_listener_certfile":{"desc":"证书文件。在 5.1 中会被废弃，使用 .ssl_options.certfile 代替。","label":"证书文件"},"fields_rate_limit_conn_bytes_in":{"desc":"限制 MQTT 连接接收数据包的速率。 速率以每秒的数据包字节数计算。","label":"数据包速率"},"crl_cache_capacity":{"desc":"缓存中可容纳的 CRL URL 的最大数量。 如果缓存的容量已满，并且必须获取一个新的 URL，那么它将驱逐缓存中插入的最老的 URL。","label":"CRL 缓存容量"},"alarm_actions":{"desc":"警报激活时触发的动作。<br/>目前，支持以下操作：<code>log</code> 和 <code>publish</code>.\\n<code>log</code> 将告警写入日志 (控制台或者文件).\\n<code>publish</code> 将告警作为 MQTT 消息发布到系统主题:\\n<code>$SYS/brokers/emqx{\'@\'}xx.xx.xx.x/alarms/activate</code> and\\n<code>$SYS/brokers/emqx{\'@\'}xx.xx.xx.x/alarms/deactivate</code>","label":"告警动作"},"base_listener_max_connections":{"desc":"监听器允许的最大并发连接数。","label":"最大并发连接数"},"mqtt_peer_cert_as_username":{"desc":"使用对端证书中的 CN、DN 字段或整个证书内容来作为用户名；仅适用于 TLS 连接。\\n目前支持：\\n- <code>cn</code>: 取证书的 CN 字段\\n- <code>dn</code>: 取证书的 DN 字段\\n- <code>crt</code>: 取 <code>DER</code> 或 <code>PEM</code> 的证书内容\\n- <code>pem</code>: 将 <code>DER</code> 证书转换为 <code>PEM</code> 格式作为用户名\\n- <code>md5</code>: 取 <code>DER</code> 或 <code>PEM</code> 证书内容的 MD5 值","label":"使用对端证书作为用户名"},"fields_cache_enable":{"desc":"启用或禁用授权缓存。","label":"启用或禁用授权缓存"},"fields_mqtt_quic_listener_disconnect_timeout_ms":{"desc":"在判定路径无效和断开连接之前，要等待多长时间的ACK。默认：16000","label":"断开连接超时 毫秒"},"mqtt_max_topic_alias":{"label":"最大主题别名数"},"common_ssl_opts_schema_user_lookup_fun":{"desc":"用于查找预共享密钥（PSK）标识的 EMQX 内部回调。","label":"SSL PSK 用户回调"},"fields_listeners_wss":{"desc":"HTTPS websocket 监听器。","label":"HTTPS websocket 监听器"},"sysmon_top_max_procs":{"desc":"当 VM 中的进程数超过此值时，停止收集数据。","label":"最大进程数"},"mqtt_use_username_as_clientid":{"desc":"是否使用用户名作为客户端 ID。 作用时间晚于 <code>对端证书作为用户名</code> 和 <code>对端证书作为客户端 ID</code>。","label":"使用用户名作为客户端 ID"},"mqtt_max_qos_allowed":{"label":"最大 QoS"},"fields_mqtt_quic_listener_max_binding_stateless_operations":{"desc":"在任何时候可以在一个绑定上排队的无状态操作的最大数量。默认值：100","label":"最大绑定无状态操作"},"fields_mqtt_quic_listener_stream_recv_buffer_default":{"desc":"流的初始缓冲区大小。默认：4096","label":"流媒体接收缓冲区默认值"},"fields_mqtt_quic_listener_pacing_enabled":{"desc":"有节奏的发送，以避免路径上的缓冲区过度填充。默认值：1（已启用）","label":"启用节奏发送"},"mqtt_max_subscriptions":{"desc":"允许每个客户端建立的最大订阅数量。","label":"最大订阅数量"},"persistent_session_builtin_messages_table":{"desc":"用于内建消息表的性能调优参数。","label":"持久化消息"},"sysmon_os_cpu_low_watermark":{"desc":"在解除相应警报之前可以使用多少系统 CPU 的阈值，以系统CPU负载的百分比表示。","label":"CPU 低水位线"},"fields_mqtt_quic_listener_tls_server_max_send_buffer":{"desc":"缓冲多少TLS数据。 默认值：8192","label":"TLS 服务器最大发送缓冲区"},"base_listener_bind":{"desc":"监听套接字的 IP 地址和端口。","label":"IP 地址和端口"},"server_ssl_opts_schema_handshake_timeout":{"desc":"握手完成所允许的最长时间","label":"握手超时时间"},"fields_deflate_opts_server_context_takeover":{"desc":"接管意味着在服务器消息之间保留压缩状态。","label":"服务上下文接管"},"mqtt_session_expiry_interval":{"desc":"指定会话将在连接断开后多久过期，仅适用于非 MQTT 5.0 的连接。","label":"会话过期间隔"},"fields_listener_enabled":{"desc":"启停监听器。","label":"启停监听器"},"mqtt":{"desc":"全局的 MQTT 配置项。\\nmqtt 下所有的配置作为全局的默认值存在，它可以被 <code>zone</code> 中的配置覆盖。"},"crl_cache_refresh_http_timeout":{"desc":"获取 CRLs 时 HTTP 请求的超时。 该配置对所有启用 CRL 检查的监听器监听器有效。","label":"CRL 缓存刷新 HTTP 超时"},"fields_tcp_opts_backlog":{"desc":"TCP backlog 定义了挂起连接队列可以增长到的最大长度。","label":"TCP 连接队列长度"},"broker_route_batch_clean":{"desc":"是否开启批量清除路由。"},"fields_mqtt_quic_listener_initial_window_packets":{"desc":"一个连接的初始拥堵窗口的大小（以包为单位）。默认值：10","label":"初始窗口数据包"},"flapping_detect_enable":{"desc":"启用抖动检测功能。","label":"启用抖动检测"},"sysmon_top_db_password":{"desc":"PostgreSQL 数据库的密码","label":"数据库密码"},"fields_ws_opts_check_origins":{"desc":"允许的 origins 列表","label":"允许的 origins"},"fields_deflate_opts_client_context_takeover":{"desc":"接管意味着在客户端消息之间保留压缩状态。","label":"客户端上下文接管"},"base_listener_acceptors":{"desc":"监听器接收池的大小。","label":"接收器数量"},"common_ssl_opts_schema_cacertfile":{"desc":"受信任的PEM格式 CA  证书捆绑文件<br/>\\n此文件中的证书用于验证TLS对等方的证书。\\n如果要信任新 CA，请将新证书附加到文件中。\\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\\n注意：从文件中失效（删除）证书不会影响已建立的连接。","label":"CA 证书文件"},"fields_ws_opts_mqtt_path":{"desc":"WebSocket 的 MQTT 协议路径。因此，EMQX Broker的WebSocket地址为：\\n<code>ws://{\'{\'}ip{\'}\'}:{\'{\'}port{\'}\'}/mqtt</code>","label":"WS MQTT 路径"},"sysmon_os_procmem_high_watermark":{"desc":"在发出相应警报之前，一个Erlang进程可以分配多少系统内存的阈值，以系统内存的百分比表示。","label":"进程内存高水位线"},"fields_listeners_quic":{"desc":"QUIC 监听器。","label":"QUIC 监听器"},"fields_listeners_ws":{"desc":"HTTP websocket 监听器。","label":"HTTP websocket 监听器"},"mqtt_retry_interval":{"desc":"QoS 1/2 消息的重新投递间隔。","label":"消息重试间隔"},"stats_enable":{"desc":"启用/禁用统计数据收集功能。","label":"启用/禁用统计数据收集功能"},"fields_authorization_deny_action":{"desc":"授权检查拒绝操作时的操作。","label":"授权检查拒绝操作时的操作"},"fields_deflate_opts_server_max_window_bits":{"desc":"指定服务器压缩上下文的大小。","label":"服务器压缩窗口大小"},"client_ssl_opts_schema_server_name_indication":{"desc":"指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\\n例如，当连接到 \\"server.example.net\\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\\n如果未指定，它将默认为使用的主机名字符串\\n建立连接，除非使用 IP 地址<br/>\\n然后，主机名也用于对等机的主机名验证证书<br/>\\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。","label":"服务器名称指示"},"fields_mqtt_quic_listener_retry_memory_limit":{"desc":"在使用无状态重试之前，可用于握手连接的可用内存的百分比。计算为`N/65535`。默认值：65","label":"重试内存限制"},"force_shutdown_max_message_queue_len":{"desc":"消息队列的最大长度。","label":"进程邮箱消息队列的最大长度"},"sys_heartbeat_interval":{"desc":"发送心跳系统消息的间隔时间，它包括：\\n  - `$SYS/brokers/<node>/uptime`\\n  - `$SYS/brokers/<node>/datetime`"},"flapping_detect_ban_time":{"desc":"抖动的客户端将会被禁止登录多长时间。","label":"禁止登录时长"},"sysmon_top_num_items":{"desc":"每个监视组的顶级进程数。","label":"顶级进程数"},"persistent_session_builtin_session_table":{"desc":"用于内建会话表的性能调优参数。","label":"持久会话"},"mqtt_upgrade_qos":{"desc":"投递消息时，是否根据订阅主题时的 QoS 等级来强制提升派发消息的 QoS 等级。","label":"升级 QoS"},"mqtt_shared_subscription":{"label":"允许共享订阅"},"fields_tcp_opts_sndbuf":{"desc":"连接的 TCP 发送缓冲区（OS 内核）。","label":"TCP 发送缓冲区"},"sysmon_os_mem_check_interval":{"desc":"定期内存检查的时间间隔。","label":"内存检查间隔"},"server_ssl_opts_schema_gc_after_handshake":{"desc":"内存使用调优。如果启用，将在TLS/SSL握手完成后立即执行垃圾回收。TLS/SSL握手建立后立即进行GC。","label":"握手后执行GC"},"fields_mqtt_quic_listener_ssl_options":{"desc":"QUIC 传输层的 TLS 选项","label":"TLS 选项"},"fields_ws_opts_mqtt_piggyback":{"desc":"WebSocket消息是否允许包含多个 MQTT 数据包。","label":"MQTT Piggyback"},"base_listener_mountpoint":{"desc":"发布或订阅时，请在所有主题前面加上 mountpoint 字符串。\\n\\n将消息传递给订阅者时，将从主题名称中删除带前缀的字符串。挂载点是一种用户可以用来实现不同侦听器之间消息路由隔离的方法。\\n\\n例如，如果客户机 A 使用 <code>listeners.tcp.\\\\<name>.mountpoint</code> 设置为\'some_tenant\'，那么客户端实际上订阅了主题\'some_tenant/t\'。<br/>\\n类似地，如果另一个客户端B（与客户端A连接到同一个侦听器）向主题 \'t\' 发送消息，该消息将路由到所有订阅了\'some_租户/t\'的客户端，因此客户端 A 将接收主题名为\'t\'的消息<br/>\\n\\n设置为<code>\\"\\"</code> 以禁用该功能<br/>\\n\\nmountpoint 字符串中的变量：\\n- <code>${\'{\'}clientid{\'}\'}</code>: clientid\\n- <code>${\'{\'}username{\'}\'}</code>: username","label":"mountpoint"},"mqtt_max_awaiting_rel":{"desc":"为每个会话指定未收到 PUBREL 且未超时的最大 QoS 2 消息数量。超过限制后，新的 QoS 2 消息发布会被拒绝，并返回 147(0x93) 错误。","label":"最大待发 PUBREL 数量"},"ciphers_schema_quic":{"desc":"此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\\n<code>\\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\\"</code>或\\n<code>[\\"TLS_AES_256_GCM_SHA384\\",\\"TLS_AES_128_GCM_SHA256\\"]</code>。\\n<br/>\\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\\n\\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（\'tlsv1.1\'、\'tlsv1.2\'或\'tlsv1.3\'）。\\n不兼容的密码套件将被自动删除。\\n\\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\\n\\n<br/>\\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\\n如果打算使用PSK密码套件，<code>tlsv1.3</code>。应在<code>ssl.versions</code>中禁用。\\n\\n<br/>\\nPSK 密码套件：\\n<code>\\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\\"</code><br/>\\n\\n注：QUIC 监听器不支持 tlsv1.3 的 ciphers","label":""},"fields_mqtt_quic_listener_max_bytes_per_key":{"desc":"在启动密钥更新之前，用单个 1-RTT 加密密钥加密的最大字节数。默认值：274877906944","label":"每个密钥的最大字节数"},"fields_mqtt_quic_listener_mtu_discovery_search_complete_timeout_us":{"desc":"如果没有达到 max ，在重新尝试 MTU 探测之前要等待的时间，单位是微秒。默认值：600000000","label":""},"fields_ws_opts_check_origin_enable":{"desc":"如果<code>true</code>，<code>origin</code>HTTP 头将根据<code>check_origins</code>参数中配置的允许来源列表进行验证。","label":"检查 origin"},"sysmon_vm_busy_dist_port":{"desc":"启用后，当用于集群接点之间 RPC 的连接过忙时，会触发一条带有 <code>busy_dist_port</code> 关键字的 warning 级别日志。\\n同时还会发布一条主题为 <code>$SYS/sysmon/busy_dist_port</code> 的 MQTT 系统消息。","label":"启用分布式端口过忙监控"},"mqtt_max_mqueue_len":{"desc":"最大消息队列长度。持久客户端断开连接或飞行窗口已满时，允许排队的的最大消息数量。","label":"最大消息队列长度"},"mqtt_max_inflight":{"desc":"完成应答前，最多允许同时投递的 QoS 1 和 QoS 2 消息数量。","label":"最大飞行窗口"},"persistent_session_store_enabled":{"desc":"使用数据库存储有关持久会话的信息。\\n这使得在节点停止时，可以将客户端连接迁移到另一个群集节点。","label":"启用持久会话保存"},"fields_deflate_opts_level":{"desc":"压缩级别","label":"压缩级别"},"mqtt_server_keepalive":{"label":"服务端 Keep Alive"},"global_authentication":{"desc":"全局 MQTT 监听器的默认认证配置。 为每个监听器配置认证参考监听器器配置中的<code>authentication</code> 配置。\\n\\n该配置可以被配置为：\\n<ul>\\n  <li><code>[]</code>: 默认值，允许所有的登录请求\\n  <li>配置为单认证器，例如 <code>{\'{\'}enable:true,backend:\\"built_in_database\\",mechanism=\\"password_based\\"{\'}\'}</code></li>\\n  <li>配置为认证器数组</li>\\n</ul>\\n\\n当配置为认证链后，登录凭证会按照配置的顺序进行检查，直到做出<code>allow</code> 或 <code>deny</code>的结果。\\n\\n如果在所有的认证器都执行完后，还是没有结果，登录将被拒绝。"},"fields_mqtt_quic_listener_load_balancing_mode":{"desc":"0: 禁用, 1: SERVER_ID_IP, 2: SERVER_ID_FIXED. 默认: 0","label":"负载平衡模式"},"persistent_session_store_session_message_gc_interval":{"desc":"持久会话消息的临时数据垃圾收集的开始间隔。\\n这不会影响持久会话消息的生命周期长度。","label":"会话消息清理间隔"},"server_ssl_opts_schema_ocsp_refresh_http_timeout":{"desc":"检查 OCSP 响应时，HTTP 请求的超时。","label":"OCSP 刷新 HTTP 超时"},"fields_tcp_opts_send_timeout":{"desc":"连接的 TCP 发送超时。","label":"TCP 发送超时"},"sysmon_vm_process_high_watermark":{"desc":"在发出相应警报之前，本地节点上可以同时存在多少进程的阈值（以进程百分比表示）。","label":"进程数高水位线"},"fields_tcp_opts_buffer":{"desc":"驱动程序使用的用户空间缓冲区的大小。","label":"TCP 用户态缓冲区"},"server_ssl_opts_schema_honor_cipher_order":{"desc":"一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。","label":"SSL honor cipher order"},"conn_congestion_min_alarm_sustain_duration":{"desc":"清除警报前的最短时间。<br/>只有当队列中没有挂起的数据，并且连接至少被堵塞了 <code>min_alarm_sustain_duration</code> 毫秒时，<br/>报警才会被清除。这是为了避免太频繁地清除和再次发出警报。","label":"告警维持时间"},"fields_mqtt_quic_listener_keep_alive_interval_ms":{"desc":"多长时间发送一次PING帧以保活连接。","label":"保持活着的时间间隔 毫秒"},"fields_mqtt_quic_listener_handshake_idle_timeout_ms":{"desc":"一个握手在被丢弃之前可以空闲多长时间","label":"握手空闲超时 毫秒"},"broker_session_locking_strategy":{"desc":"Session 在集群中的锁策略。\\n  - `loca`：仅锁本节点的 Session；\\n  - `one`：任选一个其它节点加锁；\\n  - `quorum`：选择集群中半数以上的节点加锁；\\n  - `all`：选择所有节点加锁。"},"persistent_store_ram_cache":{"desc":"在内存中保持一份数据的副本，以便更快地访问。","label":"内存缓存"},"fields_mqtt_quic_listener_stream_recv_window_default":{"desc":"初始流接收窗口大小。 默认值：32678","label":"流接收窗口默认"},"mqtt_mqueue_priorities":{"desc":"主题优先级。优先级数字[1-255]。默认情况下没有优先级表，因此所有消息都被平等对待。<br/>注意：优先级主题名称中不允许使用逗号和等号。<br/>注意：不在优先级表中的主题的消息将根据 mqtt.mqueue_default_priority 的配置值被视为最高优先级或最低优先级。<br/>示例：<br/>要配置 \'topic/1\' > \'topic/2\'：<br/>mqueue_priorities: {\'{\'}\\"topic/1\\": 10, \\"topic/2\\": 8{\'}\'}","label":"主题优先级"},"fields_rate_limit_conn_messages_in":{"desc":"外部 MQTT 连接的消息限制。","label":"外部 MQTT 连接的消息限制"},"fields_rate_limit_max_conn_rate":{"desc":"每秒最大连接数。","label":"每秒最大连接数"},"alarm_size_limit":{"desc":"要保留为历史记录的已停用报警的最大总数。当超过此限制时，将删除最旧的停用报警，以限制总数。","label":"告警总数限制"},"fields_cache_max_size":{"desc":"缓存项的最大数量。","label":"缓存项的最大数量"},"fields_listeners_tcp":{"desc":"TCP 监听器。","label":"TCP 监听器"},"conn_congestion_enable_alarm":{"desc":"启用或者禁用连接阻塞告警功能。","label":"启用/禁用阻塞告警"},"fields_ws_opts_proxy_port_header":{"desc":"HTTP 头，用于传递有关客户端端口的信息。当 EMQX 集群部署在负载平衡器后面时，这一点非常重要。","label":"客户端端口头"},"overload_protection_enable":{"desc":"是否对系统过载做出反应。","label":"是否对系统过载做出反应"},"fields_mqtt_quic_listener_minimum_mtu":{"desc":"一个连接所支持的最小MTU。这将被作为起始MTU使用。默认值：1248","label":"最小 MTU"},"sys_msg_interval":{"desc":"发送 `$SYS` 主题的间隔时间。"},"mqtt_await_rel_timeout":{"desc":"对于未收到 PUBREL 的 QoS 2 消息，将按照指定时间等待重传；超时后 EMQX 将释放  packet ID  并产生一条告警日志。\\n注意：EMQX 对消息的转发操作不依赖于 PUBREL收到与否。","label":"最大 PUBREL 等待时长"},"common_ssl_opts_schema_verify":{"desc":"启用或禁用对等验证。","label":"对等验证"},"fields_listeners_ssl":{"desc":"SSL 监听器。","label":"SSL 监听器"},"fields_deflate_opts_client_max_window_bits":{"desc":"指定客户端压缩上下文的大小。","label":"压缩窗口大小"},"common_ssl_opts_schema_keyfile":{"desc":"PEM格式的私钥文件。","label":"私钥文件"},"sysmon_os_cpu_high_watermark":{"desc":"在发出相应警报之前可以使用多少系统 CPU 的阈值，以系统CPU负载的百分比表示。","label":"CPU 高水位线"},"flapping_detect_window_time":{"desc":"抖动检测的时间窗口。","label":"时间窗口"},"mqtt_mqueue_default_priority":{"desc":"默认的主题优先级，不在 <code>主题优先级</code>（<code>mqueue_priorities</code>） 中的主题将会使用该优先级。","label":"默认主题优先级"},"client_ssl_opts_schema_enable":{"desc":"启用 TLS。","label":"启用 TLS"},"fields_mqtt_quic_listener_mtu_discovery_missing_probe_count":{"desc":"在任何时候都可以在一个绑定上排队的无状态操作的最大数量。默认值：3","label":"MTU发现丢失的探针数量"},"fields_tcp_opts_recbuf":{"desc":"连接的 TCP 接收缓冲区（OS 内核）。","label":"TCP 接收缓冲区"},"sysmon_vm_process_check_interval":{"desc":"定期进程限制检查的时间间隔。","label":"进程限制检查时间"},"fields_mqtt_quic_listener_server_resumption_level":{"desc":"连接恢复 和/或 0-RTT 服务器支持。默认值：0（无恢复功能）","label":"服务端连接恢复支持"},"fields_ws_opts_proxy_address_header":{"desc":"HTTP 头，用于传递有关客户端 IP 地址的信息。\\n当 EMQX 集群部署在负载平衡器后面时，这一点非常重要。","label":"客户端地址头"},"sysmon_os_sysmem_high_watermark":{"desc":"在发出相应报警之前可以分配多少系统内存的阈值，以系统内存的百分比表示。","label":"系统内存高水位线"},"fields_tcp_opts_high_watermark":{"desc":"当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。","label":""},"fields_mqtt_quic_listener_stateless_operation_expiration_ms":{"desc":"同一个对端的操作之间的时间限制，单位是毫秒。 默认：100","label":"无状态操作过期 毫秒"},"server_ssl_opts_schema_dhfile":{"desc":"如果协商使用Diffie-Hellman密钥交换的密码套件，则服务器将使用包含PEM编码的Diffie-Hellman参数的文件的路径。如果未指定，则使用默认参数。<br/>\\n注意：TLS 1.3不支持<code>dhfile</code>选项。","label":"SSL dhfile"},"flapping_detect_max_count":{"desc":"MQTT 客户端在“窗口”时间内允许的最大断开次数。","label":"最大断开次数"},"mqtt_max_topic_levels":{"label":"最大主题层级"},"force_shutdown_max_heap_size":{"desc":"Heap 的总大小。","label":"Heap 的总大小"},"persistent_store_on_disc":{"desc":"将持久会话数据保存在磁盘上。如果为 false 则存储在内存中。\\n如开启， 持久会话数据可在集群重启后恢复。\\n如关闭， 数据仅存储在内存中， 则在整个集群停止后丢失。","label":"持久化在磁盘上"},"mqtt_ignore_loop_deliver":{"desc":"设置由 MQTT v3.1.1/v3.1.0 客户端发布的消息是否将转发给其本身；类似 MQTT 5.0 协议中的 `No Local` 选项。","label":"忽略循环投递"},"common_ssl_opts_schema_certfile":{"desc":"PEM格式证书链文件<br/>\\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。","label":"证书文件"},"mqtt_exclusive_subscription":{"label":"允许排它订阅"},"mqtt_retain_available":{"desc":"是否启用对 MQTT 保留消息的支持。","label":"启用保留消息"},"fields_tcp_opts_reuseaddr":{"desc":"连接的 SO_REUSEADDR 标识。","label":"SO_REUSEADDR"},"sysmon_vm_long_schedule":{"desc":"启用后，如果 Erlang VM 调度器出现某个任务占用时间过长时，会触发一条带有 \'long_schedule\' 关键字的日志。\\n同时还会发布一条主题为 <code>$SYS/sysmon/long_schedule</code> 的 MQTT 系统消息。","label":"启用长调度监控"},"mqtt_keepalive_multiplier":{"desc":"`Keep-Alive Timeout = Keep-Alive Interval × Keep-Alive Multiplier`，根据 MQTT 5.0，默认值为1.5。\\n\\n例如，如果 Keep-Alive interval 为 10 秒，那么乘以 1.5 的倍数，将产生 15 秒的超时。将倍数值增加到 2，超时将延长到 20 秒。","label":"Keep Alive 倍数"},"force_gc_bytes":{"desc":"在进程处理过多少个字节之后，对此进程执行垃圾回收。","label":"垃圾回收字节数"},"server_ssl_opts_schema_fail_if_no_peer_cert":{"desc":"TLS/DTLS 服务器与 {\'{\'}verify，verify_peer{\'}\'} 一起使用。\\n如果设置为true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\\n如果设置为false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。","label":"没有证书则 SSL 失败"},"fields_ws_opts_compress":{"desc":"如果 <code>true</code>，则使用<code>zlib</code> 压缩 WebSocket 消息<br/>\\n<code>deflate_opts</code> 下的配置项属于压缩相关参数配置。","label":"Ws 压缩"},"fields_mqtt_quic_listener_keep_alive_interval":{"desc":"发送 PING 帧的频率，以保活连接. 设为 0 表示禁用。","label":"PING 保活频率"},"fields_cache_ttl":{"desc":"缓存数据的生存时间。","label":"缓存数据的生存时间"},"sys_topics":{"desc":"系统主题配置。"},"sys_event_client_subscribed":{"desc":"是否开启客户端已成功订阅主题事件消息。"},"sysmon_top_db_port":{"desc":"收集数据点的 PostgreSQL 数据库的端口。","label":"数据库端口"},"fields_mqtt_quic_listener_max_operations_per_drain":{"desc":"每个连接操作的最大耗费操作数。默认：16","label":"每次操作最大操作数"},"fields_mqtt_quic_listener_datagram_receive_enabled":{"desc":"宣传对QUIC Datagram 扩展的支持。为将来保留。默认为0（FALSE）","label":"启用 Datagram 接收"},"fields_mqtt_quic_listener_initial_rtt_ms":{"desc":"初始RTT估计","label":"Initial RTT 毫秒"},"overload_protection_backoff_gc":{"desc":"高负载时，跳过强制 GC。","label":"跳过GC"},"broker_perf_route_lock_type":{"desc":"通配主题订阅/取消订阅性能调优。\\n建议仅当通配符主题较多时才更改此参数。\\n\\n注：当从/更改为 `global` 锁时，它要求集群中的所有节点在更改之前停止。\\n  - `key`：为 Mnesia 事务涉及到的每个 key 上锁，建议单节点时使用。\\n  - `tab`：为 Mnesia 事务涉及到的表上锁，建议在集群中使用。\\n  - `global`：所以更新操作都被全局的锁保护，仅建议在超大规模集群中使用。"},"fields_tcp_opts_nodelay":{"desc":"连接的 TCP_NODELAY 标识","label":"TCP_NODELAY"},"sysmon_top_db_username":{"desc":"PostgreSQL 数据库的用户名","label":"数据库用户名"},"broker":{"desc":"Broker 相关配置项。"},"force_gc_count":{"desc":"在进程收到多少消息之后，对此进程执行垃圾回收。","label":"垃圾回收消息数"},"mqtt_max_clientid_len":{"label":"最大客户端 ID 长度"},"fields_ws_opts_supported_subprotocols":{"desc":"逗号分隔的 subprotocols 支持列表。","label":"Subprotocols 支持列表"},"broker_shared_subscription_strategy":{"desc":"共享订阅消息派发策略。\\n  - `random`：随机挑选一个共享订阅者派发；\\n  - `round_robin`：使用 round-robin 策略派发；\\n  - `round_robin_per_group`：在共享组内循环选择下一个成员；\\n  - `local`：选择随机的本地成员，否则选择随机的集群范围内成员;\\n  - `sticky`：总是使用上次选中的订阅者派发，直到它断开连接；\\n  - `hash_clientid`：通过对发送者的客户端 ID 进行 Hash 处理来选择订阅者;\\n  - `hash_topic`：通过对源主题进行 Hash 处理来选择订阅者。"},"fields_deflate_opts_mem_level":{"desc":"指定压缩状态的大小<br/>\\n较低的值会减少每个连接的内存使用。","label":"压缩状态大小"},"fields_mqtt_quic_listener_send_idle_timeout_ms":{"desc":"在闲置一定时间后重置拥堵控制。默认值：1000","label":"发送空闲超时毫秒"},"base_listener_limiter":{"desc":"速率限制类型","label":"速率限制类型"},"persistent_session_store_backend":{"desc":"用于存储持久性会话和信息的数据库管理后端\\n- `builtin`: 使用内置的数据库（mria）","label":"后端类型"},"alarm_validity_period":{"desc":"停用报警的保留时间。报警在停用时不会立即删除，而是在保留时间之后删除。","label":"告警保留时间"},"server_ssl_opts_schema_ocsp_issuer_pem":{"desc":"服务器证书的 OCSP 签发者的 PEM 编码证书。","label":"OCSP 签发者证书"},"fields_tcp_opts_active_n":{"desc":"为此套接字指定{\'{\'}active，N{\'}\'}选项<br/>\\nSee: https://erlang.org/doc/man/inet.html#setopts-2","label":"active_n"},"listener_authentication":{"desc":"监听器认证重载。\\n认证配置可以是单个认证器实例，也可以是一个认证器数组组成的认证链。\\n执行登录验证时（用户名、客户端 ID 等），将按配置的顺序执行。","label":"每个监听器的认证覆盖"},"fields_trace_payload_encode":{"desc":"确定跟踪文件中有效负载格式的格式。<br/>\\n`text`：基于文本的协议或纯文本协议。\\n建议在有效负载为JSON编码时使用<br/>\\n`hex`：二进制十六进制编码。当有效负载是自定义二进制协议时，建议使用此选项<br/>\\n`hidden`：有效负载被模糊化为 `******`","label":"有效负载编码"},"mqtt_response_information":{"desc":"UTF-8 字符串，用于指定返回给客户端的响应主题，如 `reqrsp/`，此时请求和应答客户端都需要使用 `reqrsp/` 前缀的主题来完成通讯。如希望禁用此功能，请在下方的文字框中输入`\\"\\"`；仅适用于 MQTT 5.0 客户端。","label":"响应信息"},"persistent_session_store_max_retain_undelivered":{"desc":"如果重新启动时处理上一个会话的节点已停止，则未传递到持久会话的消息在垃圾收集之前会被存储。","label":"未投递的消息保留条数"},"fields_mqtt_quic_listener_migration_enabled":{"desc":"开启客户端地址迁移功能。需要一个支持的负载平衡器，或者没有负载平衡器。默认值：1（已启用）","label":"启用地址迁移"},"common_ssl_opts_schema_password":{"desc":"包含用户密码的字符串。仅在私钥文件受密码保护时使用。","label":"密钥文件密码"},"common_ssl_opts_schema_hibernate_after":{"desc":"在闲置一定时间后休眠 SSL 进程，减少其内存占用。","label":"闲置多久后休眠"},"fields_mqtt_quic_listener_send_buffering_enabled":{"desc":"缓冲发送数据，而不是保留应用缓冲区，直到发送数据被确认。默认值：1（启用）","label":"启用发送缓冲功能"},"sys_event_client_unsubscribed":{"desc":"是否开启客户端已成功取消订阅主题事件消息。"},"overload_protection_backoff_new_conn":{"desc":"高负载时，拒绝新进来的客户端连接。","label":"关闭新连接"},"server_ssl_opts_schema_ocsp_responder_url":{"desc":"用于检查服务器证书的 OCSP Responder 的 URL。","label":"OCSP Responder 的 URL"},"mqtt_idle_timeout":{"desc":"设置连接被断开或进入休眠状态前的等待时间，空闲超时后\\n\\n- 如暂未收到客户端的 CONNECT 报文，连接将断开；\\n- 如已收到客户端的 CONNECT 报文，连接将进入休眠模式以节省系统资源。\\n\\n注意：请合理设置该参数值，如等待时间设置过长，可能造成系统资源的浪费。","label":"空闲超时"},"fields_mqtt_quic_listener_conn_flow_control_window":{"desc":"连接的流控窗口。默认：16777216","label":"流控窗口"},"fields_mqtt_quic_listener_maximum_mtu":{"desc":"一个连接所支持的最大MTU。这将是最大的探测值。默认值：1500","label":"最大 MTU"},"sysmon_top_db_name":{"desc":"PostgreSQL 数据库的数据库名","label":"数据库名"},"mqtt_strict_mode":{"desc":"是否以严格模式解析 MQTT 消息。严格模式下，如客户端 ID、主题名称等中包含无效 utf8 字符串，连接将被断开。","label":"严格模式"},"shared_subscription_group_strategy":{"desc":"设置共享订阅组为单位的分发策略。该配置是一个从组名到\\n策略名的一个map，组名不得包含 `[A-Za-z0-9]` 之外的特殊字符。"},"fields_deflate_opts_strategy":{"desc":"指定压缩策略。","label":"指定压缩策略"},"shared_subscription_strategy_enum":{"desc":"共享订阅的分发策略名称。\\n- `random`：随机选择一个组内成员；\\n- `round_robin`：循环选择下一个成员；\\n- `round_robin_per_group`：在共享组内循环选择下一个成员；\\n- `sticky`：使用上一次选中的成员；\\n- `hash`：根据 ClientID 哈希映射到一个成员；\\n- `local`：随机分发到节点本地成成员，如果本地成员不存在，则随机分发到任意一个成员。"},"persistent_session_builtin_sess_msg_table":{"desc":"优化内置的会话消息表的配置。","label":"用于内建会话管理表的性能调优参数"},"mqtt_mqueue_store_qos0":{"desc":"在连接断开但会话保持期间，是否需要在消息队列中存储 QoS 0 消息。","label":"存储 QoS 0 消息"},"server_ssl_opts_schema_client_renegotiation":{"desc":"在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\\n这可能会成为拒绝服务攻击的载体。\\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。","label":"SSL 客户端冲协商"},"server_ssl_opts_schema_enable_crl_check":{"desc":"是否为该监听器启用 CRL 检查。","label":"启用 CRL 检查"},"fields_mqtt_quic_listener_peer_bidi_stream_count":{"desc":"允许对端打开的双向流的数量","label":"对端双向流的数量"},"fields_mqtt_quic_listener_max_stateless_operations":{"desc":"无状态操作的最大数量，在任何时候都可以在一个工作者上排队。默认值：16","label":"最大无状态操作数"},"fields_ws_opts_idle_timeout":{"desc":"关闭在此间隔内未发送 MQTT CONNECT 消息的客户端的传输层连接。","label":"WS 空闲时间"},"fields_mqtt_quic_listener_max_ack_delay_ms":{"desc":"在收到数据后要等待多长时间才能发送一个ACK。默认值：25","label":"最大应答延迟 毫秒"},"base_listener_zone":{"desc":"监听器所属的配置组。","label":"配置组"},"fields_mqtt_quic_listener_handshake_idle_timeout":{"desc":"一个握手在被丢弃之前可以空闲多长时间。","label":"握手空闲超时时间"},"force_gc_enable":{"desc":"启用强制垃圾回收。","label":"启用强制垃圾回收"},"fields_ws_opts_allow_origin_absence":{"desc":"If <code>false</code> and <code>check_origin_enable</code> is <code>true</code>, the server will reject requests that don\'t have <code>origin</code> HTTP header.","label":"允许 origin 缺失"},"common_ssl_opts_schema_versions":{"desc":"支持所有TLS/DTLS版本<br/>\\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\\"tlsv1.2\\",\\"tlsv1.1\\"]</code>。","label":"SSL 版本"},"mqtt_listener_proxy_protocol_timeout":{"desc":"代理协议超时。如果在超时时间内未收到代理协议数据包，EMQX将关闭TCP连接。","label":"Proxy protocol 超时时间"},"fields_mqtt_quic_listener_idle_timeout":{"desc":"一个连接在被关闭之前可以空闲多长时间。0表示禁用。","label":"空闲超时时间"},"common_ssl_opts_schema_secure_renegotiate":{"desc":"SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。","label":"SSL 重新协商"},"sysmon_vm_busy_port":{"desc":"当一个系统接口（例如 TCP socket）过忙，会触发一条带有 <code>busy_port</code> 关键字的 warning 级别的日志。\\n同时还会发布一条主题为 <code>$SYS/sysmon/busy_port</code> 的 MQTT 系统消息。","label":"启用端口过忙监控"},"sys_event_client_connected":{"desc":"是否开启客户端已连接事件消息。"},"sysmon_vm_process_low_watermark":{"desc":"在清除相应警报之前，本地节点上可以同时存在多少进程的阈值（以进程百分比表示）。","label":"进程数低水位线"},"mqtt_max_packet_size":{"desc":"允许的最大 MQTT 报文大小，超出此大小后将断开当前客户端连接。","label":"最大报文大小"},"common_ssl_opts_schema_reuse_sessions":{"desc":"启用 TLS 会话重用。","label":"TLS 会话重用"},"common_ssl_opts_schema_depth":{"desc":"在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。","label":"CA 证书深度"},"sysmon_vm_long_gc":{"desc":"当系统检测到某个 Erlang 进程垃圾回收占用过长时间，会触发一条带有 <code>long_gc</code> 关键字的日志。\\n同时还会发布一条主题为 <code>$SYS/sysmon/long_gc</code> 的 MQTT 系统消息。","label":"启用长垃圾回收监控"},"fields_mqtt_quic_listener_keyfile":{"desc":"私钥文件。在 5.1 中会被废弃，使用 .ssl_options.keyfile 代替。","label":"私钥文件"},"mqtt_peer_cert_as_clientid":{"desc":"使用对端证书中的 CN、DN 字段或整个证书内容来作为客户端 ID。仅适用于 TLS 连接；\\n目前支持：\\n- <code>cn</code>: 取证书的 CN 字段\\n- <code>dn</code>: 取证书的 DN 字段\\n- <code>crt</code>: 取 <code>DER</code> 或 <code>PEM</code> 证书的内容\\n- <code>pem</code>: 将 <code>DER</code> 证书内容转换为 <code>PEM</code> 格式作为客户端 ID\\n- <code>md5</code>: 取 <code>DER</code> 或 <code>PEM</code> 证书内容的 MD5 值","label":"使用对端证书作为客户端 ID"},"persistent_session_store_message_gc_interval":{"desc":"将未送达的消息垃圾收集到持久会话的开始间隔。\\n这会影响检查 \\"max_retain_undelivered\\"（最大保留未送达）的删除频率。","label":"消息清理间隔"},"broker_shared_dispatch_ack_enabled":{"desc":"该配置项已废弃，会在 5.1 中移除。\\n启用/禁用 QoS 1 和 QoS 2 消息的共享派发确认。\\n开启后，允许将消息从未及时回复 ACK 的订阅者 （例如，客户端离线） 重新派发给另外一个订阅者。"},"base_listener_enable_authn":{"desc":"配置 <code>true</code> （默认值）启用客户端进行身份认证，通过检查认配置的认认证器链来决定是否允许接入。\\n配置 <code>false</code> 时，将不对客户端做任何认证，任何客户端，不论是不是携带用户名等认证信息，都可以接入。\\n配置 <code>quick_deny_anonymous</code> 时，行为跟 <code>true</code> 类似，但是会对匿名\\n客户直接拒绝，不做使用任何认证器对客户端进行身份检查。","label":"启用身份认证"},"force_shutdown_enable":{"desc":"启用 `force_shutdown` 功能。","label":"启用 `force_shutdown` 功能"},"broker_enable_session_registry":{"desc":"是否启用 Session Registry"},"overload_protection_backoff_delay":{"desc":"高负载时，一些不重要的任务可能会延迟执行，在这里设置允许延迟的时间。","label":"延迟时间"},"ciphers_schema_common":{"desc":"此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\\n<code>\\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\\"</code>或\\n<code>[\\"TLS_AES_256_GCM_SHA384\\",\\"TLS_AES_128_GCM_SHA256\\"]</code>。\\n<br/>\\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\\n\\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（\'tlsv1.1\'、\'tlsv1.2\'或\'tlsv1.3\'）。\\n不兼容的密码套件将被自动删除。\\n\\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\\n\\n<br/>\\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\\n如果打算使用PSK密码套件 <code>tlsv1.3</code>。应在<code>ssl.versions</code>中禁用。\\n\\n<br/>\\nPSK 密码套件：\\n<code>\\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\\"</code>","label":""},"sys_event_client_disconnected":{"desc":"是否开启客户端已断开连接事件消息。"},"crl_cache_refresh_interval":{"desc":"从服务器刷新CRL的周期。 该配置对所有 URL 和监听器有效。","label":"CRL 缓存刷新间隔"},"mqtt_listener_proxy_protocol":{"desc":"如果EMQX集群部署在 HAProxy 或 Nginx 之后，请启用代理协议 V1/2 <br/>\\n详情见: https://www.haproxy.com/blog/haproxy/proxy-protocol/","label":"Proxy protocol"},"mqtt_listener_access_rules":{"desc":"此监听器的访问控制规则。","label":"访问控制规则"},"server_ssl_opts_schema_enable_ocsp_stapling":{"desc":"是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。","label":"启用 OCSP Stapling"},"fields_tcp_opts_send_timeout_close":{"desc":"如果发送超时，则关闭连接。","label":"TCP 发送超时关闭连接"},"sysmon_os_cpu_check_interval":{"desc":"定期 CPU 检查的时间间隔。","label":"定期 CPU 检查的时间间隔"},"sysmon_top_sample_interval":{"desc":"指定应收集进程顶部的频率。","label":"取样时间"},"fields_mqtt_quic_listener_idle_timeout_ms":{"desc":"一个连接在被优雅地关闭之前可以空闲多长时间。0 表示禁用超时","label":"空闲超时 毫秒"},"fields_ws_opts_fail_if_no_subprotocol":{"desc":"如果<code>true</code>，当客户端未携带<code>Sec WebSocket Protocol</code>字段时，服务器将返回一个错误。\\n<br/>注意：微信小程序需要禁用此验证。","label":"无 subprotocol 则失败"},"mqtt_wildcard_subscription":{"label":"允许通配符订阅"},"server_ssl_opts_schema_ocsp_refresh_interval":{"desc":"为服务器刷新OCSP响应的周期。","label":"OCSP 刷新间隔"},"overload_protection_backoff_hibernation":{"desc":"高负载时，跳过进程休眠。","label":"跳过休眠"},"fields_ws_opts_max_frame_size":{"desc":"单个 MQTT 数据包的最大长度。","label":"最大数据包长度"},"sys_event_messages":{"desc":"客户端事件消息。"},"broker_perf_trie_compaction":{"desc":"是否开启主题表压缩存储。\\n启用它会显着提高通配符主题订阅率，如果通配符主题具有唯一前缀，例如：\'sensor/{\'{\'}{\'{\'}id{\'}\'}{\'}\'}/+/\'，其中每个订阅者的 ID 是唯一的。\\n如果消息主要发布到具有大量级别的主题，则主题匹配性能（发布时）可能会降低。\\n\\n注意：这是一个集群范围的配置。 它要求在更改之前停止所有节点。"},"sysmon_vm_large_heap":{"desc":"启用后，当一个 Erlang 进程申请了大量内存，系统会触发一条带有 <code>large_heap</code> 关键字的\\nwarning 级别日志。同时还会发布一条主题为 <code>$SYS/sysmon/busy_dist_port</code> 的 MQTT 系统消息。","label":"启用大 heap 监控"},"mqtt_shared_subscription_strategy":{"label":"共享订阅策略","desc":"共享订阅的调度策略。<br/>- `random`：将消息分配给随机选择的订阅者。<br/>- `round_robin`：以循环方式选择订阅者。<br/>- `round_robin_per_group`：在每个共享订阅组内以循环方式选择订阅者。<br/>- `sticky`：始终使用最后选择的订阅者进行调度，直到订阅者断开连接。<br/>- `local`：如果本地订阅者不存在，则选择随机本地订阅者，否则选择随机集群广域订阅者。<br/>- `hash_topic`：通过主题源的哈希值选择订阅者。<br/>- `hash_clientid`：通过客户端 ID 的哈希值选择订阅者。"}}}')},6973:function(e){e.exports=JSON.parse("{}")},"713e":function(e,n,t){"use strict";t.r(n),n["default"]={currentSubs:{zh:"当前订阅主题列表",en:"Current Subscriptions"},topic:{zh:"主题",en:"Topic"},share:{zh:"共享名称",en:"Share Name"},addMetric:{zh:"创建监控",en:"Create Monitor"},wildcardNotSupport:{zh:"主题监控暂不支持通配符",en:"Wildcards are not yet supported by Topic Metrics"}}},"7a64":function(e,n,t){"use strict";t.r(n),n["default"]={key:{zh:"键",en:"Key"},value:{zh:"值",en:"Value"},field:{zh:"字段",en:"Field"},left:{zh:"左侧",en:"Left"},monitoring:{zh:"监控",en:"Monitoring"},management:{zh:"管理",en:"Management"},diagnose:{zh:"问题分析",en:"Diagnose"},acl:{zh:"ACL",en:"ACL"},auth:{zh:"访问控制",en:"Access Control"},clusterSettings:{zh:"集群配置",en:"Cluster Settings"},mqtt:{zh:"MQTT 配置",en:"MQTT Settings"},authentication:{zh:"客户端认证",en:"Authentication"},authorization:{zh:"客户端授权",en:"Authorization"},dashboard:{zh:"集群概览",en:"Cluster Overview"},overview:{zh:"概览",en:"Overview"},metrics:{zh:"指标",en:"Metrics"},connect:{zh:"连接",en:"Connections"},clients:{zh:"客户端",en:"Clients"},topics:{zh:"主题",en:"Topics"},subscription:{zh:"订阅",en:"Subscriptions"},subscriptions:{zh:"订阅管理",en:"Subscriptions"},retained:{zh:"保留消息",en:"Retained Messages"},schemas:{zh:"编解码",en:"Schema Registry"},rule:{zh:"规则",en:"Rule"},rules:{zh:"规则",en:"Rules"},ruleengine:{zh:"集成",en:"Integration"},flow:{zh:"Flows",en:"Flows"},resources:{zh:"资源",en:"Resources"},topic_metrics:{zh:"主题监控",en:"Topic metrics"},alarm:{zh:"告警",en:"Alarms"},plugins:{zh:"插件",en:"Plugins"},modules:{zh:"模块",en:"Modules"},tool:{zh:"工具",en:"Tool"},tools:{zh:"工具",en:"Tools"},websocket:{zh:"WebSocket 客户端",en:"WebSocket Client"},"topic-metrics":{zh:"主题监控",en:"Topic Metrics"},"slow-sub":{zh:"慢订阅",en:"Slow Subscriptions"},general:{zh:"通用",en:"General"},advanced:{zh:"高级",en:"Advanced"},extension:{zh:"扩展",en:"Extension"},systemTopic:{zh:"系统主题",en:"System Topic"},application:{zh:"应用",en:"Application"},gateway:{zh:"网关",en:"Gateways"},exhook:{zh:"ExHook",en:"ExHook"},APIKey:{zh:"API 密钥",en:"API Key"},"banned-clients":{zh:"黑名单",en:"Banned Clients"},"flapping-detect":{zh:"连接抖动",en:"Flapping Detect"},backup:{zh:"备份",en:"Backup"},users:{zh:"用户",en:"Users"},system:{zh:"系统设置",en:"System"},configuration:{zh:"功能配置",en:"Configuration"},"basic-config":{zh:"基础配置",en:"Basic Config"},cluster:{zh:"集群",en:"Cluster"},log:{zh:"日志",en:"Logging"},limiter:{zh:"速率限制",en:"Limiter"},listener:{zh:"监听器",en:"Listeners"},advancedMQTT:{zh:"MQTT 高级特性",en:"Advanced MQTT"},"topic-rewrite":{zh:"主题重写",en:"Topic Rewrite"},"auto-sub":{zh:"代理订阅",en:"Auto Subscribe"},"delayed-pub":{zh:"延迟发布",en:"Delayed Publish"},"delayed-pub-configuration":{zh:"延迟发布",en:"Delayed Publish"},topicMetrics:{zh:"Topic Metrics",en:"Topic Metrics"},iot:{zh:"规则",en:"Rules"},bridge:{zh:"数据桥接",en:"Data Bridges"},setting:{zh:"设置",en:"Settings"},nodes:{zh:"节点",en:"Nodes"},settings:{zh:"设置",en:"Settings"},usersManagement:{zh:"用户管理",en:"Users"},logOut:{zh:"退出登录",en:"Logout"},theSystemHas:{zh:"系统有",en:"The system has"},noteAlertClickView:{zh:"条告警，点击查看",en:"alerts, Click to view"},noWarning:{zh:"暂无告警",en:"No alarm"},loggedOut:{zh:"已退出登录",en:"Logged out"},whetherToLogOutOrNot:{zh:"是否退出登录？",en:"Confirm to logout"},signOut:{zh:"退出",en:"Logout"},"log-trace":{zh:"日志追踪",en:"Log Trace"},dataBridge:{zh:"数据桥接",en:"Data Bridges"},connector:{zh:"连接配置",en:"Connector"},extensions:{zh:"插件扩展",en:"Extensions"},session:{zh:"会话",en:"Session"},retainer:{zh:"保留消息",en:"Retainer"},integration:{zh:"监控集成",en:"Integration"},alarmSettings:{zh:"系统",en:"System"},currentAlarm:{zh:"当前告警",en:"Active"},historyAlarm:{zh:"历史告警",en:"History"},help:{zh:"帮助",en:"Help"}}},"7ffd":function(e,n,t){"use strict";t.r(n),n["default"]={searchPlaceholder:{zh:"搜索已安装的插件",en:"Search for installed plugins"},active:{zh:"运行中",en:"Active"},inactive:{zh:"已停止",en:"Inactive"},notInstalled:{zh:"未安装",en:"Not installed"},installPlugin:{zh:"安装插件",en:"Install plugin"},name:{zh:"名称",en:"Name"},author:{zh:"作者",en:"Author"},status:{zh:"状态",en:"Status"},stop:{zh:"停止",en:"Stop"},start:{zh:"启动",en:"Start"},install:{zh:"安装",en:"Install"},more:{zh:"了解更多",en:"Read More"},version:{zh:"版本",en:"Version"},recentlySubmitted:{zh:"最近提交",en:"Recently submitted"},compiledUser:{zh:"编译用户",en:"Compiled user"},pluginDesc:{zh:"插件描述",en:"Description"},uploadPlugin:{zh:"上传插件",en:"Upload plugin"},dragFilePlaceholder:{zh:"选择或拖拽文件到此处",en:"Select or drag files here"},selectFile:{zh:"选择文件",en:"Select file"},uploadFile:{zh:"上传文件",en:"Upload file"},uploadTip:{zh:"您可以在这里上传安装 .tar.gz 格式的 plugin 安装包，或用其他方法将插件包上传到 EMQX 所在服务器的 plugins/ 目录并解压安装包进行安装。",en:"You can upload the plugin installation package in .tar.gz format here, or otherwise upload the plugin package to the plugins/ directory on the EMQX server and extract the package for installation."},basicInformation:{zh:"基本信息",en:"Basic Information"},uninstall:{zh:"卸载",en:"Uninstall"},uploadWarning:{zh:"请先上传文件",en:"Please upload the file first"},installNow:{zh:"立即安装",en:"Install now"},moveToTop:{zh:"移到顶部",en:"Move to top"},moveToBottom:{zh:"移到底部",en:"Move to bottom"},successfulInstallation:{zh:"安装成功",en:"Successful installation"},pluginUninstallConfirm:{zh:"是否确认卸载插件 {name}",en:"Are you sure to uninstall plugin {name}?"},uninstalledSuccessfully:{zh:"卸载成功",en:"Uninstalled successfully"}}},"88c3":function(e,n,t){"use strict";t.d(n,"b",(function(){return g}));var s=t("f3f3"),o=(t("d3b7"),t("ddb0"),t("ac1f"),t("466d"),t("159b"),t("b64b"),t("0613")),a=t("47e2"),i=t("c1a0"),r=t("6516"),c=t("6195"),l=t("b54d"),d=t("3309"),h=t("0742"),u=t("ee96"),m=t("6973"),b=t("2ef0"),p={en:Object(s["a"])({},r["a"]),zh:Object(s["a"])({},i["a"])},f=t("aebe");Array.prototype.forEach.call(f.keys(),(function(e){var n=f(e).default,t=e.match(/\w+/)[0];p.en[t]=p.en[t]||{},p.zh[t]=p.zh[t]||{},Object.keys(n).forEach((function(e){var s=n[e],o=s.en,a=s.zh;p.en[t][e]=o,p.zh[t][e]=a}))})),p.en.ConfigSchema=l,p.zh.ConfigSchema=c,p.en.BridgeSchema=h,p.zh.BridgeSchema=d,p.en.SchemaSymbolLabel=m,p.zh.SchemaSymbolLabel=u;var _=Object(a["a"])({messages:p,locale:o["a"].state.lang,warnHtmlInMessage:"off"}),g=function(e){var n=_.global.locale,t=_.global.messages[n];return Object(b["get"])(t,e)};n["a"]=_},"951f":function(e,n,t){"use strict";t.r(n),n["default"]={slowSubPlaceholder:{zh:"还没有启用慢订阅统计，请先开启！",en:"Slow subscription statistics have not been enabled, please enable it first!"},enable:{zh:"开启",en:"Enable"},statsThreshold:{zh:"时延阈值",en:"Stats Threshold"},statsThresholdDesc:{zh:"进行统计的时延阈值,最低值为100ms",en:"The latency threshold for statistics, the minimum value is 100ms"},maximumNumberOfStatistics:{zh:"最大统计条数",en:"Maximum Number of Statistics"},maximumNumberOfStatisticsDesc:{zh:"慢订阅统计记录表的最大记录数",en:"The maximum number of records in the slow subscription statistics record table"},evictionTimeOfRecord:{zh:"有效时长",en:"Eviction Time of Record"},evictionTimeOfRecordDesc:{zh:"记录产生后，有效时长内没有再次触发将被移出统计列表。单位(ms:毫秒，s: 秒)",en:"The eviction time of the record which in the statistics record table"},enableLabel:{zh:"启用以开始统计消息耗时和消息堆积",en:"Enable to start counting message time-consuming and message accumulation"},clearData:{zh:"清空数据",en:"Clear data"},confirmClearData:{zh:"清除当前所有数据并重新统计慢订阅",en:"Clear current data and re-count slow subscription"},basicSettings:{zh:"基础设置",en:"General Settings"},slowSubscriptionSettings:{zh:"慢订阅设置",en:"Slow subscription settings"},updated:{zh:"更新时间",en:"Updated"},statsType:{zh:"时延统计类型",en:"Stats Type"},topic:{zh:"主题",en:"Topic"},duration:{zh:"时长",en:"Duration"},typeResponseDesc:{zh:"客户端响应耗时",en:"Client response time"},typeInternalDesc:{zh:"EMQX 内部中转时间",en:"EMQX internal transfer time"},wholeTypeDesc:{zh:"传输完成的全流程时间",en:"The total time the delivery was completed"}}},"9cfb":function(e,n,t){"use strict";t.r(n),n["default"]={Username:{zh:"用户名",en:"Username"},Password:{zh:"密码",en:"Password"},ProtocolVersion:{zh:"协议版本",en:"ProtocolVersion"},maxSix:{zh:"最大支持6个新连接",en:"Maximum support for 6 new connections"},createNew:{zh:"建立一个新连接",en:"Create a new connection"},defaultConnection:{zh:"默认连接",en:"Default"},connectionName:{zh:"新连接:",en:"New Connection:"},connectionConfiguration:{zh:"连接配置",en:"Connection"},protocolType:{zh:"协议类型",en:"Protocol Type"},host:{zh:"主机名",en:"Host"},port:{zh:"端口",en:"Port"},mountPoint:{zh:"挂载点",en:"Mountpoint"},randomGeneration:{zh:"随机生成",en:"Random"},connected:{zh:"已连接",en:"Connected"},connecting:{zh:"连接中",en:"Connecting"},disconnecting:{zh:"断开连接中",en:"Disonnecting"},reconnecting:{zh:"重新连接中",en:"Reconnecting"},disconnected:{zh:"已断开连接",en:"Disconnected"},connect:{zh:"连接",en:"Connect"},cancelConnection:{zh:"取消连接",en:"Cancel connection"},disconnect:{zh:"断开连接",en:"Disconnect"},Subscription:{zh:"订阅",en:"Subscription"},Subscribe:{zh:"订阅",en:"Subscribe"},time:{zh:"时间",en:"Time"},publish:{zh:"发布",en:"Publish"},received:{zh:"已接收",en:"Received"},clear:{zh:"清除",en:"Clear"},published:{zh:"已发送",en:"Published"},pleaseEnter:{zh:"请输入",en:"Please enter"},rangeError:{zh:"范围错误",en:"range error"},clientNotConnected:{zh:"客户端未连接",en:"Client not connected"},subscriptionFailure:{zh:"订阅失败",en:"Subscription failure"},publishingFailure:{zh:"发布失败",en:"Publishing failure"},connectionDisconnected:{zh:"连接已断开",en:"connection disconnected"},doing:{zh:"{name}",en:"{name} is "},addTopic:{zh:"添加主题",en:"Add Topic"},msgIn:{en:"Incoming Messages",zh:"消息流入"},msgOut:{en:"Outgoing Messages",zh:"消息流出"},msgDrop:{en:"Dropped Messages",zh:"消息丢弃"},startTime:{en:"Start At",zh:"起始时间"},rate:{zh:"条/秒",en:"message(s)/sec"},errorOccurred:{zh:"发生错误",en:"Error occurred"},sessionExpiryInterval:{zh:"会话过期时间",en:"Session Expiry Interval"},neverExpire:{zh:"永不过期",en:"Never Expire"},topicExistedTip:{zh:"该主题已添加，自动跳转至该主题下查看监控数据",en:"Topic already registered, automatically redirecting to the topic to view the monitoring data"}}},ab41:function(e,n,t){"use strict";t.r(n),n["default"]={forgetPassword:{zh:"忘记密码？",en:"Forgot your password?"},login:{zh:"登 录",en:"Login"},username:{zh:"用户名",en:"Username"},clientid:{zh:"客户端 ID",en:"Client ID"},password:{zh:"密码",en:"Password"},skip:{zh:"跳过",en:"Skip"},skipTip:{zh:"下次登录时将再次提示您修改默认密码，您也可以稍后在系统 > 用户菜单中进行修改。",en:"You will be prompted to change the default password again when you log in next time, and you can also change it later in the System > User."},copied:{zh:"复制成功！",en:"Copied Successfully!"},copy:{zh:"复制",en:"Copy"},generate:{zh:"生成",en:"Generate"},warning:{zh:"警告",en:"Warning"},view:{zh:"详情",en:"View"},edit:{zh:"编辑",en:"Edit"},save:{zh:"保存",en:"Save"},saveChanges:{zh:"保存修改",en:"Save Changes"},apply:{zh:"应用",en:"Apply"},create:{zh:"创建",en:"Create"},cancel:{zh:"取消",en:"Cancel"},confirm:{zh:"确定",en:"Confirm"},add:{zh:"添加",en:"Add"},added:{zh:"已添加",en:"Added"},update:{zh:"更新",en:"Update"},delete:{zh:"删除",en:"Delete"},stop:{zh:"停用",en:"Stop"},reset:{zh:"重置",en:"Reset"},confirmDelete:{zh:"确认删除？",en:"Confirm Delete?"},createSuccess:{zh:"创建成功",en:"Created Successfully"},deleteSuccess:{zh:"删除成功",en:"Deleted Successfully"},updateSuccess:{zh:"更新成功",en:"Updated Successfully"},resetSuccess:{zh:"重置成功",en:"Reset Successfully"},editSuccess:{zh:"编辑成功",en:"Edited Successfully"},enableSuccess:{zh:"启用成功",en:"Enabled Successfully"},disabledSuccess:{zh:"停用成功",en:"Disabled Successfully"},collapse:{zh:"收起",en:"Collapse"},next:{zh:"下一页",en:"Next"},prev:{zh:"上一页",en:"Previous"},day:{zh:"天",en:"day | days"},year:{zh:"年",en:"year | years"},select:{zh:"选择",en:"Select"},search:{zh:"搜索",en:"Search"},manage:{zh:"管理",en:"Manage"},tips:{zh:"提示",en:"Tips"},operateSuccess:{zh:"操作成功",en:"Operate Successfully"},detail:{zh:"详情",en:"Detail"},all:{zh:"全部",en:"All"},unameRequired:{zh:"请填写用户名",en:"Username is required"},passwordRequired:{zh:"请填写密码",en:"Password is required"},operation:{zh:"操作",en:"Actions"},opErr:{zh:"操作失败",en:"Operation failed"},nextStep:{zh:"下一步",en:"Next"},backStep:{zh:"上一步",en:"Back"},other:{zh:"其它",en:"Other"},server:{zh:"服务",en:"Server"},enable:{zh:"启用",en:"Enable"},enabled:{zh:"启用",en:"Enabled"},disable:{zh:"停用",en:"Disable"},disabled:{zh:"停用",en:"Disabled"},test:{zh:"测试",en:"Test"},help:{zh:"帮助",en:"Help"},selectFile:{zh:"选择文件",en:"Select file"},yes:{zh:"是",en:"Yes"},no:{zh:"否",en:"No"},second:{zh:"秒 | 秒",en:"second | seconds"},minute:{zh:"分钟",en:"minute"},hour:{zh:"小时",en:"hour"},milliseconds:{zh:"毫秒",en:"milliseconds"},up:{zh:"上移",en:"Up"},down:{zh:"下移",en:"Down"},setting:{zh:"设置",en:"Settings"},download:{zh:"下载",en:"Download"},more:{zh:"更多",en:"More"},or:{zh:"或",en:"Or"},content:{zh:"目录",en:"Content"},tlsVerify:{zh:"验证服务器证书",en:"TLS Verify"},tlsVerifyClient:{zh:"验证客户端证书",en:"TLS Verify Client"},enableTLS:{zh:"启用 TLS",en:"Enable TLS"},tlsConfigItemDesc:{zh:"请填写服务器中 {file} 的文件路径或直接填写 {file} 文件内的内容",en:"Please fill in the file path of {file} in the server or directly fill in the content of the {file} file"},confirmReplacement:{zh:"是否确认替换当前内容？",en:"Are you sure you want to replace the current content?"},import:{zh:"导入",en:"Import"},downloadTemplate:{zh:"下载模板",en:"Download template"},importSuc:{zh:"导入成功",en:"Imported Successfully"},uploadFailed:{zh:"上传失败",en:"Upload Failed"},noData:{zh:"暂无数据",en:"No data"},extensionErrorMsg:{zh:"请上传拓展名为 {extensions} 的文件",en:"Please upload a file with extension {extensions}"},connected:{zh:"已连接",en:"Connected"},disconnected:{zh:"已断开",en:"Disconnected"},connecting:{zh:"连接中",en:"Connecting"},inconsistent:{zh:"集群中各节点不一致",en:"Inconsistent for nodes in the cluster"},stopped:{zh:"已停止",en:"stopped"},overview:{zh:"概览",en:"Overview"},name:{zh:"名称",en:"Name"},status:{zh:"状态",en:"Status"},moveToTop:{zh:"移到顶部",en:"Move to top"},moveToBottom:{zh:"移到底部",en:"Move to bottom"},refresh:{zh:"刷新",en:"Refresh"},current:{zh:"当前值",en:"Current"},highWatermark:{zh:"高水位线",en:"High Watermark"},max:{zh:"最大值",en:"Maximum"},removeSuccess:{zh:"移除成功",en:"Removed Successfully"},remove:{zh:"移除",en:"Remove"},filePath:{zh:"文件路径",en:"File path"},resetConfig:{zh:"重新设置",en:"Reset"},copyFilePath:{zh:"复制文件路径",en:"Copy file path"},certPlaceholder:{zh:"以 -----BEGIN CERTIFICATE----- 开头",en:"Begins with -----BEGIN CERTIFICATE-----"},keyFilePlaceholder:{zh:"以  -----BEGIN RSA PRIVATE KEY----- 开头",en:"Begins with -----BEGIN RSA PRIVATE KEY-----"},isEnabled:{zh:"是否启用",en:"Enable"},rate:{zh:"速率",en:"Rate"},topic:{zh:"主题",en:"Topic"},default:{zh:"默认",en:"Default"},defaultPwdTip:{zh:"为保护账户安全，请修改默认密码：",en:"To ensure your account security, we kindly request you to change your default password:"},note:{zh:"备注",en:"Note"},documentation:{zh:"文档",en:"Documentation"},forum:{zh:"论坛",en:"Forum"},gitHub:{zh:"GitHub",en:"GitHub"},blog:{zh:"博客",en:"Blog"},tokenExpiredMsg:{zh:"登录过期，请重新登录",en:"Login has expired, please login again"},ip:{zh:"IP 地址",en:"IP Address"},notFound:{zh:"未找到页面",en:"This page could not be found"},pageNotFound:{zh:"页面不存在",en:"Not Found"},leave:{zh:"离开",en:"Leave"},unloadTip:{zh:"修改可能不会被保存",en:"Changes that you made may not be saved"},leavePage:{zh:"离开页面？",en:"Leave page?"},upgrade:{zh:"升级",en:"Upgrade"},eeDesc:{zh:"可扩展的 MQTT 平台。连接设备，实时处理 IoT 数据，并与 40+ 云服务和企业系统集成",en:"Scalable MQTT Platform. Connect devices, process IoT data in real-time, and integrate with 40+ cloud services and enterprise systems."},cloudDesc:{zh:"全托管的 MQTT 服务，简化部署、数据集成和全球支持，提升安全性、可靠性和成本效益",en:"Fully Managed MQTT service with simple deployment, data integration, and global support, boosting security, reliability, and cost-efficiency."},inputWithUploaderTip:{zh:"可输入文件内容或点击右侧按钮选择文件",en:"You can enter the content of the file or select file by clicking the button on the right"},uploadTip:{zh:"请上传 {format} 文件",en:"Please upload a {format} file"},namePwdError:{zh:"用户名或密码错误",en:"Incorrect username or password"},networkError:{zh:"网络错误",en:"Network Error"},commonIdError:{zh:"请以字母或数字开头，且只包含字母、数字、下划线和短横线",en:"Please start with a letter or number, and only contain letters, numbers, underscores and hyphens"},notSupportedChinese:{zh:"不支持中文",en:"Does not support Chinese characters"},showMore:{zh:"显示更多",en:"Show More"},lessMore:{zh:"收起",en:"Less"},followUs:{zh:"关注我们",en:"Follow Us"},contactUs:{zh:"联系我们",en:"Contact Us"},feedback:{zh:"反馈",en:"Feedback"},moreAboutMQTT:{zh:"更多关于 MQTT",en:"More About MQTT"},upgradePlan:{zh:"选择适合您需求的升级方案",en:"Choose the Upgrade Plan That Fits Your Needs"}}},ad1c:function(e,n,t){"use strict";t.r(n),n["default"]={networkGraph:{en:"Cluster",zh:"集群拓扑"},shareSubscription:{zh:"共享订阅",en:"Shared Subscriptions"},subscription:{zh:"订阅",en:"Subscriptions"},retained:{zh:"保留消息",en:"Retained"},connectionsTips:{zh:"活跃连接数",en:"Active Connections"},view:{zh:"查看",en:"View"},systemTime:{zh:"系统时间",en:"System Time"},uptime:{zh:"运行时长",en:"Uptime"},currentConnection:{zh:"连接数",en:"Connections"},nodeStatus:{zh:"状态",en:"Status"},running:{zh:"运行中",en:"Running"},stopped:{zh:"已停止",en:"Stopped"},erlangVMMemory:{zh:"VM 内存",en:"VM Memory"},memory:{zh:"操作系统内存",en:"OS Memory"},maxFds:{zh:"最大文件句柄",en:"File Descriptors Limit"},process:{zh:"进程",en:"Processes"},load:{zh:"负载",en:"Load"},osCpuLoad:{zh:"操作系统 CPU 负载",en:"OS CPU Load"},monitor:{zh:"监控",en:"Monitor"},nodeName:{zh:"节点名称",en:"Node Name"},nodeRole:{zh:"节点角色",en:"Node Role"},name:{zh:"名称",en:"Name"},nodeList:{zh:"节点列表",en:"Nodes"},viewNodes:{zh:"查看节点列表",en:"View Nodes"},nodeData:{zh:"节点信息",en:"Node Information"},nodeStatis:{zh:"节点统计",en:"Node Statistics"},currentNodeInfo:{zh:"节点信息",en:"Node info"},basicInfo:{zh:"基础信息",en:"Basic Info"},metric:{zh:"指标",en:"Metric"},configuration:{zh:"配置信息",en:"Configuration"},version:{zh:"版本信息",en:"Version"},basic:{zh:"基础信息",en:"Basic"},listener:{zh:"监听器",en:"Listener"},ListeningPorts:{zh:"当前监听端口列表",en:"Listening address and ports"},listenerProtocol:{zh:"监听协议",en:"Protocol"},listenerAddress:{zh:"监听地址",en:"Address"},connectCurrentAndMax:{zh:"连接 (当前/最大)",en:"Connect (Current/Max)"},current:{zh:"当前",en:"Current"},maximum:{zh:"最大",en:"Maximum"},dataList:{zh:"数据列表",en:"Data List"},packetStatisticsOfNodes:{zh:"集群或单个节点的报文信息、消息统计与流量收发统计",en:"Packet statistics of cluster or node, Message I/O Statistics"},mqttPackets:{zh:"报文",en:"Packets"},messageNumber:{zh:"消息数量",en:"Messages"},traffic:{zh:"流量收发（字节）",en:"Bytes"},client:{zh:"客户端",en:"Client"},session:{zh:"会话",en:"Sessions"},mainConfiguration:{zh:"节点主要配置",en:"Main Configuration"},status:{zh:"状态",en:"Status"},node:{zh:"{n} 节点",en:"{n} Node | {n} Nodes"},nodesNun:{zh:"节点数",en:"Nodes"},numberOfNodesInCluster:{zh:"集群中节点数",en:"Nodes"},strip:{zh:"{n} 条",en:"0 messages | {n} message | {n} messages"},byte:{zh:" 字节",en:" byte"},second:{zh:"秒",en:"sec"},messageOut:{zh:"消息发出",en:"Outgoing Messages"},currentMessageOutRate:{zh:"消息流出速率：",en:"Outgoing Rate:"},messageIn:{zh:"消息流入",en:"Incoming Messages"},currentMessageInRate:{zh:"消息流入速率：",en:"Incoming Rate:"},subscriptionNumber:{zh:"订阅数",en:"Subscriptions"},topicNumber:{zh:"集群订阅关系数",en:"Topics"},connection:{zh:"连接",en:"Connections"},allConnections:{zh:"总连接数",en:"All Connections"},liveConnections:{zh:"在线连接数",en:"Live Connections"},maxConnections:{zh:"连接数峰值",en:"Max Connections"},noData:{zh:"暂无数据",en:"No data"},customer:{zh:"签发对象",en:"Customer"},numberOfConnectionLines:{zh:"License 使用情况",en:"License usage"},issuanceOfEmail:{zh:"签发邮箱",en:"email"},issuedAt:{zh:"签发时间",en:"Issued At"},expireAt:{zh:"到期时间",en:"Expire At"},beforeTheCertificateExpires:{zh:"证书到期前 EMQ 将通过邮件通知签发邮箱，请留意信息接收以免错过续期时间对业务造成影响。",en:"EMQ will email notification before the license expires. Please pay attention to the contact email inbox."},forTrialEdition:{zh:"当前 License 为试用版",en:"The license is for trial"},license:{zh:"License 信息",en:"License"},trialEdition:{zh:"试用版",en:"For Trial"},messageDrop:{zh:"消息丢弃",en:"Dropped Messages"},delivery:{zh:"消息分发",en:"Delivery"},auth:{zh:"认证与权限",en:"Access"},topics:{zh:"主题数",en:"Topics"},Subscription:{zh:"订阅数",en:"Subscriptions"},message:{zh:"消息",en:"Messages"},messaging:{zh:"消息传输",en:"Messaging"},rate:{zh:"速率",en:"Rate"},notPromptAgain:{zh:"不再提示",en:"Stop showing this"},expired:{zh:"过期",en:"Expired"},noSubscribers:{zh:"无订阅者",en:"No Subscribers"},receivedMsg:{zh:"消息接收",en:"Received"},sentMsg:{zh:"消息发送",en:"Sent"},droppedMsg:{zh:"消息丢弃",en:"Dropped"},integration:{zh:"数据指标集成",en:"Metrics Integration"},integrationDesc:{zh:"集成指标数据外部的监控与告警管理",en:"Integrated monitoring and alerting toolkit"},promDesc:{zh:"使用 Prometheus 采集指标数据",en:"Integrated with Prometheus"},role:{zh:"角色",en:"Role"},logPath:{zh:"日志路径",en:"Log Path"},sysPath:{zh:"系统路径",en:"System Path"},explore:{zh:"探索数据",en:"Explore Data"},lastHour:{zh:"过去 1 小时",en:"Last hour"},last6Hours:{zh:"过去 6 小时",en:"Last 6 hours"},last12Hours:{zh:"过去 12 时",en:"Last 12 hours"},lastDay:{zh:"过去 1 天",en:"Last day"},last3Days:{zh:"过去 3 天",en:"Last 3 days"},last7Days:{zh:"过去 7 天",en:"Last 7 days"},client_connect:{zh:"client.connect 钩子触发次数",en:"client.connect hook trigger times"},client_authenticate:{zh:"client.authenticate 钩子触发次数",en:"client.authenticate hook trigger times"},client_connack:{zh:"client.connack 钩子触发次数",en:"client.connack hook trigger times"},client_connected:{zh:"client.connected 钩子触发次数",en:"client.connected hook trigger times"},client_disconnected:{zh:"client.disconnected 钩子触发次数",en:"client.disconnected hook trigger times"},client_authorize:{zh:"client.authorize 钩子触发次数",en:"client.authorize hook trigger times"},client_subscribe:{zh:"client.subscribe 钩子触发次数",en:"client.subscribe hook trigger times"},client_unsubscribe:{zh:"client.unsubscribe 钩子触发次数",en:"client.unsubscribe hook trigger times"},client_auth_anonymous:{zh:"匿名登录的用户数",en:"Number of clients who log in anonymously"},authorization_superuser:{zh:"超级用户",en:"Superuser"},session_created:{zh:"session.created 钩子触发次数",en:"session.created hook trigger times"},session_discarded:{zh:"session.discarded 钩子触发次数",en:"session.discarded hook trigger times"},session_resumed:{zh:"session.resumed 钩子触发次数",en:"session.resumed hook trigger times"},session_takenover:{zh:"session.takenover 钩子触发次数",en:"session.takenover hook trigger times"},session_terminated:{zh:"session.terminated 钩子触发次数",en:"session.terminated hook trigger times"},authorization_allow:{zh:"授权总的通过次数（包括命中缓存，和规则未匹配时默认通过的）",en:"Number of client authorization passes"},authorization_deny:{zh:"总的拒绝授权次数（包括命中缓存，和规则未匹配时默认通过的）",en:"Number of client authorization failures"},authorization_matched_allow:{zh:"由于匹配已有规则而授权通过的次数",en:"Number of client authorization passes due to authorized by some rules"},authorization_matched_deny:{zh:"由于匹配已有规则而拒绝授权的次数",en:"Number of client authorization failures due to being rejected by some rules"},authorization_nomatch:{zh:"授权未匹配任何规则的次数",en:"Number of client authorization request not be matched any rules"},authorization_cache_hit:{zh:"授权命中缓存的次数",en:"Number of client getting authorization result (allow or deny) by cache"},bytes_received:{zh:"已接收字节数",en:"Number of received bytes"},bytes_sent:{zh:"已发送字节数",en:"Number of send bytes"},messages_delayed:{zh:"EMQX 存储的延迟发布的消息数量",en:"Number of delay-published messages stored by EMQX Broker"},messages_delivered:{zh:"EMQX 内部转发到订阅进程的消息数量",en:"Number of messages forwarded to the subscription process internally by EMQX Broker"},messages_dropped:{zh:"EMQX 内部转发到订阅进程前丢弃的消息总数",en:"Total number of messages dropped by EMQX Broker before forwarding to the subscription process"},messages_dropped_no_subscribers:{zh:"由于没有订阅者而被丢弃的消息数量",en:"Number of messages dropped due to no subscribers"},messages_dropped_await_pubrel_timeout:{zh:"由于等待 PUBREL 报文超时",en:"Number of messages dropped due to await PUBREL timeout"},messages_forward:{zh:"向其他节点转发的消息数量",en:"Number of messages forwarded to other nodes"},messages_publish:{zh:"除系统消息外发布的消息数量",en:"Number of messages published in addition to system messages"},messages_qos_0_received:{zh:"接收来自客户端的 QoS 0 消息数量",en:"Number of QoS 0 messages received from clients"},messages_qos_1_received:{zh:"接收来自客户端的 QoS 1 消息数量",en:"Number of QoS 1 messages received from clients"},messages_qos_2_received:{zh:"接收来自客户端的 QoS 2 消息数量",en:"Number of QoS 2 messages received from clients"},messages_qos_0_sent:{zh:"发送给客户端的 QoS 0 消息数量",en:"Number of QoS 0 messages sent to clients"},messages_qos_1_sent:{zh:"发送给客户端的 QoS 1 消息数量",en:"Number of QoS 1 messages sent to clients"},messages_qos_2_sent:{zh:"发送给客户端的 QoS 2 消息数量",en:"Number of QoS 2 messages sent to clients"},messages_received:{zh:"接收来自客户端的消息数量，等于 `messages.qos0.received`，`messages.qos1.received` 与 `messages.qos2.received` 之和",en:"Number of messages received from the client, which is equal to the sum of `messages.qos0.received`,` messages.qos1.received`, and `messages.qos2.received`"},messages_sent:{zh:"发送给客户端的消息数量，等于 `messages.qos0.sent`，`messages.qos1.sent` 与 `messages.qos2.sent` 之和",en:"The number of messages sent to the client, which is equal to the sum of `messages.qos0.sent`,` messages.qos1.sent`, and `messages.qos2.sent`"},messages_acked:{zh:"已经应答的消息数量",en:"Number of acked messages"},delivery_dropped_too_large:{zh:"发送时由于长度超过限制而被丢弃的消息数量",en:"The number of messages that were dropped because the length exceeded the limit when sending"},delivery_dropped_queue_full:{zh:"发送时由于消息队列满而被丢弃的 QoS 不为 0 的消息数量",en:"Number of messages with a non-zero QoS that were dropped because the message queue was full when sending"},delivery_dropped_qos_0_msg:{zh:"发送时由于消息队列满而被丢弃的 QoS 为 0 的消息数量",en:"Number of messages with QoS of 0 that were dropped because the message queue was full when sending"},delivery_dropped_expired:{zh:"发送时由于消息过期而被丢弃的消息数量",en:"Number of messages that were dropped due to message expiration when sending"},delivery_dropped_no_local:{zh:"发送时由于 `No Local` 订阅选项而被丢弃的消息数量",en:"Number of messages that were dropped due to the `No Local` subscription option when sending"},delivery_dropped:{zh:"发送时丢弃的消息总数",en:"Total number of messages that were dropped when sent"},packets_received:{zh:"接收的报文数量",en:"Number of received packets"},packets_sent:{zh:"发送的报文数量",en:"Number of sent packets"},packets_connect_received:{zh:"接收的 CONNECT 报文数量",en:"Number of received CONNECT packets"},packets_connack_auth_error:{zh:"发送的原因码为 0x86 和 0x87 的 CONNACK 报文数量",en:"Number of sent CONNACK messages with reason codes 0x86 and 0x87"},packets_connack_error:{zh:"发送的原因码不为 0x00 的 CONNACK 报文数量，此指标的值大于等于 `packets.connack.auth_error` 的值",en:"Number of sent CONNACK packets where reason code is not 0x00. The value of this indicator is greater than or equal to the value of `packets.connack.auth_error`"},packets_connack_sent:{zh:"发送的 CONNACK 报文数量",en:"Number of sent CONNACK packets"},packets_publish_received:{zh:"接收的 PUBLISH 报文数量",en:"Number of received PUBLISH packets"},packets_publish_sent:{zh:"发送的 PUBLISH 报文数量",en:"Number of sent PUBLISH packets"},packets_publish_inuse:{zh:"接收的报文标识符已被占用的 PUBLISH 报文数量",en:"Number of received PUBLISH packets with occupied packet identifiers"},packets_publish_auth_error:{zh:"接收的未通过 ACL 检查的 PUBLISH 报文数量",en:"Number of received PUBLISH packets that failed the ACL check"},packets_publish_error:{zh:"接收的无法被发布的 PUBLISH 报文数量",en:"Number of received PUBLISH packets that cannot be published"},packets_publish_dropped:{zh:"超出接收限制而被丢弃的 PUBLISH 报文数量",en:"Number of PUBLISH packets that were discarded due to the receiving limit"},packets_puback_received:{zh:"接收的 PUBACK 报文数量",en:"Number of received PUBACK packets"},packets_puback_sent:{zh:"发送的 PUBACK 报文数量",en:"Number of sent PUBACK packets"},packets_puback_inuse:{zh:"接收的报文标识符已被占用的 PUBACK 报文数量",en:"Number of received PUBACK messages with occupied identifiers"},packets_puback_missed:{zh:"接收的未知报文标识符 PUBACK 报文数量",en:"Number of received PUBACK packets with unknown identifiers"},packets_pubrec_received:{zh:"接收的 PUBREC 报文数量",en:"Number of received PUBREC packets"},packets_pubrec_sent:{zh:"发送的 PUBREC 报文数量",en:"Number of sent PUBREC packets"},packets_pubrec_inuse:{zh:"接收的报文标识符已被占用的 PUBREC 报文数量",en:"Number of received PUBREC messages with occupied identifiers"},packets_pubrec_missed:{zh:"接收的未知报文标识符 PUBREC 报文数量",en:"Number of received PUBREC packets with unknown identifiers"},packets_pubrel_received:{zh:"接收的 PUBREL 报文数量",en:"Number of received PUBREL packets"},packets_pubrel_sent:{zh:"发送的 PUBREL 报文数量",en:"Number of sent PUBREL packets"},packets_pubrel_missed:{zh:"接收的未知报文标识符 PUBREL 报文数量",en:"Number of received PUBREL packets with unknown identifiers"},packets_pubcomp_received:{zh:"接收的 PUBCOMP 报文数量",en:"Number of received PUBCOMP packets"},packets_pubcomp_sent:{zh:"发送的 PUBCOMP 报文数量",en:"Number of sent PUBCOMP packets"},packets_pubcomp_inuse:{zh:"接收的报文标识符已被占用的 PUBCOMP 报文数量",en:"Number of received PUBCOMP messages with occupied identifiers"},packets_pubcomp_missed:{zh:"发送的 PUBCOMP 报文数量",en:"Number of missed PUBCOMP packets"},packets_subscribe_received:{zh:"接收的 SUBSCRIBE 报文数量",en:"Number of received SUBSCRIBE packets"},packets_subscribe_error:{zh:"接收的订阅失败的 SUBSCRIBE 报文数量",en:"Number of received SUBSCRIBE packets with failed subscriptions"},packets_subscribe_auth_error:{zh:"接收的未通过 ACL 检查的 SUBACK 报文数量",en:"Number of received SUBACK packets that failed the ACL check"},packets_suback_sent:{zh:"发送的 SUBACK 报文数量",en:"Number of sent SUBACK packets"},packets_unsubscribe_received:{zh:"接收的 UNSUBSCRIBE 报文数量",en:"Number of received UNSUBSCRIBE packets"},packets_unsubscribe_error:{zh:"接收的取消订阅失败的 UNSUBSCRIBE 报文数量",en:"Number of received UNSUBSCRIBE packets with failed unsubscriptions"},packets_unsuback_sent:{zh:"发送的 UNSUBACK 报文数量",en:"Number of sent UNSUBACK packets"},packets_pingreq_received:{zh:"接收的 PINGREQ 报文数量",en:"Number of received PINGREQ packets"},packets_pingresp_sent:{zh:"发送的 PUBRESP 报文数量",en:"Number of sent PUBRESP packets"},packets_disconnect_received:{zh:"接收的 DISCONNECT 报文数量",en:"Number of received DISCONNECT packets"},packets_disconnect_sent:{zh:"发送的 DISCONNECT 报文数量",en:"Number of sent DISCONNECT packets"},packets_auth_received:{zh:"接收的 AUTH 报文数量",en:"Number of received AUTH packets"},packets_auth_sent:{zh:"发送的 AUTH 报文数量",en:"Number of sent AUTH packets"}}},ad20:function(e,n,t){"use strict";t.r(n),n["default"]={mechanism:{zh:"认证方式",en:"Mechanism"},dataSource:{zh:"数据源",en:"Backend"},mechanismAndBackend:{zh:"数据源及认证方式",en:"Mechanism and Backend"},status:{zh:"数据源状态",en:"Status"},createAuth:{zh:"创建认证",en:"Create Authentication"},createAuthz:{zh:"创建授权",en:"Create Authorization"},config:{zh:"配置参数",en:"Configuration"},scram:{zh:"增强认证",en:"SCRAM"},passwordBasedDesc:{zh:"使用客户端用户名、Client ID 与密码进行认证",en:"Authenticate using client username, client id, and password"},jwtDesc:{zh:"客户端携带 JWT 进行认证",en:"Authentication using client JWT"},secret_base64_encoded:{zh:"Secret 使用 Base64 编码",en:"Secret Base64 Encoded"},scramDesc:{zh:"MQTT 5.0 增强认证",en:"MQTT 5 Enhanced Authentication"},dataSourceDesc:{zh:"选择存储认证数据的数据库或提供认证数据功能的 HTTP 服务器",en:"Select the database where the authentication data is stored or the HTTP server that provides the authentication data function"},dataSourceAuthzDesc:{zh:"选择存储权限数据的数据库或提供认证数据功能的 HTTP 服务器",en:"Select the database where the authorization data is stored or the HTTP server that provides the authorization data function"},dataSourceScramDesc:{zh:"选择存储认证数据的数据库",en:"Select the database where the authentication data is stored"},database:{zh:"数据库",en:"Database"},jwtDataSourceDesc:{zh:"JWT 认证无需选择数据源，请继续下一步配置",en:"JWT authentication does not require a backend, continue to the next step"},reconnect:{zh:"自动重连",en:"Reconnect"},userConfig:{zh:"用户管理",en:"User Management"},users:{zh:"用户管理",en:"Users"},data:{zh:"数据管理",en:"Data"},testSuccess:{zh:"测试通过，您的配置可以正常使用",en:"Test success, your configuration works fine"},testFailed:{zh:"测试失败",en:"Test failed"},moveUp:{zh:"上移",en:"Move up"},moveDown:{zh:"下移",en:"Move down"},authzSetting:{zh:"授权设置",en:"Authorization Settings"},enableCache:{zh:"启用缓存",en:"Enable Cache"},clearCache:{zh:"清除缓存",en:"Clear cache"},clearCacheDesc:{zh:"清除当前所有授权结果缓存。",en:"Clears all current authorization result caches."},clearCacheConfirm:{zh:"是否确认清除缓存",en:"Confirm clear cache?"},clearedSuccessfully:{zh:"清除成功",en:"Cleared successfully"},maxSize:{zh:"缓存最大数量",en:"Maximum number of cached items"},ttl:{zh:"缓存过期时间",en:"Time to live for the cached data"},setDefault:{zh:"设置默认",en:"Set default"},setDefaultConfirm:{zh:"确定要将当前输入重置为默认值吗？",en:"Are you sure you want to reset the current input to default value?"},passwordHash:{zh:"密码加密方式",en:"Password Hash"},saltPosition:{zh:"加盐方式",en:"Salt Position"},queryTimeout:{zh:"查询超时",en:"Query Timeout"},userIdType:{zh:"账号类型",en:"UserID Type"},server:{zh:"服务",en:"Server"},servers:{zh:"服务列表",en:"Servers"},enableTLS:{zh:"启用 TLS",en:"Enable TLS"},tlsVerify:{zh:"验证服务器证书",en:"TLS Verify"},mongoType:{zh:"部署模式",en:"MongoDB Mode"},mongoAuthSource:{zh:"认证源",en:"Auth Source"},srvRecord:{zh:"SRV 记录",en:"SRV Record"},redisType:{zh:"部署模式",en:"Redis Mode"},single:{zh:"单节点",en:"Single"},connectTimeout:{zh:"连接超时",en:"Connect Timeout"},requestTimeout:{zh:"请求超时",en:"Request Timeout"},filter:{zh:"查询 Filter",en:"Filter"},cmd:{zh:"命令",en:"CMD"},passwordHashField:{zh:"Password Hash 字段名",en:"Password Hash Field"},saltField:{zh:"Salt 字段名",en:"Salt Field"},superuserField:{zh:"is_superuser 字段名",en:"is_superuser Field"},sentinel:{zh:"Sentinel 名字",en:"Sentinel Name"},method:{zh:"请求方式",en:"Method"},httpPipelining:{zh:"HTTP 管道",en:"HTTP Pipelining"},isSuperuser:{zh:"是否为超级用户",en:"Is superuser"},isSuperuserDesc:{zh:"当设置为超级用户后，该用户将跳过后续所有的权限检查。",en:"When set to superuser, this user will skip all subsequent permission."},validMethod:{zh:"验证方式",en:"JWT or JWKS"},algorithm:{zh:"加密方式",en:"Algorithm"},refreshInterval:{zh:"JWKS 刷新间隔",en:"JWKS Refresh Interval"},builtInDatabase:{zh:"内置数据库",en:"Built-in Database"},builtInDatabaseDesc:{zh:"内置数据库授权无需配置参数，请点击创建按钮完成操作",en:"Built-in database authorization does not require configuration parameters, please click the Create button to complete the operation"},HTTPServer:{zh:"HTTP 服务",en:"HTTP Server"},file:{zh:"文件",en:"File"},permissionCount:{zh:"权限条数",en:"Number of permissions"},pleaseEnterClientID:{zh:"请输入客户端 ID",en:"Client ID is required"},pleaseEnterUsername:{zh:"请输入用户名",en:"Username is required"},pleaseSelectPermission:{zh:"请选择 permission",en:"Please select permission"},pleaseSelectAction:{zh:"请选择 Action",en:"Please select action"},pleaseEnterTopic:{zh:"请输入 Topic",en:"Please enter topic"},iterationCount:{zh:"迭代次数",en:"Iteration Count"},dkLength:{zh:"密钥长度",en:"Derived key length"},payloadTooLargeTip:{zh:"payload 大小超过 1MB 内容无法查看",en:"The payload size exceeds 1MB, and the content cannot be viewed"},readMode:{zh:"读模式",en:"Read Mode"},writeMode:{zh:"写模式",en:"Write Mode"},topicTips:{zh:"主题字符串，支持 ${0} 和 ${1} 占位符，在执行权限检查时会被替换为对应客户端的 Username 或 Client ID",en:"Topic supports ${0} and ${1} placeholders, which will be replaced with the corresponding client's Username or Client ID when performing permission checks."},jwtBase64Tips:{zh:"接收一个 Base64 编码后的字符串",en:"Receive a Base64-encoded string"},nodeStatusDesc:{zh:"每个节点上{target}状态和执行情况",en:"{target} status and execution on each node"},noDatabasePlaceholder:{zh:"无可用的数据库供此类型网关选择",en:"There are no databases available for this type of gateway to choose from"},pseudorandomFunction:{zh:"伪随机函数",en:"Pseudorandom function"},from:{zh:"JWT 来自于",en:"JWT From"},noMatch:{zh:"未匹配时执行",en:"No Match Action"},denyAction:{zh:"拒绝时执行",en:"Deny Action"},disableAuthnTip:{zh:"停用该认证器后，将影响客户端的安全连接，是否继续？",en:"Disabling this authenticator will affect the security connection of the client, continue?"},disableAuthzTip:{zh:"停用该授权后，将影响客户端发布/订阅时的权限操作，是否继续？",en:"Disabling this authorization will affect the operation of permissions when the client publishes/subscribes. Continue?"},delAuthnConfirm:{zh:"删除该认证器后，可能导致非法客户端连接至当前服务器，{additionalTip}是否确认删除？",en:"Deleting this authenticator may result in unauthorized clients connecting to the EMQX server, {additionalTip}continue? "},delAuthzConfirm:{zh:"删除该授权后，可能影响客户端发布和订阅操作的权限控制，{additionalTip}是否确认删除？",en:"Deleting this authorization may affect the permission control of client publish and subscribe operations, {additionalTip}continue?"},deleteBuiltInTip:{zh:"且已添加的数据将被删除，",en:"and the added data will be deleted, "},allUsers:{zh:"所有用户",en:"All Users"},permission:{zh:"权限",en:"Permission"},permissions:{zh:"权限管理",en:"Permissions"},action:{zh:"操作",en:"Action"},updateBuiltInTip:{zh:"更新密码加密方式或加盐方式将导致已添加的认证数据不可用，是否确认更新？",en:"Updating the Password Hash or Salt Position will cause the added authentication data to be unavailable. Confirm to update?"},authn:{zh:"认证",en:"authentication"},authzCheck:{zh:"鉴权检查",en:"authorizations"},allow:{zh:"允许",en:"Allow"},allowDesc:{zh:"{type}通过次数",en:"Number of {type} passed"},deny:{zh:"拒绝",en:"Deny"},denyDesc:{zh:"{type}失败次数",en:"Number of {type} failed"},noMatchAuthnDesc:{zh:"未查找到客户端认证数据次数",en:"Number of times client authentication data not found"},noMatchAuthzDesc:{zh:"未查找到客户端权限数据次数",en:"Number of times client authorizations data not found"},publish:{zh:"发布时",en:"Publish"},subscribe:{zh:"订阅时",en:"Subscribe"},all:{zh:"发布和订阅时",en:"Publish & Subscribe"},jsonFormatError:{zh:"请输入正确的 JSON",en:"Please enter the correct JSON"},httpHeaderTip:{zh:"配置中指定的 Body 必须被格式化为 JSON 对象。方法为 POST 的 HTTP 请求中的 Body 的最终表现形式取决于 `content-type` 头被设置为 `application/json` 还是 `application/x-www-form-urlencoded`。",en:"Please note that the body specified in the configuration must be formatted as a JSON object. The final representation of the HTTP POST body depends on the `content-type` header being set to either `application/json` or `application/x-www-form-urlencoded`."},replicaSetName:{zh:"Replica Set 名称",en:"Replica Set Name"},collection:{zh:"集合",en:"Collection"},priorityRangeError:{zh:"优先级数字必须在 1 到 255 之间。",en:"Priority number must be a number between 1 and 255."}}},aebe:function(e,n,t){var s={"./APIKey.js":"b9e1","./Alarm.js":"c2a2","./Auth.js":"ad20","./AuthDoc.js":"5e3b","./Base.js":"ab41","./BasicConfig.js":"3183","./Clients.js":"1f00","./Dashboard.js":"ad1c","./Exhook.js":"5a9d","./Extension.js":"f5d2","./Gateway.js":"17aa","./General.js":"c690","./LogTrace.js":"f9f6","./MQTTRes.js":"574c","./MonitoringIntegration.js":"5d78","./Plugins.js":"7ffd","./Rule.js":"d8dc","./RuleEngine.js":"d6c8","./RuleSyntax.js":"feab","./Settings.js":"3ad0","./SlowSub.js":"951f","./Subs.js":"713e","./Tools.js":"9cfb","./Topics.js":"2f20","./components.js":"7a64"};function o(e){var n=a(e);return t(n)}function a(e){if(!t.o(s,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return s[e]}o.keys=function(){return Object.keys(s)},o.resolve=a,e.exports=o,o.id="aebe"},afbc:function(e,n,t){"use strict";t.d(n,"b",(function(){return r})),t.d(n,"c",(function(){return l}));t("d3b7"),t("3ca3"),t("ddb0");var s=t("0613"),o=t("6c02"),a=function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-37dbe099")]).then(t.bind(null,"d79b"))},i=function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-3ffac944")]).then(t.bind(null,"d66c"))},r=[{path:"/",redirect:"/dashboard",meta:{authRequired:!0}},{path:"/login",name:"login",meta:{authRequired:!1},component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-a876701e")]).then(t.bind(null,"8ebf"))}},{path:"/dashboard",component:a,redirect:"/dashboard/overview",meta:{authRequired:!0,subMenu:!0},children:[{path:"overview",name:"overview",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-bcd44488"),t.e("chunk-1f758299")]).then(t.bind(null,"5dcc"))},meta:{}},{path:"nodes",name:"nodes",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-2d0b26c4")]).then(t.bind(null,"c027"))},meta:{}},{path:"metrics",name:"metrics",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-17e170fa")]).then(t.bind(null,"ce4f"))},meta:{}},{path:"nodes/:nodeName",name:"nodeDetail",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-596a50d8")]).then(t.bind(null,"0598"))},meta:{hideInMenu:!0}}]},{path:"/alarm",component:a,redirect:"/alarm/current-alarm",meta:{hideKey:"alarm",authRequired:!0,subMenu:!0},children:[{path:"current-alarm",name:"current-alarm",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-3bdcf584")]).then(t.bind(null,"335e"))}},{path:"history-alarm",name:"history-alarm",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-61fb1656")]).then(t.bind(null,"b66b"))}}]},{path:"/clients",component:a,meta:{hideKey:"clients",authRequired:!0},children:[{path:"",name:"clients",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-8161687a"),t.e("chunk-4568aaf6")]).then(t.bind(null,"101d"))}},{path:"detail/:clientId",name:"clients-detail",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-8161687a"),t.e("chunk-9526fa42")]).then(t.bind(null,"b62e"))}}]},{path:"/subscriptions",redirect:"/subscriptions/subscription",component:a,meta:{hideKey:"subscriptions",authRequired:!0,subMenu:!0},children:[{path:"subscription",name:"subscription",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-8161687a"),t.e("chunk-3ceb5e1d")]).then(t.bind(null,"df2a"))}},{path:"topics",name:"topics",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-8161687a"),t.e("chunk-0c20f250")]).then(t.bind(null,"786f"))}}]},{path:"/retained",component:a,meta:{hideKey:"retained",authRequired:!0},children:[{path:"",name:"retained",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-46feddca"),t.e("chunk-8161687a"),t.e("chunk-547eb8a5")]).then(t.bind(null,"e44d"))}}]},{path:"/delayed-pub",component:a,meta:{hideKey:"delayed-pub",authRequired:!0},children:[{path:"",name:"delayed-pub",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-46feddca"),t.e("chunk-7eafee9e")]).then(t.bind(null,"bd62"))}}]},{path:"/users",component:a,meta:{hideKey:"users",authRequired:!0},children:[{path:"",name:"users",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-0ab85f5c")]).then(t.bind(null,"872a"))}}]},{path:"/banned-clients",meta:{hideKey:"banned-clients",authRequired:!0},component:a,children:[{path:"",name:"banned-clients",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-11f9ec5a")]).then(t.bind(null,"90d8"))}}]},{path:"/flapping-detect",meta:{hideKey:"flapping-detect",authRequired:!0},component:a,children:[{path:"",name:"flapping-detect",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-eecb1de6")]).then(t.bind(null,"7167"))}}]},{path:"/authentication",component:a,meta:{hideKey:"authentication",authRequired:!0},children:[{path:"",name:"authentication",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-df896a0a"),t.e("chunk-160b51c6"),t.e("chunk-1fd4d15c"),t.e("chunk-202d058c")]).then(t.bind(null,"d6a4"))}},{path:"create",name:"authenticationCreate",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-8ef8715e")]).then(t.bind(null,"46ec"))}},{path:"detail/:id",name:"authenticationDetail",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-058a2593")]).then(t.bind(null,"2b7a"))}}]},{path:"/authorization",component:a,meta:{hideKey:"authorization",authRequired:!0},children:[{path:"",name:"authorization",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-df896a0a"),t.e("chunk-160b51c6"),t.e("chunk-1fd4d15c"),t.e("chunk-890e1858")]).then(t.bind(null,"6aa3"))}},{path:"create",name:"authorizationCreate",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-0a779bc0")]).then(t.bind(null,"f33c"))}},{path:"detail/:type",name:"authorizationDetail",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-d3939fe6")]).then(t.bind(null,"671b"))}}]},{path:"/gateway",component:a,meta:{hideKey:"gateway",authRequired:!0},children:[{path:"",name:"gateway",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-9335f8e6")]).then(t.bind(null,"fadc"))}},{path:"create/:name",name:"gateway-create",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-ba2e30b0"),t.e("chunk-182def1c"),t.e("chunk-b1137cc8"),t.e("chunk-583aae1c")]).then(t.bind(null,"c860"))}},{path:"detail/:name",name:"gateway-detail",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-50a5cdfa")]).then(t.bind(null,"96ce"))},children:[{path:"settings",name:"gateway-detail-settings",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-ba2e30b0"),t.e("chunk-b1137cc8"),t.e("chunk-06de0012")]).then(t.bind(null,"db8b"))}},{path:"listeners",name:"gateway-detail-listeners",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-ba2e30b0"),t.e("chunk-182def1c"),t.e("chunk-50a251aa")]).then(t.bind(null,"4221"))}},{path:"auth",name:"gateway-detail-auth",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-e334e728")]).then(t.bind(null,"a067"))}},{path:"clients",name:"gateway-detail-clients",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-8161687a"),t.e("chunk-9526fa42"),t.e("chunk-7d8ccdfe")]).then(t.bind(null,"7835"))}}]}]},{path:"/APIKey",component:a,meta:{hideKey:"APIKey",authRequired:!0},children:[{path:"",name:"APIKey",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-78ee6a46")]).then(t.bind(null,"543c"))}}]},{path:"/plugins",component:a,meta:{hideKey:"Plugins",authRequired:!0},children:[{path:"",name:"plugins",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-df896a0a"),t.e("chunk-2e2f424e"),t.e("chunk-7970afcc")]).then(t.bind(null,"80f9"))}},{path:"install",name:"plugin-install",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-575c8fb7")]).then(t.bind(null,"2f4f"))}},{path:"detail/:pluginName-:pluginVersion",name:"plugin-detail",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-2e2f424e"),t.e("chunk-28233d66")]).then(t.bind(null,"0185"))}}]},{path:"/exhook",component:a,meta:{hideKey:"Exhook",authRequired:!0},children:[{path:"",name:"exhook",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-df896a0a"),t.e("chunk-e4818b78")]).then(t.bind(null,"71d0"))}},{path:"create",name:"exhook-create",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-ba2e30b0"),t.e("chunk-441be094"),t.e("chunk-615dcd9d")]).then(t.bind(null,"fc9d"))}},{path:"detail/:exhookName",name:"exhook-detail",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-ba2e30b0"),t.e("chunk-441be094"),t.e("chunk-626c09dc")]).then(t.bind(null,"c88d"))}}]},{path:"/rules",component:a,meta:{hideKey:"iot",authRequired:!0},children:[{path:"",name:"iot",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-2d0aa193"),t.e("chunk-1fd1af46"),t.e("chunk-2aeed5c1")]).then(t.bind(null,"8c51"))}},{path:"create",component:function(){return t.e("chunk-43f459de").then(t.bind(null,"e978"))},redirect:"/iot/create/form",children:[{path:"form",name:"iot-create",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-66999888")]).then(t.bind(null,"367b"))}}]},{path:"detail/:id",component:function(){return t.e("chunk-43f459de").then(t.bind(null,"e978"))},redirect:"/rules/detail/:id/info",children:[{path:"info",name:"iot-detail",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-4c2cae49")]).then(t.bind(null,"314b"))}},{path:"bridge",name:"create-bridge-for-edit-iot",component:i}]}]},{path:"/bridge",component:a,redirect:"/bridge/dataBridge",meta:{hideKey:"bridge",authRequired:!0},children:[{path:"dataBridge",name:"data-bridge",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-160b51c6"),t.e("chunk-267cc152")]).then(t.bind(null,"c8d7"))},children:[{path:"create",name:"bridge-create",component:i},{path:"detail/:id",name:"bridge-detail",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-19f9b363")]).then(t.bind(null,"01c2"))}}]}]},{path:"/listener",component:a,meta:{hideKey:"listener",authRequired:!0},children:[{path:"",name:"listener",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-ba2e30b0"),t.e("chunk-182def1c"),t.e("chunk-2d237515")]).then(t.bind(null,"fb36"))}}]},{path:"/mqtt",component:a,redirect:"/mqtt/general",meta:{hideKey:"mqtt",authRequired:!0,subMenu:!0},children:[{path:"general",name:"mqtt-general",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-4b435aa7")]).then(t.bind(null,"1d83"))}},{path:"session",name:"mqtt-session",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-bbbcf79c")]).then(t.bind(null,"1741"))}},{path:"retainer",name:"mqtt-retainer",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-0775ce20"),t.e("chunk-14d6328c")]).then(t.bind(null,"7926"))}},{path:"system-topic",name:"mqtt-system-topic",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-0775ce20"),t.e("chunk-c5072336")]).then(t.bind(null,"cdea"))}}]},{path:"/topic-rewrite",component:a,meta:{hideKey:"topic-rewrite",authRequired:!0},children:[{path:"",name:"topic-rewrite",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-6b6fb658")]).then(t.bind(null,"ef50"))}}]},{path:"/auto-sub",component:a,meta:{hideKey:"auto-sub",authRequired:!0},children:[{path:"",name:"auto-sub",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-7b59aba3")]).then(t.bind(null,"3a2a"))}}]},{path:"/delayed-pub-configuration",component:a,meta:{hideKey:"delayed-pub-configuration",authRequired:!0},children:[{path:"",name:"delayed-pub-configuration",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-0775ce20"),t.e("chunk-aadf8a56")]).then(t.bind(null,"70cd"))}}]},{path:"/log",component:a,meta:{hideKey:"log",authRequired:!0},children:[{path:"",name:"log",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-a95b6732")]).then(t.bind(null,"7c68"))}}]},{path:"/monitoring",component:a,redirect:"/monitoring/alarm-settings",meta:{authRequired:!0,subMenu:!0},children:[{path:"alarm-settings",name:"alarm-settings",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-49501bb6")]).then(t.bind(null,"9fbe"))}},{path:"integration",name:"monitoring-integration",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-46feddca"),t.e("chunk-7186f538")]).then(t.bind(null,"d428"))}}]},{path:"/flow",component:a,meta:{hideKey:"flow",authRequired:!0},children:[{path:"",name:"flow",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-2d0aa193"),t.e("chunk-d142fd52"),t.e("chunk-160b51c6"),t.e("chunk-50728d70")]).then(t.bind(null,"fb80"))}}]},{path:"/websocket",component:a,meta:{hideKey:"websocket",authRequired:!0},props:{keepAlive:!0},children:[{path:"",name:"websocket",component:function(){return Promise.all([t.e("chunk-46feddca"),t.e("chunk-75c1afb9"),t.e("chunk-5cff3e97")]).then(t.bind(null,"e85e"))}}]},{path:"/topic-metrics",component:a,meta:{hideKey:"topicMetrics",authRequired:!0},children:[{path:"",name:"topic-metrics",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-8161687a"),t.e("chunk-e8b1caf4")]).then(t.bind(null,"0775"))}}]},{path:"/slow-sub",component:a,meta:{hideKey:"slowSub",authRequired:!0},children:[{path:"",name:"slow-sub",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-8161687a"),t.e("chunk-6c468a64")]).then(t.bind(null,"b3e8"))}},{path:"config",name:"slow-sub-config",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-b229b3d4")]).then(t.bind(null,"1deb"))}}]},{path:"/log-trace",component:a,meta:{hideKey:"logTrace",authRequired:!0},children:[{path:"",name:"log-trace",component:function(){return Promise.all([t.e("chunk-615f377b"),t.e("chunk-5e8bbcdb"),t.e("chunk-7e213561")]).then(t.bind(null,"6cff"))}},{path:"detail/:id",name:"log-trace-detail",component:function(){return Promise.all([t.e("chunk-monaco-editor"),t.e("chunk-615f377b"),t.e("chunk-46feddca"),t.e("chunk-38e26fa8")]).then(t.bind(null,"1280"))}}]},{path:"/:pathMatch(.*)*",component:a,meta:{},children:[{path:"",name:"not-found",component:function(){return t.e("chunk-0875d0b8").then(t.bind(null,"6a7e"))}}]}],c=Object(o["a"])({history:Object(o["b"])(),routes:r});function l(e){s["a"].commit("UPDATE_USER_INFO",{logOut:!0}),s["a"].commit("UPDATE_EDITION",null);var n=c.currentRoute.value.path;"/login"!==n&&c.push({path:"/login",query:{to:e||(null!==n&&void 0!==n?n:void 0)}})}c.beforeEach((function(e,n,t){var o=e.fullPath,a=e.meta,i=a.authRequired,r=void 0!==i&&i,c=s["a"].state.user;r&&!c.token&&l(o),t()})),n["a"]=c},b54d:function(e){e.exports=JSON.parse('{"emqx_conf_schema":{"common_handler_drop_mode_qlen":{"desc":"When the number of buffered log events is larger than this value, the new log events are dropped.\\nWhen drop mode is activated or deactivated, a message is printed in the logs.","label":"Queue Length before Entering Drop Mode"},"cluster_mcast_addr":{"desc":"Multicast IPv4 address.","label":"Cluster Multicast Address"},"desc_cluster_dns":{"desc":"Service discovery via DNS SRV records.","label":"Cluster DNS"},"cluster_dns_name":{"desc":"The domain name from which to discover peer EMQX nodes\' IP addresses.\\nApplicable when <code>cluster.discovery_strategy = dns</code>","label":"Cluster Dns Name"},"rpc_keyfile":{"desc":"Path to the private key file for the <code>rpc.certfile</code>.<br/>\\nNote: contents of this file are secret, so it\'s necessary to set permissions to 600.","label":"RPC Keyfile"},"cluster_mcast_recbuf":{"desc":"Size of the kernel-level buffer for incoming datagrams.","label":"Cluster Muticast Sendbuf"},"cluster_autoheal":{"desc":"If <code>true</code>, the node will try to heal network partitions automatically.","label":"Cluster Auto Heal"},"log_overload_kill_enable":{"desc":"Enable log handler overload kill feature.","label":"Log Handler Overload Kill"},"node_etc_dir":{"desc":"<code>etc</code> dir for the node","label":"Etc Dir"},"cluster_proto_dist":{"desc":"The Erlang distribution protocol for the cluster.<br/>\\n- inet_tcp: IPv4 TCP <br/>\\n- inet_tls: IPv4 TLS, works together with <code>etc/ssl_dist.conf</code>","label":"Cluster Protocol Distribution"},"log_burst_limit_enable":{"desc":"Enable log burst control feature.","label":"Enable Burst"},"dist_buffer_size":{"desc":"Erlang\'s distribution buffer busy limit in kilobytes.","label":"Erlang\'s dist buffer size(KB)"},"common_handler_max_depth":{"desc":"Maximum depth for Erlang term log formatting and Erlang process message queue inspection.","label":"Max Depth"},"desc_log":{"desc":"EMQX logging supports multiple sinks for the log events.\\nEach sink is represented by a _log handler_, which can be configured independently.","label":"Log"},"common_handler_flush_qlen":{"desc":"If the number of buffered log events grows larger than this threshold, a flush (delete) operation takes place.\\nTo flush events, the handler discards the buffered log messages without logging.","label":"Flush Threshold"},"common_handler_chars_limit":{"desc":"Set the maximum length of a single log message. If this length is exceeded, the log message will be truncated.\\nNOTE: Restrict char limiter if formatter is JSON , it will get a truncated incomplete JSON data, which is not recommended.","label":"Single Log Max Length"},"cluster_k8s_namespace":{"desc":"Kubernetes namespace.","label":"K8s Namespace"},"node_name":{"desc":"Unique name of the EMQX node. It must follow <code>%name%{\'@\'}FQDN</code> or\\n<code>%name%{\'@\'}IPv4</code> format.","label":"Node Name"},"rpc_port_discovery":{"desc":"<code>manual</code>: discover ports by <code>tcp_server_port</code>.<br/>\\n<code>stateless</code>: discover ports in a stateless manner, using the following algorithm.\\nIf node name is <code>emqxN{\'@\'}127.0.0.1</code>, where the N is an integer,\\nthen the listening port will be 5370 + N.","label":"RRC Port Discovery"},"log_overload_kill_restart_after":{"desc":"The handler restarts automatically after a delay in the event of termination, unless the value `infinity` is set, which blocks any subsequent restarts.","label":"Handler Restart Timer"},"log_file_handler_rotation_size":{"desc":"This parameter controls log file rotation. The value `infinity` means the log file will grow indefinitely, otherwise the log file will be rotated once it reaches `max_size` in bytes.","label":"Rotation Size"},"desc_log_file_handler":{"desc":"Log handler that prints log events to files.","label":"Files Log Handler"},"rpc_socket_keepalive_count":{"desc":"How many times the keepalive probe message can fail to receive a reply\\nuntil the RPC connection is considered lost.","label":"RPC Socket Keepalive Count"},"cluster_etcd_server":{"desc":"List of endpoint URLs of the etcd cluster","label":"Cluster Etcd Server"},"db_backend":{"desc":"Select the backend for the embedded database.<br/>\\n<code>rlog</code> is the default backend,\\nthat is suitable for very large clusters.<br/>\\n<code>mnesia</code> is a backend that offers decent performance in small clusters.","label":"DB Backend"},"desc_authorization":{"desc":"Settings that control client authorization.","label":"Authorization"},"cluster_etcd_ssl":{"desc":"Options for the TLS connection to the etcd cluster.","label":"Cluster Etcd SSL Option"},"rpc_insecure_fallback":{"desc":"Enable compatibility with old RPC authentication.","label":"RPC insecure fallback"},"cluster_mcast_buffer":{"desc":"Size of the user-level buffer.","label":"Cluster Muticast Buffer"},"rpc_authentication_timeout":{"desc":"Timeout for the remote node authentication.","label":"RPC Authentication Timeout"},"cluster_call_retry_interval":{"desc":"Time interval to retry after a failed call.","label":"Cluster Call Retry Interval"},"cluster_mcast_sndbuf":{"desc":"Size of the kernel-level buffer for outgoing datagrams.","label":"Cluster Muticast Sendbuf"},"rpc_driver":{"desc":"Transport protocol used for inter-broker communication","label":"RPC dirver"},"max_ets_tables":{"desc":"Max number of ETS tables","label":"Max number of ETS tables"},"desc_db":{"desc":"Settings for the embedded database.","label":"Database"},"desc_cluster_etcd":{"desc":"Service discovery using \'etcd\' service.","label":"Cluster Etcd"},"cluster_name":{"desc":"Human-friendly name of the EMQX cluster.","label":"Cluster Name"},"log_rotation_enable":{"desc":"Enable log rotation feature.","label":"Rotation Enable"},"cluster_call_cleanup_interval":{"desc":"Time interval to clear completed but stale transactions.\\nEnsure that the number of completed transactions is less than the <code>max_history</code>.","label":"Clean Up Interval"},"desc_cluster_static":{"desc":"Service discovery via static nodes.\\nThe new node joins the cluster by connecting to one of the bootstrap nodes.","label":"Cluster Static"},"db_default_shard_transport":{"desc":"Defines the default transport for pushing transaction logs.<br/>\\nThis may be overridden on a per-shard basis in <code>db.shard_transports</code>.\\n<code>gen_rpc</code> uses the <code>gen_rpc</code> library,\\n<code>distr</code> uses the Erlang distribution.","label":"Default Shard Transport"},"cluster_static_seeds":{"desc":"List EMQX node names in the static cluster. See <code>node.name</code>.","label":"Cluster Static Seeds"},"log_overload_kill_qlen":{"desc":"Maximum allowed queue length.","label":"Max Queue Length"},"node_backtrace_depth":{"desc":"Maximum depth of the call stack printed in error messages and\\n<code>process_info</code>.","label":"BackTrace Depth"},"desc_log_burst_limit":{"desc":"Large bursts of log events produced in a short time can potentially cause problems, such as:\\n - Log files grow very large\\n - Log files are rotated too quickly, and useful information gets overwritten\\n - Overall performance impact on the system\\n\\nLog burst limit feature can temporarily disable logging to avoid these issues.","label":"Log Burst Limit"},"common_handler_enable":{"desc":"Enable this log handler.","label":"Enable Log Handler"},"cluster_k8s_service_name":{"desc":"EMQX broker service name.","label":"K8s Service Name"},"common_handler_rotation_count":{"desc":"Maximum number of log files.","label":"Max Log Files Number"},"node_cookie":{"desc":"Secret cookie is a random string that should be the same on all nodes in\\nthe given EMQX cluster, but unique per EMQX cluster. It is used to prevent EMQX nodes that\\nbelong to different clusters from accidentally connecting to each other.","label":"Node Cookie"},"db_role":{"desc":"Select a node role.<br/>\\n<code>core</code> nodes provide durability of the data, and take care of writes.\\nIt is recommended to place core nodes in different racks or different availability zones.<br/>\\n<code>replicant</code> nodes are ephemeral worker nodes. Removing them from the cluster\\ndoesn\'t affect database redundancy<br/>\\nIt is recommended to have more replicant nodes than core nodes.<br/>\\nNote: this parameter only takes effect when the <code>backend</code> is set\\nto <code>rlog</code>.","label":"DB Role"},"rpc_tcp_server_port":{"desc":"Listening port used by RPC local service.<br/>\\nNote that this config only takes effect when rpc.port_discovery is set to manual.","label":"RPC TCP Server Port"},"desc_console_handler":{"desc":"Log handler that prints log events to the EMQX console.","label":"Console Handler"},"node_applications":{"desc":"List of Erlang applications that shall be rebooted when the EMQX broker joins the cluster.","label":"Application"},"log_burst_limit_max_count":{"desc":"Maximum number of log events to handle within a `window_time` interval. After the limit is reached, successive events are dropped until the end of the `window_time`.","label":"Events Number"},"rpc_tcp_client_num":{"desc":"Set the maximum number of RPC communication channels initiated by this node to each remote node.","label":"RPC TCP Client Num"},"cluster_k8s_address_type":{"desc":"Address type used for connecting to the discovered nodes.\\nSetting <code>cluster.k8s.address_type</code> to <code>ip</code> will\\nmake EMQX to discover IP addresses of peer nodes from Kubernetes API.","label":"K8s Address Type"},"rpc_socket_sndbuf":{"desc":"TCP tuning parameters. TCP sending buffer size.","label":"RPC Socket Sndbuf"},"cluster_mcast_ttl":{"desc":"Time-to-live (TTL) for the outgoing UDP datagrams.","label":"Cluster Multicast TTL"},"db_core_nodes":{"desc":"List of core nodes that the replicant will connect to.<br/>\\nNote: this parameter only takes effect when the <code>backend</code> is set\\nto <code>rlog</code> and the <code>role</code> is set to <code>replicant</code>.<br/>\\nThis value needs to be defined for manual or static cluster discovery mechanisms.<br/>\\nIf an automatic cluster discovery mechanism is being used (such as <code>etcd</code>),\\nthere is no need to set this value.","label":"Db Core Node"},"log_file_handler_path":{"desc":"The path and name of the log file.","label":"Log File Name"},"log_file_handler_to":{"desc":"Name the log file.","label":"Log File Name"},"node_dist_net_ticktime":{"desc":"This is the approximate time an EMQX node may be unresponsive until it is considered down and thereby disconnected.","label":"Dist Net TickTime"},"desc_cluster_k8s":{"desc":"Service discovery via Kubernetes API server.","label":"Cluster Kubernetes"},"desc_cluster_mcast":{"desc":"Service discovery via UDP multicast.","label":"Cluster Multicast"},"rpc_cacertfile":{"desc":"Path to certification authority TLS certificate file used to validate <code>rpc.certfile</code>.<br/>\\nNote: certificates of all nodes in the cluster must be signed by the same CA.","label":"RPC Cacertfile"},"desc_node":{"desc":"Node name, cookie, config & data directories and the Erlang virtual machine (BEAM) boot parameters.","label":"Node"},"cluster_k8s_apiserver":{"desc":"Kubernetes API endpoint URL.","label":"Cluster k8s ApiServer"},"common_handler_supervisor_reports":{"desc":"Type of supervisor reports that are logged. Defaults to <code>error</code><br/>\\n  - <code>error</code>: only log errors in the Erlang processes<br/>.\\n  - <code>progress</code>: log process startup.","label":"Report Type"},"node_data_dir":{"desc":"Path to the persistent data directory.<br/>\\nPossible auto-created subdirectories are:<br/>\\n- `mnesia/<node_name>`: EMQX\'s built-in database directory.<br/>\\nFor example, `mnesia/emqx{\'@\'}127.0.0.1`.<br/>\\nThere should be only one such subdirectory.<br/>\\nMeaning, in case the node is to be renamed (to e.g. `emqx{\'@\'}10.0.1.1`),<br/>\\nthe old dir should be deleted first.<br/>\\n- `configs`: Generated configs at boot time, and cluster/local override configs.<br/>\\n- `patches`: Hot-patch beam files are to be placed here.<br/>\\n- `trace`: Trace log files.<br/>\\n\\n**NOTE**: One data dir cannot be shared by two or more EMQX nodes.","label":"Node Data Dir"},"cluster_k8s_suffix":{"desc":"Node name suffix.<br/>\\nNote: this parameter is only relevant when <code>address_type</code> is <code>dns</code>\\nor <code>hostname</code>.","label":"K8s Suffix"},"db_rpc_module":{"desc":"Protocol used for pushing transaction logs to the replicant nodes.","label":"RPC Module"},"cluster_etcd_prefix":{"desc":"Key prefix used for EMQX service discovery.","label":"Cluster Etcd Prefix"},"cluster_mcast_iface":{"desc":"Local IP address the node discovery service needs to bind to.","label":"Cluster Multicast Interface"},"log_burst_limit_window_time":{"desc":"See <code>max_count</code>.","label":"Window Time"},"cluster_dns_record_type":{"desc":"DNS record type.","label":"DNS Record Type"},"cluster_autoclean":{"desc":"Remove disconnected nodes from the cluster after this interval.","label":"Cluster Auto Clean"},"process_limit":{"desc":"Maximum number of simultaneously existing processes for this Erlang system.\\nThe actual maximum chosen may be much larger than the Number passed.\\nFor more information, see: https://www.erlang.org/doc/man/erl.html","label":"Erlang Process Limit"},"max_ports":{"desc":"Maximum number of simultaneously existing ports for this Erlang system.\\nThe actual maximum chosen may be much larger than the Number passed.\\nFor more information, see: https://www.erlang.org/doc/man/erl.html","label":"Erlang Port Limit"},"desc_log_rotation":{"desc":"By default, the logs are stored in `./log` directory (for installation from zip file) or in `/var/log/emqx` (for binary installation).<br/>\\nThis section of the configuration controls the number of files kept for each log handler.","label":"Log Rotation"},"desc_log_overload_kill":{"desc":"Log overload kill features an overload protection that activates when the log handlers use too much memory or have too many buffered log messages.<br/>\\nWhen the overload is detected, the log handler is terminated and restarted after a cooldown period.","label":"Log Overload Kill"},"authorization":{"desc":"Authorization a.k.a. ACL.<br/>\\nIn EMQX, MQTT client access control is extremely flexible.<br/>\\nAn out-of-the-box set of authorization data sources are supported.\\nFor example,<br/>\\n\'file\' source is to support concise and yet generic ACL rules in a file;<br/>\\n\'built_in_database\' source can be used to store per-client customizable rule sets,\\nnatively in the EMQX node;<br/>\\n\'http\' source to make EMQX call an external HTTP API to make the decision;<br/>\\n\'PostgreSQL\' etc. to look up clients or rules from external databases","label":"Authorization"},"rpc_socket_keepalive_idle":{"desc":"How long the connections between the brokers should remain open after the last message is sent.","label":"RPC Socket Keepalive Idle"},"desc_cluster_call":{"desc":"Options for the \'cluster call\' feature that allows to execute a callback on all nodes in the cluster.","label":"Cluster Call"},"cluster_mcast_ports":{"desc":"List of UDP ports used for service discovery.<br/>\\nNote: probe messages are broadcast to all the specified ports.","label":"Cluster Multicast Ports"},"log_overload_kill_mem_size":{"desc":"Maximum memory size that the log handler process is allowed to use.","label":"Log Handler Max Memory Size"},"rpc_connect_timeout":{"desc":"Timeout for establishing an RPC connection.","label":"RPC Connect Timeout"},"cluster_etcd_node_ttl":{"desc":"Expiration time of the etcd key associated with the node.\\nIt is refreshed automatically, as long as the node is alive.","label":"Cluster Etcd Node TTL"},"rpc_call_receive_timeout":{"desc":"Timeout for the reply to a synchronous RPC.","label":"RPC Call Receive Timeout"},"rpc_socket_recbuf":{"desc":"TCP tuning parameters. TCP receiving buffer size.","label":"RPC Socket Recbuf"},"db_tlog_push_mode":{"desc":"In sync mode the core node waits for an ack from the replicant nodes before sending the next\\ntransaction log entry.","label":"Tlog Push Mode"},"node_crash_dump_bytes":{"desc":"This variable sets the maximum size of a crash dump file in bytes.\\nThe crash dump will be truncated if this limit is exceeded.\\nIf setting it to 0, the runtime system does not even attempt to write a crash dump file.","label":"Crash Dump Bytes"},"rpc_certfile":{"desc":"Path to TLS certificate file used to validate identity of the cluster nodes.\\nNote that this config only takes effect when <code>rpc.driver</code> is set to <code>ssl</code>.","label":"RPC Certfile"},"node_crash_dump_seconds":{"desc":"This variable gives the number of seconds that the emulator is allowed to spend writing a crash dump. When the given number of seconds have elapsed, the emulator is terminated.<br/>\\n- If setting to 0 seconds, the runtime system does not even attempt to write the crash dump file. It only terminates.<br/>\\n- If setting to a positive value S, wait for S seconds to complete the crash dump file and then terminates the runtime system with a SIGALRM signal.<br/>\\n- A negative value causes the termination of the runtime system to wait indefinitely until the crash dump file has been completely written.","label":"Crash Dump Seconds"},"log_file_handlers":{"desc":"File-based log handlers.","label":"File Handler"},"node_global_gc_interval":{"desc":"Periodic garbage collection interval. Set to <code>disabled</code> to have it disabled.","label":"Global GC Interval"},"common_handler_time_offset":{"desc":"The time offset to be used when formatting the timestamp.\\nCan be one of:\\n  - <code>system</code>: the time offset used by the local system\\n  - <code>utc</code>: the UTC time offset\\n  - <code>+-[hh]:[mm]</code>: user specified time offset, such as \\"-02:00\\" or \\"+00:00\\"\\nDefaults to: <code>system</code>.","label":"Time Offset"},"rpc_mode":{"desc":"In <code>sync</code> mode the sending side waits for the ack from the receiving side.","label":"RPC Mode"},"node_crash_dump_file":{"desc":"Location of the crash dump file.","label":"Crash Dump File"},"cluster_mcast_loop":{"desc":"If <code>true</code>, loop UDP datagrams back to the local socket.","label":"Cluster Multicast Loop"},"rpc_socket_keepalive_interval":{"desc":"The interval between keepalive messages.","label":"RPC Socket Keepalive Interval"},"common_handler_level":{"desc":"The log level for the current log handler.\\nDefaults to warning.","label":"Log Level"},"desc_rpc":{"desc":"EMQX uses a library called <code>gen_rpc</code> for inter-broker communication.<br/>\\nMost of the time the default config should work,\\nbut in case you need to do performance fine-tuning or experiment a bit,\\nthis is where to look.","label":"RPC"},"rpc_ssl_server_port":{"desc":"Listening port used by RPC local service.<br/>\\nNote that this config only takes effect when rpc.port_discovery is set to manual\\nand <code>driver</code> is set to <code>ssl</code>.","label":"RPC SSL Server Port"},"desc_cluster":{"desc":"EMQX nodes can form a cluster to scale up the total capacity.<br/>\\n      Here holds the configs to instruct how individual nodes can discover each other.","label":"Cluster"},"common_handler_sync_mode_qlen":{"desc":"As long as the number of buffered log events is lower than this value,\\nall log events are handled asynchronously. This means that the client process sending the log event,\\nby calling a log function in the Logger API, does not wait for a response from the handler\\nbut continues executing immediately after the event is sent.\\nIt is not affected by the time it takes the handler to print the event to the log device.\\nIf the message queue grows larger than this value,\\nthe handler starts handling log events synchronously instead,\\nmeaning that the client process sending the event must wait for a response.\\nWhen the handler reduces the message queue to a level below the sync_mode_qlen threshold,\\nasynchronous operation is resumed.","label":"Queue Length before Entering Sync Mode"},"common_handler_formatter":{"desc":"Choose log formatter. <code>text</code> for free text, and <code>json</code> for structured logging.","label":"Log Formatter"},"rpc_async_batch_size":{"desc":"The maximum number of batch messages sent in asynchronous mode.\\n      Note that this configuration does not work in synchronous mode.","label":"Async Batch Size"},"cluster_call_max_history":{"desc":"Retain the maximum number of completed transactions (for queries).","label":"Cluster Call Max History"},"cluster_discovery_strategy":{"desc":"Service discovery method for the cluster nodes. Possible values are:\\n- manual: Use <code>emqx ctl cluster</code> command to manage cluster.<br/>\\n- static: Configure static nodes list by setting <code>seeds</code> in config file.<br/>\\n- dns: Use DNS A record to discover peer nodes.<br/>\\n- etcd: Use etcd to discover peer nodes.<br/>\\n- k8s: Use Kubernetes API to discover peer pods.","label":"Cluster Discovery Strategy"},"rpc_send_timeout":{"desc":"Timeout for sending the RPC request.","label":"RPC Send Timeout"},"common_handler_single_line":{"desc":"Print logs in a single line if set to true. Otherwise, log messages may span multiple lines.","label":"Single Line Mode"},"rpc_socket_buffer":{"desc":"TCP tuning parameters. Socket buffer size in user mode.","label":"RPC Socket Buffer"},"db_shard_transports":{"desc":"Allows to tune the transport method used for transaction log replication, on a per-shard basis.<br/>\\n<code>gen_rpc</code> uses the <code>gen_rpc</code> library,\\n<code>distr</code> uses the Erlang distribution.<br/>If not specified,\\nthe default is to use the value set in <code>db.default_shard_transport</code>.","label":"Shard Transports"}},"emqx_limiter_schema":{"max_conn_rate":{"desc":"Maximum connection rate.<br/>\\nThis is used to limit the connection rate for this node,\\nonce the limit is reached, new connections will be deferred or refused.","label":"Maximum Connection Rate"},"messages_rate":{"desc":"Messages publish rate.<br/>\\nThis is used to limit the inbound message numbers for this node,\\nonce the limit is reached, the restricted client will slow down and even be hung for a while.","label":"Messages Publish Rate"},"bytes_rate":{"desc":"Data publish rate.<br/>\\nThis is used to limit the inbound bytes rate for this node,\\nonce the limit is reached, the restricted client will slow down and even be hung for a while.","label":"Data Publish Rate"}},"emqx_schema":{"fields_mqtt_quic_listener_peer_unidi_stream_count":{"desc":"Number of unidirectional streams to allow the peer to open.","label":"Peer unidi stream count"},"fields_authorization_no_match":{"desc":"Default access control action if the user or client matches no ACL rules,\\nor if no such user or client is found by the configurable authorization\\nsources such as built_in_database, an HTTP API, or a query against PostgreSQL.\\nFind more details in \'authorization.sources\' config.","label":"Authorization no match"},"sysmon_top_db_hostname":{"desc":"Hostname of the PostgreSQL database that collects the data points","label":"DB Hostname"},"zones":{"desc":"A zone is a set of configs grouped by the zone <code>name</code>.\\nFor flexible configuration mapping, the <code>name</code> can be set to a listener\'s <code>zone</code> config.\\nNOTE: A built-in zone named <code>default</code> is auto created and can not be deleted."},"fields_mqtt_quic_listener_certfile":{"desc":"Path to the certificate file. Will be deprecated in 5.1, use .ssl_options.certfile instead.","label":"Certificate file"},"fields_rate_limit_conn_bytes_in":{"desc":"Limit the rate of receiving packets for a MQTT connection.\\nThe rate is counted by bytes of packets per second.","label":"Connection bytes in"},"crl_cache_capacity":{"desc":"The maximum number of CRL URLs that can be held in cache.  If the cache is at full capacity and a new URL must be fetched, then it\'ll evict the oldest inserted URL in the cache.","label":"CRL Cache Capacity"},"alarm_actions":{"desc":"The actions triggered when the alarm is activated.<br/>Currently, the following actions are supported: <code>log</code> and <code>publish</code>.\\n<code>log</code> is to write the alarm to log (console or file).\\n<code>publish</code> is to publish the alarm as an MQTT message to the system topics:\\n<code>$SYS/brokers/emqx{\'@\'}xx.xx.xx.x/alarms/activate</code> and\\n<code>$SYS/brokers/emqx{\'@\'}xx.xx.xx.x/alarms/deactivate</code>","label":"Alarm Actions"},"base_listener_max_connections":{"desc":"The maximum number of concurrent connections allowed by the listener.","label":"Max connections"},"mqtt_peer_cert_as_username":{"desc":"Use the CN, DN field in the peer certificate or the entire certificate content as Username. Only works for the TLS connection.\\nSupported configurations are the following:\\n- <code>cn</code>: CN field of the certificate\\n- <code>dn</code>: DN field of the certificate\\n- <code>crt</code>: Content of the <code>DER</code> or <code>PEM</code> certificate\\n- <code>pem</code>: Convert <code>DER</code> certificate content to <code>PEM</code> format and use as Username\\n- <code>md5</code>: MD5 value of the <code>DER</code> or <code>PEM</code> certificate","label":"Use Peer Certificate as Username"},"fields_cache_enable":{"desc":"Enable or disable the authorization cache.","label":"Enable or disable the authorization cache"},"fields_mqtt_quic_listener_disconnect_timeout_ms":{"desc":"How long to wait for an ACK before declaring a path dead and disconnecting. Default: 16000","label":"Disconnect timeout ms"},"mqtt_max_topic_alias":{"label":"Max Topic Alias"},"common_ssl_opts_schema_user_lookup_fun":{"desc":"EMQX-internal callback that is used to lookup pre-shared key (PSK) identity.","label":"SSL PSK user lookup fun"},"fields_listeners_wss":{"desc":"HTTPS websocket listeners.","label":"HTTPS websocket listeners"},"sysmon_top_max_procs":{"desc":"Stop collecting data when the number of processes\\nin the VM exceeds this value","label":"Max procs"},"mqtt_use_username_as_clientid":{"desc":"Whether to use Username as Client ID.\\nThis setting takes effect later than <code>Use Peer Certificate as Username</code> and <code>Use Peer Certificate as Client ID</code>.","label":"Use Username as Client ID"},"mqtt_max_qos_allowed":{"label":"Max QoS Allowed"},"fields_mqtt_quic_listener_max_binding_stateless_operations":{"desc":"The maximum number of stateless operations that may be queued on a binding at any one time. Default: 100","label":"Max binding stateless operations"},"fields_mqtt_quic_listener_stream_recv_buffer_default":{"desc":"Stream initial buffer size. Default: 4096","label":"Stream recv buffer default"},"fields_mqtt_quic_listener_pacing_enabled":{"desc":"Pace sending to avoid overfilling buffers on the path. Default: 1 (Enabled)","label":"Pacing enabled"},"mqtt_max_subscriptions":{"desc":"Maximum number of subscriptions allowed per client.","label":"Max Subscriptions"},"persistent_session_builtin_messages_table":{"desc":"Performance tuning options for built-in messages table.","label":"Persistent messages"},"sysmon_os_cpu_low_watermark":{"desc":"The threshold, as percentage of system CPU load,\\n for how much system cpu can be used before the corresponding alarm is cleared.","label":"CPU low watermark"},"fields_mqtt_quic_listener_tls_server_max_send_buffer":{"desc":"How much Server TLS data to buffer. Default: 8192","label":"TLS server max send buffer"},"base_listener_bind":{"desc":"IP address and port for the listening socket.","label":"IP address and port"},"server_ssl_opts_schema_handshake_timeout":{"desc":"Maximum time duration allowed for the handshake to complete","label":"Handshake timeout"},"fields_deflate_opts_server_context_takeover":{"desc":"Takeover means the compression state is retained between server messages.","label":"Server context takeover"},"mqtt_session_expiry_interval":{"desc":"Specifies how long the session will expire after the connection is disconnected, only for non-MQTT 5.0 connections.","label":"Session Expiry Interval"},"fields_listener_enabled":{"desc":"Enable listener.","label":"Enable listener"},"mqtt":{"desc":"Global MQTT configuration.\\nThe configs here work as default values which can be overridden in <code>zone</code> configs"},"crl_cache_refresh_http_timeout":{"desc":"The timeout for the HTTP request when fetching CRLs.  This is a global setting for all listeners.","label":"CRL Cache Refresh HTTP Timeout"},"fields_tcp_opts_backlog":{"desc":"TCP backlog defines the maximum length that the queue of\\npending connections can grow to.","label":"TCP backlog length"},"broker_route_batch_clean":{"desc":"Enable batch clean for deleted routes."},"fields_mqtt_quic_listener_initial_window_packets":{"desc":"The size (in packets) of the initial congestion window for a connection. Default: 10","label":"Initial window packets"},"flapping_detect_enable":{"desc":"Enable flapping connection detection feature.","label":"Enable flapping detection"},"sysmon_top_db_password":{"desc":"EMQX user password in the PostgreSQL database","label":"DB Password"},"fields_ws_opts_check_origins":{"desc":"List of allowed origins.<br/>See <code>check_origin_enable</code>.","label":"Allowed origins"},"fields_deflate_opts_client_context_takeover":{"desc":"Takeover means the compression state is retained between client messages.","label":"Client context takeover"},"base_listener_acceptors":{"desc":"The size of the listener\'s receiving pool.","label":"Acceptors Num"},"common_ssl_opts_schema_cacertfile":{"desc":"Trusted PEM format CA certificates bundle file.<br/>\\nThe certificates in this file are used to verify the TLS peer\'s certificates.\\nAppend new certificates to the file if new CAs are to be trusted.\\nThere is no need to restart EMQX to have the updated file loaded, because\\nthe system regularly checks if file has been updated (and reload).<br/>\\nNOTE: invalidating (deleting) a certificate from the file will not affect\\nalready established connections.","label":"CACertfile"},"fields_ws_opts_mqtt_path":{"desc":"WebSocket\'s MQTT protocol path. So the address of EMQX Broker\'s WebSocket is:\\n<code>ws://{\'{\'}ip{\'}\'}:{\'{\'}port{\'}\'}/mqtt</code>","label":"WS MQTT Path"},"sysmon_os_procmem_high_watermark":{"desc":"The threshold, as percentage of system memory,\\n for how much system memory can be allocated by one Erlang process before\\n the corresponding alarm is raised.","label":"ProcMem high wartermark"},"fields_listeners_quic":{"desc":"QUIC listeners.","label":"QUIC listeners"},"fields_listeners_ws":{"desc":"HTTP websocket listeners.","label":"HTTP websocket listeners"},"mqtt_retry_interval":{"desc":"Retry interval for QoS 1/2 message delivering.","label":"Message Retry Interval"},"stats_enable":{"desc":"Enable/disable statistic data collection.","label":"Enable/disable statistic data collection"},"fields_authorization_deny_action":{"desc":"The action when the authorization check rejects an operation.","label":"Authorization deny action"},"fields_deflate_opts_server_max_window_bits":{"desc":"Specifies the size of the compression context for the server.","label":"Server compression max window size"},"client_ssl_opts_schema_server_name_indication":{"desc":"Specify the host name to be used in TLS Server Name Indication extension.<br/>\\nFor instance, when connecting to \\"server.example.net\\", the genuine server\\nwhich accepts the connection and performs TLS handshake may differ from the\\nhost the TLS client initially connects to, e.g. when connecting to an IP address\\nor when the host has multiple resolvable DNS records <br/>\\nIf not specified, it will default to the host name string which is used\\nto establish the connection, unless it is IP addressed used.<br/>\\nThe host name is then also used in the host name verification of the peer\\ncertificate.<br/> The special value \'disable\' prevents the Server Name\\nIndication extension from being sent and disables the hostname\\nverification check.","label":"Server Name Indication"},"fields_mqtt_quic_listener_retry_memory_limit":{"desc":"The percentage of available memory usable for handshake connections before stateless retry is used. Calculated as `N/65535`. Default: 65","label":"Retry memory limit"},"force_shutdown_max_message_queue_len":{"desc":"Maximum message queue length.","label":"Maximum mailbox queue length of process"},"sys_heartbeat_interval":{"desc":"Time interval for publishing following heartbeat messages:\\n  - `$SYS/brokers/<node>/uptime`\\n  - `$SYS/brokers/<node>/datetime`"},"flapping_detect_ban_time":{"desc":"How long the flapping clientid will be banned.","label":"Ban Duration"},"sysmon_top_num_items":{"desc":"The number of top processes per monitoring group","label":"Top num items"},"persistent_session_builtin_session_table":{"desc":"Performance tuning options for built-in session table.","label":"Persistent session"},"mqtt_upgrade_qos":{"desc":"Force upgrade of QoS level according to subscription.","label":"Upgrade QoS"},"mqtt_shared_subscription":{"label":"Allowed Shared Subscription"},"fields_tcp_opts_sndbuf":{"desc":"The TCP send buffer (OS kernel) for the connections.","label":"TCP send buffer"},"sysmon_os_mem_check_interval":{"desc":"The time interval for the periodic memory check.","label":"Mem check interval"},"server_ssl_opts_schema_gc_after_handshake":{"desc":"Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.","label":"Perform GC after handshake"},"fields_mqtt_quic_listener_ssl_options":{"desc":"TLS options for QUIC transport","label":"TLS Options"},"fields_ws_opts_mqtt_piggyback":{"desc":"Whether a WebSocket message is allowed to contain multiple MQTT packets.","label":"MQTT Piggyback"},"base_listener_mountpoint":{"desc":"When publishing or subscribing, prefix all topics with a mountpoint string.\\nThe prefixed string will be removed from the topic name when the message\\nis delivered to the subscriber. The mountpoint is a way that users can use\\nto implement isolation of message routing between different listeners.\\nFor example if a client A subscribes to `t` with `listeners.tcp.\\\\<name>.mountpoint`\\nset to `some_tenant`, then the client actually subscribes to the topic\\n`some_tenant/t`. Similarly, if another client B (connected to the same listener\\nas the client A) sends a message to topic `t`, the message is routed\\nto all the clients subscribed `some_tenant/t`, so client A will receive the\\nmessage, with topic name `t`.<br/>\\nSet to `\\"\\"` to disable the feature.<br/>\\n\\nVariables in mountpoint string:\\n  - <code>${\'{\'}clientid{\'}\'}</code>: clientid\\n  - <code>${\'{\'}username{\'}\'}</code>: username","label":"mountpoint"},"mqtt_max_awaiting_rel":{"desc":"Specifies the maximum number of pending QoS 2 messages in each session until either PUBREL is received or timed out. When this limit is reached, new QoS 2 PUBLISH requests will be rejected with error code 147(0x93).","label":"Max Awaiting PUBREL"},"ciphers_schema_quic":{"desc":"This config holds TLS cipher suite names separated by comma,\\nor as an array of strings. e.g.\\n<code>\\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\\"</code> or\\n<code>[\\"TLS_AES_256_GCM_SHA384\\",\\"TLS_AES_128_GCM_SHA256\\"]</code>.\\n<br/>\\nCiphers (and their ordering) define the way in which the\\nclient and server encrypts information over the network connection.\\nSelecting a good cipher suite is critical for the\\napplication\'s data security, confidentiality and performance.\\n\\nThe names should be in OpenSSL string format (not RFC format).\\nAll default values and examples provided by EMQX config\\ndocumentation are all in OpenSSL format.<br/>\\n\\nNOTE: Certain cipher suites are only compatible with\\nspecific TLS <code>versions</code> (\'tlsv1.1\', \'tlsv1.2\' or \'tlsv1.3\')\\nincompatible cipher suites will be silently dropped.\\nFor instance, if only \'tlsv1.3\' is given in the <code>versions</code>,\\nconfiguring cipher suites for other versions will have no effect.\\n<br/>\\n\\nNOTE: PSK ciphers are suppressed by \'tlsv1.3\' version config<br/>\\nIf PSK cipher suites are intended, \'tlsv1.3\' should be disabled from <code>versions</code>.<br/>\\nPSK cipher suites: <code>\\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\\"</code><br/>\\n\\nNOTE: QUIC listener supports only \'tlsv1.3\' ciphers","label":""},"fields_mqtt_quic_listener_max_bytes_per_key":{"desc":"Maximum number of bytes to encrypt with a single 1-RTT encryption key before initiating key update. Default: 274877906944","label":"Max bytes per key"},"fields_mqtt_quic_listener_mtu_discovery_search_complete_timeout_us":{"desc":"The time in microseconds to wait before reattempting MTU probing if max was not reached. Default: 600000000","label":"MTU discovery search complete timeout us"},"fields_ws_opts_check_origin_enable":{"desc":"If <code>true</code>, <code>origin</code> HTTP header will be\\n validated against the list of allowed origins configured in <code>check_origins</code>\\n parameter.","label":"Check origin"},"sysmon_vm_busy_dist_port":{"desc":"When the RPC connection used to communicate with other nodes in the cluster is overloaded,\\nthere will be a <code>busy_dist_port</code> warning log,\\nand an MQTT message is published to system topic <code>$SYS/sysmon/busy_dist_port</code>.","label":"Enable Busy Distribution Port monitoring"},"mqtt_max_mqueue_len":{"desc":"Maximum allowed queue length when persistent client are disconnected or inflight window is full.","label":"Max Message Queue Length"},"mqtt_max_inflight":{"desc":"Maximum number of QoS 1 and QoS 2 messages that are allowed to be delivered simultaneously before completing the acknowledgment.","label":"Max Inflight"},"persistent_session_store_enabled":{"desc":"Use the database to store information about persistent sessions.\\nThis makes it possible to migrate a client connection to another\\ncluster node if a node is stopped.","label":"Enable persistent session store"},"fields_deflate_opts_level":{"desc":"Compression level.","label":"Compression level"},"mqtt_server_keepalive":{"label":"Server Keep Alive"},"global_authentication":{"desc":"Default authentication configs for all MQTT listeners.\\n\\nFor per-listener overrides see <code>authentication</code> in listener configs\\n\\nThis option can be configured with:\\n<ul>\\n  <li><code>[]</code>: The default value, it allows *ALL* logins</li>\\n  <li>one: For example <code>{\'{\'}enable:true,backend:\\"built_in_database\\",mechanism=\\"password_based\\"{\'}\'}</code></li>\\n  <li>chain: An array of structs.</li>\\n</ul>\\n\\nWhen a chain is configured, the login credentials are checked against the backends per the configured order, until an \'allow\' or \'deny\' decision can be made.\\n\\nIf there is no decision after a full chain exhaustion, the login is rejected."},"fields_mqtt_quic_listener_load_balancing_mode":{"desc":"0: Disabled, 1: SERVER_ID_IP, 2: SERVER_ID_FIXED. default: 0","label":"Load balancing mode"},"persistent_session_store_session_message_gc_interval":{"desc":"The starting interval for garbage collection of transient data for\\npersistent session messages. This does not affect the lifetime length\\nof persistent session messages.","label":"Session message GC interval"},"server_ssl_opts_schema_ocsp_refresh_http_timeout":{"desc":"The timeout for the HTTP request when checking OCSP responses.","label":"OCSP Refresh HTTP Timeout"},"fields_tcp_opts_send_timeout":{"desc":"The TCP send timeout for the connections.","label":"TCP send timeout"},"sysmon_vm_process_high_watermark":{"desc":"The threshold, as percentage of processes, for how many\\n processes can simultaneously exist at the local node before the corresponding\\n alarm is raised.","label":"Process high watermark"},"fields_tcp_opts_buffer":{"desc":"The size of the user-space buffer used by the driver.","label":"TCP user-space buffer"},"server_ssl_opts_schema_honor_cipher_order":{"desc":"An important security setting, it forces the cipher to be set based\\n on the server-specified order instead of the client-specified order,\\n hence enforcing the (usually more properly configured) security\\n ordering of the server administrator.","label":"SSL honor cipher order"},"conn_congestion_min_alarm_sustain_duration":{"desc":"Minimal time before clearing the alarm.<br/>The alarm is cleared only when there\'s no pending data in<br/>the queue, and at least <code>min_alarm_sustain_duration</code>milliseconds passed since the last time we considered the connection \'congested\'.<br/>This is to avoid clearing and raising the alarm again too often.","label":"Sustain duration"},"fields_mqtt_quic_listener_keep_alive_interval_ms":{"desc":"How often to send PING frames to keep a connection alive.","label":"Keep alive interval ms"},"fields_mqtt_quic_listener_handshake_idle_timeout_ms":{"desc":"How long a handshake can idle before it is discarded","label":"Handshake idle timeout ms"},"broker_session_locking_strategy":{"desc":"Session locking strategy in a cluster.\\n  - `local`: only lock the session on the current node\\n  - `one`: select only one remote node to lock the session\\n  - `quorum`: select some nodes to lock the session\\n  - `all`: lock the session on all the nodes in the cluster"},"persistent_store_ram_cache":{"desc":"Maintain a copy of the data in RAM for faster access.","label":"RAM cache"},"fields_mqtt_quic_listener_stream_recv_window_default":{"desc":"Initial stream receive window size. Default: 32678","label":"Stream recv window default"},"mqtt_mqueue_priorities":{"desc":"Topic priorities. Priority number [1-255]. There\'s no priority table by default, hence all messages are treated equal.<br/>NOTE: Comma and equal signs are not allowed for priority topic names.<br/>NOTE: Messages for topics not in the priority table are treated as either highest or lowest priority depending on the configured value for mqtt.mqueue_default_priority.<br/>Examples:<br/>To configure \\"topic/1\\" > \\"topic/2\\":<br/>mqueue_priorities: {\'{\'}\\"topic/1\\": 10, \\"topic/2\\": 8{\'}\'}","label":"Topic Priorities"},"fields_rate_limit_conn_messages_in":{"desc":"Message limit for the external MQTT connections.","label":"connecting messages in"},"fields_rate_limit_max_conn_rate":{"desc":"Maximum connections per second.","label":"Max connection rate"},"alarm_size_limit":{"desc":"The maximum total number of deactivated alarms to keep as history.<br/>When this limit is exceeded, the oldest deactivated alarms are deleted to cap the total number.","label":"Alarm size limit"},"fields_cache_max_size":{"desc":"Maximum number of cached items.","label":"Maximum number of cached items"},"fields_listeners_tcp":{"desc":"TCP listeners.","label":"TCP listeners"},"conn_congestion_enable_alarm":{"desc":"Enable or disable connection congestion alarm.","label":"Enable/disable congestion alarm"},"fields_ws_opts_proxy_port_header":{"desc":"HTTP header used to pass information about the client port. Relevant when the EMQX cluster is deployed behind a load-balancer.","label":"Proxy port header"},"overload_protection_enable":{"desc":"React on system overload or not.","label":"React on system overload or not"},"fields_mqtt_quic_listener_minimum_mtu":{"desc":"The minimum MTU supported by a connection. This will be used as the starting MTU. Default: 1248","label":"Minimum MTU"},"sys_msg_interval":{"desc":"Time interval of publishing `$SYS` messages."},"mqtt_await_rel_timeout":{"desc":"Specifies the amount of time to wait for a publish of a QoS 2 message with no PUBREL received.   When this limit is reached, EMQX will release the packet ID and also output a warning level log. \\nNote: EMQX’s forwarding of the received QoS 2 message is independent from the receiving of PUBREL","label":"Max Awaiting PUBREL Timeout"},"common_ssl_opts_schema_verify":{"desc":"Enable or disable peer verification.","label":"Verify peer"},"fields_listeners_ssl":{"desc":"SSL listeners.","label":"SSL listeners"},"fields_deflate_opts_client_max_window_bits":{"desc":"Specifies the size of the compression context for the client.","label":"Client compression max window size"},"common_ssl_opts_schema_keyfile":{"desc":"PEM format private key file.","label":"Keyfile"},"sysmon_os_cpu_high_watermark":{"desc":"The threshold, as percentage of system CPU load,\\n for how much system cpu can be used before the corresponding alarm is raised.","label":"CPU high watermark"},"flapping_detect_window_time":{"desc":"The time window for flapping detection.","label":"Window time"},"mqtt_mqueue_default_priority":{"desc":"Default topic priority, which will be used by topics not in <code>Topic Priorities</code> (<code>mqueue_priorities</code>).","label":"Default Topic Priorities"},"client_ssl_opts_schema_enable":{"desc":"Enable TLS.","label":"Enable TLS"},"fields_mqtt_quic_listener_mtu_discovery_missing_probe_count":{"desc":"The maximum number of stateless operations that may be queued on a binding at any one time. Default: 3","label":"MTU discovery missing probe count"},"fields_tcp_opts_recbuf":{"desc":"The TCP receive buffer (OS kernel) for the connections.","label":"TCP receive buffer"},"sysmon_vm_process_check_interval":{"desc":"The time interval for the periodic process limit check.","label":"Process limit check interval"},"fields_mqtt_quic_listener_server_resumption_level":{"desc":"Controls resumption tickets and/or 0-RTT server support. Default: 0 (No resumption)","label":"Server resumption level"},"fields_ws_opts_proxy_address_header":{"desc":"HTTP header used to pass information about the client IP address.\\nRelevant when the EMQX cluster is deployed behind a load-balancer.","label":"Proxy address header"},"sysmon_os_sysmem_high_watermark":{"desc":"The threshold, as percentage of system memory,\\n for how much system memory can be allocated before the corresponding alarm is raised.","label":"SysMem high wartermark"},"fields_tcp_opts_high_watermark":{"desc":"The socket is set to a busy state when the amount of data queued internally\\nby the VM socket implementation reaches this limit.","label":"TCP 高水位线"},"fields_mqtt_quic_listener_stateless_operation_expiration_ms":{"desc":"The time limit between operations for the same endpoint, in milliseconds. Default: 100","label":"Stateless operation expiration ms"},"server_ssl_opts_schema_dhfile":{"desc":"Path to a file containing PEM-encoded Diffie-Hellman parameters\\nto be used by the server if a cipher suite using Diffie-Hellman\\nkey exchange is negotiated. If not specified, default parameters\\nare used.<br/>\\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.","label":"SSL dhfile"},"flapping_detect_max_count":{"desc":"The maximum number of disconnects allowed for a MQTT Client in `window_time`","label":"Max count"},"mqtt_max_topic_levels":{"label":"Max Topic Levels"},"force_shutdown_max_heap_size":{"desc":"Total heap size","label":"Total heap size"},"persistent_store_on_disc":{"desc":"Save information about the persistent sessions on disc.\\nIf this option is enabled, persistent sessions will survive full restart of the cluster.\\nOtherwise, all the data will be stored in RAM, and it will be lost when all the nodes in the cluster are stopped.","label":"Persist on disc"},"mqtt_ignore_loop_deliver":{"desc":"Whether the messages sent by the MQTT v3.1.1/v3.1.0 client will be forwarded to the client itself, similar to `No Local` in MQTT 5.0.","label":"Ignore Loop Deliver"},"common_ssl_opts_schema_certfile":{"desc":"PEM format certificates chain file.<br/>\\nThe certificates in this file should be in reversed order of the certificate\\nissue chain. That is, the host\'s certificate should be placed in the beginning\\nof the file, followed by the immediate issuer certificate and so on.\\nAlthough the root CA certificate is optional, it should be placed at the end of\\nthe file if it is to be added.","label":"Certfile"},"mqtt_exclusive_subscription":{"label":"Allowed Exclusive Subscription"},"mqtt_retain_available":{"desc":"Whether to enable support for MQTT retained message.","label":"Allowed Retain"},"fields_tcp_opts_reuseaddr":{"desc":"The SO_REUSEADDR flag for the connections.","label":"SO_REUSEADDR"},"sysmon_vm_long_schedule":{"desc":"When the Erlang VM detect a task scheduled for too long, a warning level \'long_schedule\' log is emitted,\\nand an MQTT message is published to the system topic <code>$SYS/sysmon/long_schedule</code>.","label":"Enable Long Schedule monitoring"},"mqtt_keepalive_multiplier":{"desc":"`Keep-Alive Timeout = Keep-Alive Interval × Keep-Alive Multiplier`. Default value is 1.5 as per MQTT 5.0.\\n\\nFor example, a Keep-Alive interval of 10 seconds yields a timeout of 15 seconds with a multiplier of 1.5. Increasing the multiplier value to 2 extends the timeout to 20 seconds.","label":"Keep Alive Multiplier"},"force_gc_bytes":{"desc":"GC the process after specified number of bytes have passed through.","label":"Process GC bytes"},"server_ssl_opts_schema_fail_if_no_peer_cert":{"desc":"Used together with {\'{\'}verify, verify_peer{\'}\'} by an TLS/DTLS server.\\nIf set to true, the server fails if the client does not have a\\ncertificate to send, that is, sends an empty certificate.\\nIf set to false, it fails only if the client sends an invalid\\ncertificate (an empty certificate is considered valid).","label":"SSL fail if no peer cert"},"fields_ws_opts_compress":{"desc":"If <code>true</code>, compress WebSocket messages using <code>zlib</code>.<br/>\\nThe configuration items under <code>deflate_opts</code> belong to the compression-related parameter configuration.","label":"Ws compress"},"fields_mqtt_quic_listener_keep_alive_interval":{"desc":"How often to send PING frames to keep a connection alive. 0 means disabled.","label":"Keep Alive Interval"},"fields_cache_ttl":{"desc":"Time to live for the cached data.","label":"Time to live for the cached data"},"sys_topics":{"desc":"System topics configuration."},"sys_event_client_subscribed":{"desc":"Enable to publish event message that client subscribed a topic successfully."},"sysmon_top_db_port":{"desc":"Port of the PostgreSQL database that collects the data points.","label":"DB Port"},"fields_mqtt_quic_listener_max_operations_per_drain":{"desc":"The maximum number of operations to drain per connection quantum. Default: 16","label":"Max operations per drain"},"fields_mqtt_quic_listener_datagram_receive_enabled":{"desc":"Advertise support for QUIC datagram extension. Reserve for the future. Default 0 (FALSE)","label":"Datagram receive enabled"},"fields_mqtt_quic_listener_initial_rtt_ms":{"desc":"Initial RTT estimate.","label":"Initial RTT ms"},"overload_protection_backoff_gc":{"desc":"When at high load, skip forceful GC.","label":"Skip GC"},"broker_perf_route_lock_type":{"desc":"Performance tuning for subscribing/unsubscribing a wildcard topic.\\nChange this parameter only when there are many wildcard topics.\\n\\nNOTE: when changing from/to `global` lock, it requires all nodes in the cluster to be stopped before the change.\\n  - `key`: mnesia transactional updates with per-key locks. Recommended for a single-node setup.\\n  - `tab`: mnesia transactional updates with table lock. Recommended for a cluster setup.\\n  - `global`: updates are protected with a global lock. Recommended for large clusters."},"fields_tcp_opts_nodelay":{"desc":"The TCP_NODELAY flag for the connections.","label":"TCP_NODELAY"},"sysmon_top_db_username":{"desc":"Username of the PostgreSQL database","label":"DB Username"},"broker":{"desc":"Message broker options."},"force_gc_count":{"desc":"GC the process after this many received messages.","label":"Process GC messages num"},"mqtt_max_clientid_len":{"label":"Max Client ID Length"},"fields_ws_opts_supported_subprotocols":{"desc":"Comma-separated list of supported subprotocols.","label":"Supported subprotocols"},"broker_shared_subscription_strategy":{"desc":"Dispatch strategy for shared subscription.\\n  - `random`: dispatch the message to a random selected subscriber\\n  - `round_robin`: select the subscribers in a round-robin manner\\n  - `round_robin_per_group`: select the subscribers in round-robin fashion within each shared subscriber group\\n  - `local`: select random local subscriber otherwise select random cluster-wide\\n  - `sticky`: always use the last selected subscriber to dispatch, until the subscriber disconnects.\\n  - `hash_clientid`: select the subscribers by hashing the `clientIds`\\n  - `hash_topic`: select the subscribers by hashing the source topic"},"fields_deflate_opts_mem_level":{"desc":"Specifies the size of the compression state.<br/>\\nLower values decrease memory usage per connection.","label":"Size of the compression state"},"fields_mqtt_quic_listener_send_idle_timeout_ms":{"desc":"Reset congestion control after being idle for amount of time. Default: 1000","label":"Send idle timeout ms"},"base_listener_limiter":{"desc":"Type of the rate limit.","label":"Type of the rate limit"},"persistent_session_store_backend":{"desc":"Database management system used to store information about persistent sessions and messages.\\n- `builtin`: Use the embedded database (mria)","label":"Backend"},"alarm_validity_period":{"desc":"Retention time of deactivated alarms. Alarms are not deleted immediately\\nwhen deactivated, but after the retention time.","label":"Alarm validity period"},"server_ssl_opts_schema_ocsp_issuer_pem":{"desc":"PEM-encoded certificate of the OCSP issuer for the server certificate.","label":"OCSP Issuer Certificate"},"fields_tcp_opts_active_n":{"desc":"Specify the {\'{\'}active, N{\'}\'} option for this Socket.<br/>\\nSee: https://erlang.org/doc/man/inet.html#setopts-2","label":"active_n"},"listener_authentication":{"desc":"Per-listener authentication override.\\nAuthentication can be one single authenticator instance or a chain of authenticators as an array.\\nWhen authenticating a login (username, client ID, etc.) the authenticators are checked in the configured order.","label":"Per-listener authentication override"},"fields_trace_payload_encode":{"desc":"Determine the format of the payload format in the trace file.<br/>\\n`text`: Text-based protocol or plain text protocol.\\n It is recommended when payload is JSON encoded.<br/>\\n`hex`: Binary hexadecimal encode. It is recommended when payload is a custom binary protocol.<br/>\\n`hidden`: payload is obfuscated as `******`","label":"Payload encode"},"mqtt_response_information":{"desc":"Response Information <br/>UTF-8 string, for creating the response topic, for example, if set to `reqrsp/`, the publisher/subscriber will communite under the topic `reqrsp/`.To disable this feature, input `\\"\\"` in the text box below.","label":"Response Information"},"persistent_session_store_max_retain_undelivered":{"desc":"The time messages that was not delivered to a persistent session\\nis stored before being garbage collected if the node the previous\\nsession was handled on restarts of is stopped.","label":"Max retain undelivered"},"fields_mqtt_quic_listener_migration_enabled":{"desc":"Enable clients to migrate IP addresses and tuples. Requires a cooperative load-balancer, or no load-balancer. Default: 1 (Enabled)","label":"Migration enabled"},"common_ssl_opts_schema_password":{"desc":"String containing the user\'s password. Only used if the private key file is password-protected.","label":"Keyfile passphrase"},"common_ssl_opts_schema_hibernate_after":{"desc":"Hibernate the SSL process after idling for amount of time reducing its memory footprint.","label":"hibernate after"},"fields_mqtt_quic_listener_send_buffering_enabled":{"desc":"Buffer send data instead of holding application buffers until sent data is acknowledged. Default: 1 (Enabled)","label":"Send buffering enabled"},"sys_event_client_unsubscribed":{"desc":"Enable to publish event message that client unsubscribed a topic successfully."},"overload_protection_backoff_new_conn":{"desc":"When at high load, close new incoming connections.","label":"Close new connections"},"server_ssl_opts_schema_ocsp_responder_url":{"desc":"URL for the OCSP responder to check the server certificate against.","label":"OCSP Responder URL"},"mqtt_idle_timeout":{"desc":"Configure the duration of time that a connection can remain idle (i.e., without any data transfer) before being: \\n\\n- Automatically disconnected if no CONNECT package is received from the client yet. \\n- Put into hibernation mode to save resources if some CONNECT packages are already received.\\n\\nNote: Please set the parameter with caution as long idle time will lead to resource waste.","label":"Idle Timeout"},"fields_mqtt_quic_listener_conn_flow_control_window":{"desc":"Connection-wide flow control window. Default: 16777216","label":"Conn flow control window"},"fields_mqtt_quic_listener_maximum_mtu":{"desc":"The maximum MTU supported by a connection. This will be the maximum probed value. Default: 1500","label":"Maximum MTU"},"sysmon_top_db_name":{"desc":"PostgreSQL database name","label":"DB Name"},"mqtt_strict_mode":{"desc":"Whether to parse MQTT messages in strict mode.\\nIn strict mode, invalid utf8 strings in for example client ID, topic name, etc. will cause the client to be disconnected.","label":"Strict Mode"},"shared_subscription_group_strategy":{"desc":"Per group dispatch strategy for shared subscription.\\nThis config is a map from shared subscription group name to the strategy\\nname. The group name should be of format `[A-Za-z0-9]`. i.e. no\\nspecial characters are allowed."},"fields_deflate_opts_strategy":{"desc":"Specifies the compression strategy.","label":"compression strategy"},"shared_subscription_strategy_enum":{"desc":"Dispatch strategy for shared subscription.\\n- `random`: dispatch the message to a random selected subscriber\\n- `round_robin`: select the subscribers in a round-robin manner\\n- `round_robin_per_group`: select the subscribers in round-robin fashion within each shared subscriber group\\n- `sticky`: always use the last selected subscriber to dispatch,\\nuntil the subscriber disconnects.\\n- `hash`: select the subscribers by the hash of `clientIds`\\n- `local`: send to a random local subscriber. If local\\nsubscriber was not found, send to a random subscriber cluster-wide"},"persistent_session_builtin_sess_msg_table":{"desc":"Performance tuning options for built-in session messages table.","label":"Persistent session messages"},"mqtt_mqueue_store_qos0":{"desc":"Specifies whether to store QoS 0 messages in the message queue while the connection is down but the session remains.","label":"Store QoS 0 Message"},"server_ssl_opts_schema_client_renegotiation":{"desc":"In protocols that support client-initiated renegotiation,\\nthe cost of resources of such an operation is higher for the server than the client.\\nThis can act as a vector for denial of service attacks.\\nThe SSL application already takes measures to counter-act such attempts,\\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\\nThe default value is true. Note that disabling renegotiation can result in\\nlong-lived connections becoming unusable due to limits on\\nthe number of messages the underlying cipher suite can encipher.","label":"SSL client renegotiation"},"server_ssl_opts_schema_enable_crl_check":{"desc":"Whether to enable CRL verification for this listener.","label":"Enable CRL Check"},"fields_mqtt_quic_listener_peer_bidi_stream_count":{"desc":"Number of bidirectional streams to allow the peer to open.","label":"Peer bidi stream count"},"fields_mqtt_quic_listener_max_stateless_operations":{"desc":"The maximum number of stateless operations that may be queued on a worker at any one time. Default: 16","label":"Max stateless operations"},"fields_ws_opts_idle_timeout":{"desc":"Close transport-layer connections from the clients that have not sent MQTT CONNECT message within this interval.","label":"WS idle timeout"},"fields_mqtt_quic_listener_max_ack_delay_ms":{"desc":"How long to wait after receiving data before sending an ACK. Default: 25","label":"Max ack delay ms"},"base_listener_zone":{"desc":"The configuration zone to which the listener belongs.","label":"Zone"},"fields_mqtt_quic_listener_handshake_idle_timeout":{"desc":"How long a handshake can idle before it is discarded.","label":"Handshake Idle Timeout"},"force_gc_enable":{"desc":"Enable forced garbage collection.","label":"Enable forced garbage collection"},"fields_ws_opts_allow_origin_absence":{"desc":"If <code>false</code> and <code>check_origin_enable</code> is\\n <code>true</code>, the server will reject requests that don\'t have <code>origin</code>\\n HTTP header.","label":"Allow origin absence"},"common_ssl_opts_schema_versions":{"desc":"All TLS/DTLS versions to be supported.<br/>\\nNOTE: PSK ciphers are suppressed by \'tlsv1.3\' version config.<br/>\\nIn case PSK cipher suites are intended, make sure to configure\\n<code>[\'tlsv1.2\', \'tlsv1.1\']</code> here.","label":"SSL versions"},"mqtt_listener_proxy_protocol_timeout":{"desc":"Timeout for proxy protocol. EMQX will close the TCP connection if proxy protocol packet is not received within the timeout.","label":"Proxy protocol timeout"},"fields_mqtt_quic_listener_idle_timeout":{"desc":"How long a connection can go idle before it is gracefully shut down. 0 to disable","label":"Idle Timeout"},"common_ssl_opts_schema_secure_renegotiate":{"desc":"SSL parameter renegotiation is a feature that allows a client and a server\\nto renegotiate the parameters of the SSL connection on the fly.\\nRFC 5746 defines a more secure way of doing this. By enabling secure renegotiation,\\nyou drop support for the insecure renegotiation, prone to MitM attacks.","label":"SSL renegotiate"},"sysmon_vm_busy_port":{"desc":"When a port (e.g. TCP socket) is overloaded, there will be a <code>busy_port</code> warning log,\\nand an MQTT message is published to the system topic <code>$SYS/sysmon/busy_port</code>.","label":"Enable Busy Port monitoring"},"sys_event_client_connected":{"desc":"Enable to publish client connected event messages"},"sysmon_vm_process_low_watermark":{"desc":"The threshold, as percentage of processes, for how many\\n processes can simultaneously exist at the local node before the corresponding\\n alarm is cleared.","label":"Process low watermark"},"mqtt_max_packet_size":{"desc":"If the size is out of the preset value, EMQX will disconnect the current connection","label":"Max Packet Size"},"common_ssl_opts_schema_reuse_sessions":{"desc":"Enable TLS session reuse.","label":"TLS session reuse"},"common_ssl_opts_schema_depth":{"desc":"Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.","label":"CACert Depth"},"sysmon_vm_long_gc":{"desc":"When an Erlang process spends long time to perform garbage collection, a warning level <code>long_gc</code> log is emitted,\\nand an MQTT message is published to the system topic <code>$SYS/sysmon/long_gc</code>.","label":"Enable Long GC monitoring"},"fields_mqtt_quic_listener_keyfile":{"desc":"Path to the secret key file. Will be deprecated in 5.1, use .ssl_options.keyfile instead.","label":"Key file"},"mqtt_peer_cert_as_clientid":{"desc":"Use the CN, DN field in the peer certificate or the entire certificate content as Client ID. Only works for the TLS connection.\\nSupported configurations are the following:\\n- <code>cn</code>: CN field of the certificate\\n- <code>dn</code>: DN field of the certificate\\n- <code>crt</code>: <code>DER</code> or <code>PEM</code> certificate\\n- <code>pem</code>: Convert <code>DER</code> certificate content to <code>PEM</code> format and use as Client ID\\n- <code>md5</code>: MD5 value of the <code>DER</code> or <code>PEM</code> certificate","label":"Use Peer Certificate as Client ID"},"persistent_session_store_message_gc_interval":{"desc":"The starting interval for garbage collection of undelivered messages to\\na persistent session. This affects how often the \\"max_retain_undelivered\\"\\nis checked for removal.","label":"Message GC interval"},"broker_shared_dispatch_ack_enabled":{"desc":"Deprecated, will be removed in 5.1.\\nEnable/disable shared dispatch acknowledgement for QoS 1 and QoS 2 messages.\\nThis should allow messages to be dispatched to a different subscriber in the group in case the picked (based on `shared_subscription_strategy`) subscriber is offline."},"base_listener_enable_authn":{"desc":"Set <code>true</code> (default) to enable client authentication on this listener, the authentication\\nprocess goes through the configured authentication chain.\\nWhen set to <code>false</code> to allow any clients with or without authentication information such as username or password to log in.\\nWhen set to <code>quick_deny_anonymous</code>, it behaves like when set to <code>true</code>, but clients will be\\ndenied immediately without going through any authenticators if <code>username</code> is not provided. This is useful to fence off\\nanonymous clients early.","label":"Enable authentication"},"force_shutdown_enable":{"desc":"Enable `force_shutdown` feature.","label":"Enable `force_shutdown` feature"},"broker_enable_session_registry":{"desc":"Enable session registry"},"overload_protection_backoff_delay":{"desc":"The maximum duration of delay for background task execution during high load conditions.","label":"Delay Time"},"ciphers_schema_common":{"desc":"This config holds TLS cipher suite names separated by comma,\\nor as an array of strings. e.g.\\n<code>\\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\\"</code> or\\n<code>[\\"TLS_AES_256_GCM_SHA384\\",\\"TLS_AES_128_GCM_SHA256\\"]</code>.\\n<br/>\\nCiphers (and their ordering) define the way in which the\\nclient and server encrypts information over the network connection.\\nSelecting a good cipher suite is critical for the\\napplication\'s data security, confidentiality and performance.\\n\\nThe names should be in OpenSSL string format (not RFC format).\\nAll default values and examples provided by EMQX config\\ndocumentation are all in OpenSSL format.<br/>\\n\\nNOTE: Certain cipher suites are only compatible with\\nspecific TLS <code>versions</code> (\'tlsv1.1\', \'tlsv1.2\' or \'tlsv1.3\')\\nincompatible cipher suites will be silently dropped.\\nFor instance, if only \'tlsv1.3\' is given in the <code>versions</code>,\\nconfiguring cipher suites for other versions will have no effect.\\n<br/>\\n\\nNOTE: PSK ciphers are suppressed by \'tlsv1.3\' version config<br/>\\nIf PSK cipher suites are intended, \'tlsv1.3\' should be disabled from <code>versions</code>.<br/>\\nPSK cipher suites: <code>\\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\\"</code>","label":""},"sys_event_client_disconnected":{"desc":"Enable to publish client disconnected event messages."},"crl_cache_refresh_interval":{"desc":"The period to refresh the CRLs from the servers.  This is a global setting for all URLs and listeners.","label":"CRL Cache Refresh Interval"},"mqtt_listener_proxy_protocol":{"desc":"Enable the Proxy Protocol V1/2 if the EMQX cluster is deployed behind HAProxy or Nginx.<br/>\\nSee: https://www.haproxy.com/blog/haproxy/proxy-protocol/","label":"Proxy protocol"},"mqtt_listener_access_rules":{"desc":"The access control rules for this listener.<br/>See: https://github.com/emqtt/esockd#allowdeny","label":"Access rules"},"server_ssl_opts_schema_enable_ocsp_stapling":{"desc":"Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.","label":"Enable OCSP Stapling"},"fields_tcp_opts_send_timeout_close":{"desc":"Close the connection if send timeout.","label":"TCP send timeout close"},"sysmon_os_cpu_check_interval":{"desc":"The time interval for the periodic CPU check.","label":"The time interval for the periodic CPU check"},"sysmon_top_sample_interval":{"desc":"Specifies how often process top should be collected","label":"Top sample interval"},"fields_mqtt_quic_listener_idle_timeout_ms":{"desc":"How long a connection can go idle before it is gracefully shut down. 0 to disable timeout","label":"Idle timeout ms"},"fields_ws_opts_fail_if_no_subprotocol":{"desc":"If <code>true</code>, the server will return an error when\\n the client does not carry the <code>Sec-WebSocket-Protocol</code> field.\\n <br/>Note: WeChat applet needs to disable this verification.","label":"Fail if no subprotocol"},"mqtt_wildcard_subscription":{"label":"Allowed Wildcard Subscription"},"server_ssl_opts_schema_ocsp_refresh_interval":{"desc":"The period to refresh the OCSP response for the server.","label":"OCSP Refresh Interval"},"overload_protection_backoff_hibernation":{"desc":"When at high load, skip process hibernation.","label":"Skip hibernation"},"fields_ws_opts_max_frame_size":{"desc":"The maximum length of a single MQTT packet.","label":"Max frame size"},"sys_event_messages":{"desc":"Client events messages."},"broker_perf_trie_compaction":{"desc":"Enable trie path compaction.\\nEnabling it significantly improves wildcard topic subscribe rate, if wildcard topics have unique prefixes like: \'sensor/{\'{\'}{\'{\'}id{\'}\'}{\'}\'}/+/\', where ID is unique per subscriber.\\nTopic match performance (when publishing) may degrade if messages are mostly published to topics with large number of levels.\\n\\nNOTE: This is a cluster-wide configuration. It requires all nodes to be stopped before changing it."},"sysmon_vm_large_heap":{"desc":"When an Erlang process consumed a large amount of memory for its heap space,\\nthe system will write a warning level <code>large_heap</code> log, and an MQTT message is published to\\nthe system topic <code>$SYS/sysmon/large_heap</code>.","label":"Enable Large Heap monitoring"},"mqtt_shared_subscription_strategy":{"label":"Shared Subscription Strategy","desc":"Dispatch strategy for shared subscription.<br/>- `random`: dispatch the message to a random selected subscriber<br/>- `round_robin`: select the subscribers in a round-robin manner<br/>- `round_robin_per_group`: select the subscribers in round-robin fashion within each shared subscriber group<br/>- `sticky`: always use the last selected subscriber to dispatch, until the subscriber disconnects.<br/>- `local`: select random local subscriber otherwise select random cluster-wide<br/>- `hash_topic`: select the subscribers by hashing the source topic<br/>- `hash_clientid`: select the subscribers by hashing the clientIds"}}}')},b9e1:function(e,n,t){"use strict";t.r(n),n["default"]={keyName:{zh:"密钥名称",en:"Name"},expireAt:{zh:"到期时间",en:"Expire At"},status:{zh:"状态",en:"Status"},view:{zh:"查看",en:"View"},isEnable:{zh:"是否启用",en:"Is Enable"},show:{zh:"显示",en:"Show"},close:{zh:"关闭",en:"Close"},apiKeyDetail:{zh:"API 密钥详情",en:"Details"},enable:{zh:"启用",en:"Enable"},disable:{zh:"停用",en:"Disable"},keyNameRequired:{zh:"请填写密钥名称",en:"Name is required"},confirmDelete:{zh:"确认删除该 API 密钥？",en:"Confirm delete API key?"},secretKeyPlaceholder:{zh:"仅在创建时显示一次",en:"Only shown once when created"},resultTip:{zh:"将 API Key 和 Secret Key 保存到安全的地方，后续将不再显示 Secret Key。",en:"Save API Key and Secret Key to a safe place, Secret Key will not be shown again."},neverExpire:{zh:"永不过期",en:"Never expire"},expired:{zh:"已过期",en:"Expired"}}},be35:function(e,n,t){},c2a2:function(e,n,t){"use strict";t.r(n),n["default"]={alarm:{zh:"告警",en:"Alarm"},currentAlarm:{zh:"当前告警",en:"Active"},historyAlarm:{zh:"历史告警",en:"History"},node:{zh:"节点",en:"Node"},type:{zh:"类型",en:"Type"},triggerNode:{zh:"触发节点",en:"Trigger Node"},alarmMsg:{zh:"告警消息",en:"Message"},alarmName:{zh:"告警名称",en:"Name"},activateAt:{zh:"开始时间",en:"Activate At"},activateTime:{zh:"告警时间",en:"Time"},duration:{zh:"持续时间",en:"Duration"},alarmLevel:{zh:"告警级别",en:"Level"},system:{zh:"系统",en:"System"},state:{zh:"状态",en:"State"},clearHistory:{zh:"清除历史告警",en:"Clear History Alarms"},alarms:{zh:"告警列表",en:"Alarms"},normal:{zh:"正常",en:"normal"},second:{zh:"次",en:"second"},clearSuccess:{zh:"清除历史告警成功",en:"Alarms history is cleared successfully"},clearConfirm:{zh:"确认清除当前所有历史告警吗？",en:"Confirm to clear all history alarms?"}}},c690:function(e,n,t){"use strict";t.r(n),n["default"]={confirmDelete:{zh:"确认删除应用?",en:"Confirm delete?"},application:{zh:"应用",en:"Application"},expireAt:{zh:"到期时间",en:"Expire At"},isEnabled:{zh:"是否启用",en:"Is Enabled"},enabled:{zh:"启用",en:"Enabled"},createApp:{zh:"创建应用",en:"Create App"},secret:{zh:"密钥",en:"Secret"},disabled:{zh:"不启用",en:"Disabled"},pleaseEnter:{zh:"请输入",en:"Please enter"},neverExpire:{zh:"永不过期",en:"Never expire"},confirm:{zh:"确认信息",en:"Confirm"},no:{zh:"不",en:"NO"},user:{zh:"用户",en:"Users"},username:{zh:"用户名",en:"Username"},editorUser:{zh:"编辑用户",en:"Edit"},creatingUser:{zh:"创建用户",en:"Create"},password:{zh:"密码",en:"Password"},newPassword:{zh:"新密码",en:"New password"},confirmPassword:{zh:"确认新密码",en:"Confirm password"},changePassword:{zh:"修改密码",en:"Change Password"},confirmNotMatch:{zh:"两次输入密码不一致",en:"Two inputs don't match!"},noSameNewPwd:{zh:"新密码不能与旧密码相同",en:"The new and old passwords cannot be the same"},enterOneUserName:{zh:"请输入用户名",en:"Please enter username"},pleaseEnterPassword:{zh:"请输入密码",en:"Password is required"},pleaseEnterNewPassword:{zh:"请输入新密码",en:"Please enter new password"},pleaseEnterAConfirmationPassword:{zh:"请输入确认密码",en:"Please enter confirm password."},createUserSuccess:{zh:"创建用户成功",en:"Create User Successfully"},changePassSuccess:{zh:"修改密码成功",en:"Changing Password Successfully"},passwordRequirement1:{zh:"密码长度必须为 8～64 个字符",en:"The password must be 8 to 64 characters in length"},passwordRequirement2:{zh:"至少包含字母、数字、符号中的两种",en:"Should be a combination of letters, numbers, or symbols"},semicolon:{zh:"；",en:"; "},confirmDeleteUser:{zh:"确认删除该用户?",en:"Confirm to delete the user?"},confirmReset:{zh:"确认重置?",en:"Confirm to reset"},"banned-clients":{zh:"黑名单",en:"Banned Clients"},determineToDeleteTheBannedClient:{zh:"确认解除该黑名单？",en:"Confirm to unban this banned client?"},createBannedClientSuccess:{zh:"禁用该客户端成功",en:"Successfully banned this client."},who:{zh:"禁用值",en:"Value"},as:{zh:"禁用属性",en:"Property"},reason:{zh:"原因",en:"Reason"},banObject:{zh:"禁用对象",en:"Banned Object"},until:{zh:"到期时间",en:"Expire At"},enterWho:{zh:"请输入禁用值",en:"Please enter Banned value"},day:{zh:"天",en:"day|days"},hour:{zh:"小时",en:"hour|hours"},min:{zh:"分",en:"minute|minutes"},sec:{zh:"秒",en:"second|seconds"},ms:{zh:"毫秒",en:"millisecond|milliseconds"},validString:{zh:"请输入由字母开头，字母、数字、下划线及 '-' 组成的字符串",en:"Please enter a string consisting of letters, numbers, underscores and '-' starting with a letter"},timeEarlierError:{zh:"所选时间不能早于当前时间",en:"The selected time cannot be earlier than the current time"},enableFlapping:{zh:"启用抖动检测",en:"Enable Flapping Detection"},enableDesc:{zh:"启用连接抖动的检测功能",en:"Enable connection flapping detection feature"},windowTime:{zh:"检测时间窗口",en:"Detection Time Window"},windowTimeDesc:{zh:"进行连接抖动检测时的时间窗口长度",en:"The length of time window for flapping detection"},maxCount:{zh:"最大断连次数",en:"Max Disconnection Count"},maxCountDesc:{zh:"在一个检测时间窗口内，MQTT 连接客户端被允许的最大断连次数",en:"Maximum allowed number of disconnections for an MQTT client within a specified detection time window."},banTime:{zh:"封禁时长",en:"Ban Duration"},banTimeDesc:{zh:"抖动的连接客户端 ID 将被封禁的时长",en:"The duration for which the flapping Client ID will be banned"}}},ca5a:function(e,n,t){"use strict";var s,o,a,i,r,c,l,d,h,u,m,b,p,f,_,g,z,S,v,y,T,k,w,P,C,D,M,E,R,x,A,q,L,N,I,Q,O,B;t.d(n,"p",(function(){return s})),t.d(n,"x",(function(){return o})),t.d(n,"y",(function(){return a})),t.d(n,"G",(function(){return i})),t.d(n,"l",(function(){return r})),t.d(n,"h",(function(){return c})),t.d(n,"H",(function(){return l})),t.d(n,"m",(function(){return d})),t.d(n,"D",(function(){return h})),t.d(n,"C",(function(){return u})),t.d(n,"k",(function(){return m})),t.d(n,"c",(function(){return b})),t.d(n,"d",(function(){return p})),t.d(n,"i",(function(){return _})),t.d(n,"t",(function(){return g})),t.d(n,"A",(function(){return z})),t.d(n,"B",(function(){return S})),t.d(n,"w",(function(){return v})),t.d(n,"F",(function(){return y})),t.d(n,"f",(function(){return T})),t.d(n,"u",(function(){return k})),t.d(n,"v",(function(){return P})),t.d(n,"a",(function(){return C})),t.d(n,"j",(function(){return D})),t.d(n,"n",(function(){return M})),t.d(n,"r",(function(){return E})),t.d(n,"s",(function(){return R})),t.d(n,"q",(function(){return x})),t.d(n,"E",(function(){return A})),t.d(n,"o",(function(){return q})),t.d(n,"g",(function(){return L})),t.d(n,"z",(function(){return N})),t.d(n,"I",(function(){return I})),t.d(n,"e",(function(){return Q})),t.d(n,"b",(function(){return O})),t.d(n,"J",(function(){return B})),function(e){e["Plain"]="plain",e["MD4"]="md4",e["MD5"]="md5",e["Ripemd160"]="ripemd160",e["SHA"]="sha",e["SHA224"]="sha224",e["SHA256"]="sha256",e["SHA384"]="sha384",e["SHA512"]="sha512",e["Pbkdf2"]="pbkdf2",e["Bcrypt"]="bcrypt"}(s||(s={})),function(e){e["Plaintext"]="Plaintext",e["Base64"]="Base64",e["JSON"]="JSON",e["Hex"]="Hex"}(o||(o={})),function(e){e["Running"]="running",e["Stopped"]="stopped"}(a||(a={})),function(e){e["Start"]="start",e["Stop"]="stop"}(i||(i={})),function(e){e["Deny"]="deny",e["Ignore"]="ignore"}(r||(r={})),function(e){e["Connected"]="connected",e["Disconnected"]="disconnected",e["Connecting"]="connecting",e["Inconsistent"]="inconsistent",e["Stopped"]="stopped"}(c||(c={})),function(e){e["Top"]="front",e["Bottom"]="rear",e["Before"]="before:",e["After"]="after:"}(l||(l={})),function(e){e["Connected"]="connected",e["Connecting"]="connecting",e["Disconnected"]="disconnected",e["Disabled"]="disabled",e["Error"]="error"}(d||(d={})),function(e){e["Select"]="select",e["From"]="from",e["Where"]="where",e["Foreach"]="foreach",e["Do"]="do",e["Incase"]="incase"}(h||(h={})),function(e){e["Console"]="console",e["Republish"]="republish",e["DataBridge"]="dataBridge"}(u||(u={})),function(e){e["MessagePublish"]="$events/message_publish",e["MessageDelivered"]="$events/message_delivered",e["MessageAcked"]="$events/message_acked",e["MessageDropped"]="$events/message_dropped",e["ClientConnected"]="$events/client_connected",e["ClientDisconnected"]="$events/client_disconnected",e["ClientConnack"]="$events/client_connack",e["ClientCheckAuthzComplete"]="$events/client_check_authz_complete",e["SessionSubscribed"]="$events/session_subscribed",e["SessionUnsubscribed"]="$events/session_unsubscribed",e["DeliveryDropped"]="$events/delivery_dropped"}(m||(m={})),function(e){e[e["Ingress"]=0]="Ingress",e[e["Egress"]=1]="Egress",e[e["Both"]=2]="Both"}(b||(b={})),function(e){e["Webhook"]="webhook",e["MQTT"]="mqtt",e["InfluxDB"]="influxdb",e["MySQL"]="mysql",e["Kafka"]="kafka",e["Redis"]="redis",e["GCP"]="gcp_pubsub",e["MongoDB"]="mongodb",e["PgSQL"]="pgsql",e["TimescaleDB"]="timescale",e["MatrixDB"]="matrix",e["TDengine"]="tdengine",e["ClickHouse"]="clickhouse",e["DynamoDB"]="dynamo",e["Cassandra"]="cassandra",e["MicrosoftSQLServer"]="sqlserver",e["RocketMQ"]="rocketmq",e["IoTDB"]="iotdb",e["OpenTSDB"]="opents",e["OracleDatabase"]="oracle",e["RabbitMQ"]="rabbitmq",e["Pulsar"]="pulsar",e["HStream"]="hstreamdb"}(p||(p={})),function(e){e["Producer"]="kafka",e["Consumer"]="kafka_consumer"}(f||(f={})),function(e){e["MQTT"]="mqtt"}(_||(_={})),function(e){e["In"]="ingress",e["Out"]="egress"}(g||(g={})),function(e){e[e["QoS0"]=0]="QoS0",e[e["QoS1"]=1]="QoS1",e[e["QoS2"]=2]="QoS2"}(z||(z={})),function(e){e["Topic"]="topic",e["Bridge"]="bridge",e["Event"]="event"}(S||(S={})),function(e){e["Success"]="success",e["Warning"]="warning",e["Danger"]="danger"}(v||(v={})),function(e){e["Response"]="response",e["Internal"]="internal",e["Whole"]="whole"}(y||(y={})),function(e){e["Connections"]="connections",e["Dropped"]="dropped",e["Received"]="received",e["ReceivedBytes"]="received_bytes",e["Topics"]="topics",e["Sent"]="sent",e["SentBytes"]="sent_bytes",e["Subscriptions"]="subscriptions"}(T||(T={})),function(e){e["Single"]="single",e["Sharded"]="sharded",e["Rs"]="rs"}(k||(k={})),function(e){e["Single"]="single",e["Sentinel"]="sentinel",e["Cluster"]="cluster"}(w||(w={})),function(e){e["Running"]="running",e["Stopped"]="stopped"}(P||(P={})),function(e){e["PasswordBased"]="password_based",e["JWT"]="jwt",e["SCRAM"]="scram"}(C||(C={})),function(e){e["BuiltInDatabase"]="built_in_database",e["MySQL"]="mysql",e["MongoDB"]="mongodb",e["PostgreSQL"]="postgresql",e["HTTPServer"]="http",e["Redis"]="redis"}(D||(D={})),function(e){e["CoAP"]="coap",e["ExProto"]="exproto",e["LwM2M"]="lwm2m",e["MQTT_SN"]="mqttsn",e["STOMP"]="stomp"}(M||(M={})),function(e){e["QUIC"]="quic",e["WSS"]="wss",e["WS"]="ws",e["SSL"]="ssl",e["TCP"]="tcp"}(E||(E={})),function(e){e["TCP"]="tcp",e["UDP"]="udp",e["SSL"]="ssl",e["DTLS"]="dtls"}(R||(R={})),function(e){e["Start"]="start",e["Stop"]="stop",e["Restart"]="restart"}(x||(x={})),function(e){e["Disable"]="disable",e["Prefix"]="prefix",e["Suffix"]="suffix"}(A||(A={})),function(e){e["Running"]="running",e["Stopped"]="stopped",e["Unloaded"]="unloaded"}(q||(q={})),function(e){e["Check"]="check",e["Close"]="close",e["Warning"]="warning",e["Disable"]="disable"}(L||(L={})),function(e){e["Array"]="array",e["Enum"]="enum",e["String"]="string",e["Boolean"]="boolean",e["Duration"]="duration",e["Number"]="number",e["IPPort"]="ip_port",e["ByteSize"]="byteSize"}(N||(N={})),function(e){e[e["Millisecond"]=0]="Millisecond",e[e["Second"]=1]="Second",e[e["Minute"]=2]="Minute",e[e["Hour"]=3]="Hour",e[e["Day"]=4]="Day"}(I||(I={})),function(e){e["Client"]="clients",e["User"]="users",e["All"]="all"}(Q||(Q={})),function(e){e["Client"]="clientid",e["User"]="username",e["Address"]="peerhost"}(O||(O={})),function(e){e["Text"]="text",e["HEX"]="hex",e["Hidden"]="hidden"}(B||(B={}))},cd49:function(e,n,t){"use strict";t.r(n);t("e260"),t("e6cf"),t("cca6"),t("a79d");var s=t("7a23"),o=t("5502"),a=Object(s["defineComponent"])({setup:function(e){var n=Object(o["b"])(),t=Object(s["computed"])((function(){return n.state.lang})),a=Object(s["computed"])((function(){return n.state.theme})),i=Object(s["computed"])((function(){return n.state.syncOsTheme})),r=function(e){n.dispatch("UPDATE_SETTINGS",{lang:t.value,theme:e,syncOsTheme:i.value})},c=function(){window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?r("dark"):r("light")},l=function(){window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",(function(e){var t=e.matches?"dark":"light";n.state.syncOsTheme&&t!==a.value&&r(t)}))},d=function(){var e=a.value;document.documentElement.setAttribute("data-theme",e)},h=function(){var e=t.value;document.documentElement.setAttribute("lang",e)};return d(),h(),l(),i.value&&c(),function(e,n){var t=Object(s["resolveComponent"])("router-view");return Object(s["openBlock"])(),Object(s["createBlock"])(t)}}});const i=a;var r=i,c=t("afbc"),l=t("0613"),d=(t("be35"),t("000c"),t("6e2e"),t("c3a1")),h=t("c1a0"),u=t("6516"),m=t("5e38"),b=t.n(m),p={mounted:function(e,n){e.innerHTML="string"===typeof(null===n||void 0===n?void 0:n.value)?b()(n.value):""},updated:function(e,n){e.innerHTML="string"===typeof(null===n||void 0===n?void 0:n.value)?b()(n.value):""}},f=t("88c3");function _(e){e.directive("safe-html",p)}var g="en"===l["a"].state.lang?u["a"]:h["a"],z=Object(s["createApp"])(r).use(l["a"]).use(c["a"]).use(d["a"],{locale:g}).use(f["a"]).use(_).mount("#app");n["default"]=z},d6c8:function(e,n,t){"use strict";t.r(n),n["default"]={createBridge:{zh:"创建数据桥接",en:"Create Data Bridge"},updateBridgeTip:{zh:"更新桥接配置将会导致桥接重启，重启期间缓冲区内的消息和新收到的消息将不会被桥接，是否继续？",en:"Updating bridge configuration will cause the bridge to restart. The buffered messages, and newly received messages during the restart will not be bridged, continue?"},create:{zh:"创建",en:"Create"},bridgeType:{zh:"数据桥接类型",en:"Type of Data Bridge"},dataBridge:{zh:"数据桥接",en:"Data bridge"},useDataBridge:{zh:"使用数据桥接转发",en:"Forwarding with Data Bridge"},direction:{zh:"方向",en:"Direction"},SuccessNum:{zh:"成功数",en:"Success"},ErrNum:{zh:"失败数",en:"Failed"},noMatch:{zh:"不匹配",en:"No match"},rateNow:{zh:"当前速率",en:"Rate"},status:{zh:"资源状态",en:"Resource Status"},configuration:{zh:"配置信息",en:"Configuration"},bridgeDescHTTP:{zh:"发送数据到 HTTP 服务",en:"Send data to HTTP Server"},bridgeDescMQTT:{zh:"使用 MQTT 桥接数据",en:"Using MQTT to bridge data"},method:{zh:"请求方法",en:"Method"},connParams:{zh:"连接参数",en:"Connection"},brokerAddress:{zh:"MQTT 服务地址",en:"MQTT Broker"},mqttVer:{zh:"MQTT 协议版本",en:"MQTT Version"},cleanStart:{zh:"清除会话",en:"Clean start"},cleanStartDesc:{zh:"当重新连接到远程服务，该 MQTT 服务作为入口桥接时，是否启动一个干净的会话。",en:"Whether to start a clean session when reconnecting a remote broker for ingress bridge."},bridgeMode:{zh:"桥接模式",en:"Bridge Mode"},bridgeModeDesc:{zh:"该设置仅适用于 MQTT 协议版本低于 5.0 的情况，且远程 MQTT 服务必须支持该功能。开启后，远端服务器将识别当前连接为一个桥接，消息回环检测更高效，收到的保留消息标志位会透传给本地。",en:"This setting is only for MQTT protocol version older than 5.0, and the remote MQTT broker MUST support this feature. After being enabled, the remote broker will recognize the current connection as a bridge, that loop detection will be more effective and that retained messages will be propagated correctly."},httpPipeline:{zh:"HTTP 管道",en:"HTTP Pipelining"},connTimeout:{zh:"连接超时",en:"Connect Timeout"},reqTimeout:{zh:"HTTP 请求超时",en:"HTTP Request Timeout"},name:{zh:"名称",en:"Name"},createRule:{zh:"创建规则",en:"Create Rule"},topology:{zh:"拓扑图",en:" Topology"},bridgeNotExistTip:{zh:"该数据桥接不存在，请检查并更新规则的 SQL 语句",en:"The data bridge does not exist, please check and update the SQL of the rule"},createdAt:{zh:"创建时间",en:"Created At"},note:{zh:"备注",en:"Note"},action:{zh:"动作",en:"Action"},actions:{zh:"动作",en:"Actions"},actionDesc:{zh:"将处理结果输出到数据桥接或内置函数中。",en:"Output the processing result to a data bridge or built-in function."},addAction:{zh:"添加动作",en:"Add Action"},consoleOutput:{zh:"控制台输出",en:"Console Output"},outputResult:{zh:"输出结果",en:"Output Result"},outputResultDesc:{zh:"运行测试后，根据测试数据输出规则 SQL 的处理结果。",en:"After executing the test, output the result of processing the rule SQL using the test data."},testData:{zh:"输入测试数据",en:"Input Test Data"},testDataDesc:{zh:"输入并模拟运行时的使用数据，点击运行测试按钮后开始规则的 SQL 测试，结果将在输出结果中展示。",en:"Enter the data needed to run, and then click the Run Test button to test the rule SQL. The result will be shown in the Output Result."},testPassed:{zh:"测试通过",en:"Test Passed"},resetData:{zh:"重置数据",en:"Reset data"},rule:{zh:"规则",en:"rule"},resetMetricsConfirm:{zh:"是否确认重置该{target}统计数据？",en:"Are you sure you want to reset this {target} statistic?"},resetSuccessfully:{zh:"重置成功",en:"Reset successfully"},republish:{zh:"消息重发布",en:" Republish"},selectOrInput:{zh:"请选择或直接输入",en:"Select or input directly"},editAction:{zh:"编辑动作",en:"Edit The Action"},testsql:{zh:"运行测试",en:"Run Test"},sqlMode:{zh:"SQL 模式",en:"SQL Mode"},sqlEditor:{zh:"SQL 编辑器",en:"SQL Editor"},messages:{zh:"消息",en:"Messages"},changeSqlMethod:{zh:"切换 SQL 编辑",en:"Switch SQL Edit"},changeFormMethod:{zh:"切换表单编辑",en:"Switch Form Edit"},dataSource:{zh:"数据来源",en:"Data Source"},dataSourceDesc:{zh:"选择一个消息事件或数据桥接作为测试数据源，确保它与规则的 SQL 保持一致。",en:"Select a message event or data bridge as the data source for testing, ensuring that it is consistent with the rule's SQL."},addDataSource:{zh:"添加数据来源",en:"Add data source"},select:{zh:"数据转换",en:"Select"},where:{zh:"条件",en:"Where"},type:{zh:"类型",en:"Type"},sqlPassed:{zh:"通过",en:"Passed"},sqlPassedDesc:{zh:"成功执行并输出结果",en:"Executes successfully and outputs the result"},matched:{zh:"命中",en:"Matched"},sqlMatchedDesc:{zh:"规则启用后的执行次数",en:"The number of executions after the rule is enabled"},bridgeMatchedDesc:{zh:"Bridge 被匹配到（被请求）的次数",en:"Count of this bridge is matched and queried"},sqlFailed:{zh:"失败",en:"Failed"},sqlFailedDesc:{zh:"因语法或函数调用失败导致执行失败",en:"Execution failed due to syntax or function call failure"},sqlNoResult:{zh:"无结果",en:"No Result"},sqlNoResultDesc:{zh:"成功执行但没有输出结果",en:"Executes Successfully But No Output Results"},rateLast5M:{zh:"最近 5 分钟速率",en:"Rate in Last 5 Min"},sent:{zh:"已发送",en:"Sent"},sentDesc:{zh:"已经发送出去的消息个数",en:"Count of messages that are sent by this bridge"},dropped:{zh:"已丢弃",en:"Dropped"},droppedDesc:{zh:"被丢弃的消息个数",en:"Count of messages dropped"},retried:{zh:"已重试",en:"Retried"},retriedDesc:{zh:"从队列或者飞行窗口里重试的次数",en:"Times of retried from the queue or the inflight window"},queuing:{zh:"已缓存",en:"Queued"},queuingDesc:{zh:"当前被缓存到磁盘队列的消息个数",en:"Count of messages that are currently queuing"},sentSuccessfully:{zh:"发送成功",en:"Sent Successfully"},sentSuccessfullyDesc:{zh:"已经发送成功的消息个数",en:"Count of messages that sent successfully"},sentFailed:{zh:"发送失败",en:"Sent Failed"},sentFailedDesc:{zh:"发送失败的消息个数",en:"Count of messages that sent failed"},sentInflight:{zh:"已发送未确认",en:"Sent Inflight"},sentInflightDesc:{zh:"已异步地发送但没有收到 ACK 的消息个数",en:"Count of messages that were sent asynchronously but ACKs are not received"},lateReply:{zh:"超期回复",en:"Late Reply"},lateReplyDesc:{zh:"请求过期后收到回复",en:"Reply Received After Request Expired"},received:{zh:"已接收",en:"Received"},receivedDesc:{zh:"从远程系统收到的消息个数",en:"Count of messages that is received from the remote system"},rateMax:{zh:"最大速率",en:"Maximum Rate"},activated:{zh:"已启用",en:"Activated"},deactivated:{zh:"未启用",en:"Deactivated"},input:{zh:"输入",en:"Input"},source:{zh:"输入",en:"Source"},success:{zh:"成功",en:"Success"},connected:{zh:"已连接",en:"Connected"},disconnected:{zh:"已断开",en:"Disconnected"},connecting:{zh:"连接中",en:"Connecting"},SQL:{zh:"SQL 语句",en:"SQL"},ruleSQLDesc:{zh:"使用 SQL 语句实时提取、过滤、丰富和转换设备与业务系统之间的数据。",en:"Use SQL to extract, filter, enrich, and transform data in real-time between devices and business systems."},sqlEdit:{zh:"了解更多 SQL 语法，请参考 ",en:"To learn more about SQL, see our "},sqlSyntaxAndTem:{zh:"SQL 语法与示列。",en:"SQL syntax and templates."},overview:{zh:"概览",en:"Overview"},viewSQL:{zh:"查看当前数据源下的 SQL 例子",en:"View SQL example under the current data source"},sqlExample:{zh:"SQL 例子",en:"SQL Example"},statistics:{zh:"统计",en:"Statistics"},executionStatistics:{zh:"运行统计",en:"Execution Statistics"},actionsStatistics:{zh:"动作统计",en:"Actions Statistics"},egressStatistics:{zh:"流出统计",en:"Egress Statistics"},ingressStatistics:{zh:"流入统计",en:"Ingress Statistics"},nodeStatus:{zh:"节点状态",en:"Node Status"},resetStatistics:{zh:"重置统计数据",en:"Reset statistics"},lastResetTime:{zh:"上次重置时间",en:"Last reset time"},nodeStatusBridgeDesc:{zh:"每个节点上数据桥接状态和执行情况",en:"Data Bridge status and execution on each node"},nodeStatusRuleDesc:{zh:"每个节点上规则状态和执行情况",en:"Rules status and execution on each node"},reconnect:{zh:"重连",en:"Reconnect"},remoteTopic:{zh:"远程主题",en:"Remote Topic"},ingress:{zh:"入口配置",en:"Ingress"},egress:{zh:"出口配置",en:"Egress"},localBroker:{zh:"本地 MQTT 服务",en:"Local MQTT Broker"},remoteBroker:{zh:"远程 MQTT 服务",en:"Remote MQTT Broker"},ingressDesc:{zh:"支持从外部的远程 MQTT 服务桥接消息到本地服务，可用于规则的数据源。",en:"Bridges messages from remote MQTT broker to local, can be used as data source for rule."},ingressHelp:{zh:"开启后，远程服务将作为数据源，本地服务将作为数据目的地接收消息，当出口配置启用后，该配置可选。",en:"When enabled, remote broker will be the data source, local broker will be the data destination to received messages, it's optional when egress is enabled."},egressDesc:{zh:"支持将本地服务消息桥接至外部的远程 MQTT 服务，可用于规则的动作中。",en:"Bridges local messages to remote MQTT broker, can be used as action for rule."},egressHelp:{zh:"开启后，远程服务将作为数据目的地接收本地服务的消息，当入口配置启用后，该配置可选。",en:"When enabled, remote broker will be the data destination to received local messages, it’s optional when ingress is enabled."},remoteTopicRequired:{zh:"请至少配置一个入口或出口配置中的远程服务主题",en:"Please configure at least one remote topic in ingress or egress"},remoteTopicRepeated:{zh:"入口和出口配置的远程 MQTT 主题相同",en:"The same remote MQTT topics are configured for ingress and egress"},clientPoolsize:{zh:"连接池大小",en:"Connection Pool Size"},egressPoolSizeDesc:{zh:"用于出口配置的 MQTT 客户端连接池大小。<br/>\n    连接池中每个 MQTT 客户端都将被分配一个唯一的 `clientid` 以确保避免重复或冲突，格式为 `${'{'}clientid_prefix{'}'}:${'{'}bridge_name{'}'}:egress:${'{'}node{'}'}:${'{'}n{'}'}`，其中 `n` 是连接池中客户端的编号。",en:"The size of the MQTT client connection pool for egress. <br/>\n    Each client in the MQTT connection pool is allocated a unique client ID to prevent duplication or conflicts. The client ID follows the format: `${'{'}clientid_prefix{'}'}:${'{'}bridge_name{'}'}:egress:${'{'}node{'}'}:${'{'}n{'}'}`, where `n` represents the client's number in the connection pool."},ingressPoolSizeDesc:{zh:"用于入口配置的 MQTT 客户端连接池大小。<br/>\n    仅当远程主题（`remote.topic`） 使用了共享订阅（例如 `$share/my-group/topic1`）时才会启用连接池。\n    连接池中每个 MQTT 客户端都将被分配一个唯一的 `clientid` 以确保避免重复或冲突，格式为 `${'{'}clientid_prefix{'}'}:${'{'}bridge_name{'}'}:ingress:${'{'}node{'}'}:${'{'}n{'}'}`，其中 `n` 是连接池中客户端的编号。",en:"The size of the MQTT client connection pool for ingress. <br/>\n    The connection pool is enabled only when `remote.topic` is using shared subscriptions (e.g., `$share/my-group/topic1`). <br/>\n    Each client in the MQTT connection pool is allocated a unique client ID to prevent duplication or conflicts. The client ID follows the format: `${'{'}clientid_prefix{'}'}:${'{'}bridge_name{'}'}:ingress:${'{'}node{'}'}:${'{'}n{'}'}`, where `n` represents the client's number in the connection pool."},bridgeUsage:{zh:"如何使用桥接",en:"How to use Bridge"},localTopic:{zh:"本地主题",en:"Local Topic"},username:{zh:"用户名",en:"Username"},password:{zh:"密码",en:"Password"},retryInterval:{zh:"消息重发间隔",en:"Message Retry Interval"},retryIntervalDesc:{en:"Delay for the MQTT bridge to retry sending the QoS1/QoS2 messages in case of ACK not received.",zh:"MQTT 桥接在未收到 ACK 的情况下，延迟重发 QoS1/QoS2 消息的时间间隔。"},tip:{zh:"提示：",en:"Tip:"},changePwdTip:{zh:"目前为加密密码，修改请重新输入",en:"The password is currently encrypted, to change it please re-enter"},pwdWarningWhenCoping:{zh:"目前为加密密码，另存为副本需重新输入",en:"The password is currently encrypted. If you save this data bridge as a copy, you need to enter it again"},testTheConnection:{zh:"测试连接",en:"Test Connectivity"},test:{zh:"启用调试",en:"Enable Test"},testTip:{zh:"启用调试后，可模拟数据源数据，并查看测试规则 SQL 的结果。",en:"Test enabled, simulate data source and view the test rule SQL result."},testDesc:{zh:"在创建规则之前，您可以使用测试数据来执行您刚才编辑的 SQL。这样可以帮助您确保结果符合预期，并且可以放心地创建并使用规则。",en:"Before creating a rule, you can test rule SQL by using test data. This will help ensure that the results meet your expectations and allow you to confidently use the rule."},connectionSuccessful:{zh:"连接成功",en:"Connection is successful"},payload:{zh:"消息模版",en:"Payload"},payloadDesc:{zh:"支持使用 ${'{'}field{'}'} 语法读取数据。",en:"Supports reading data using ${'{'}field{'}'} syntax."},payloadExample:{zh:"例如：${'{'}payload{'}'}, ${'{'}clientid{'}'}, ${'{'}topic{'}'}, ${'{'}username{'}'} 等。请根据使用数据桥接的业务需求来选择字段，置空则原样转发消息。",en:"For example: ${'{'}payload{'}'}, ${'{'}clientid{'}'}, ${'{'}topic{'}'} , ${'{'}username{'}'}, etc. Use fields according to the data bridges requirements of your business and forwards the message as it is if it is empty."},ingressRemoteTopicDesc:{zh:"本地服务将订阅该主题以从远程 MQTT 服务接收消息。<br/>当 EMQX 配置为集群或启用了 ingress 连接池时，**必须**使用共享订阅来避免消息重复。",en:"The local broker will subscribe to topic to receive messages from remote broker . <br/>When EMQX is running in a cluster or with an enabled ingress connection pool, it is **mandatory** to use shared subscriptions to avoid message duplication."},egressRemoteTopicDesc:{zh:"本地服务将向该主题发布消息到远程 MQTT 服务。支持使用 ${field} 语法提取变量动态拼接主题。",en:"The local broker will publish messages to the topic to the remote broker, supports using ${field} syntax to use the dynamic topics."},ingressLocalTopicDesc:{zh:"订阅该本地服务的主题，可以直接接收远程服务的消息而不用使用规则，如不填写则由规则指定。（可选）",en:"Subscribe to the local broker topic to receive messages from the remote broker without using rules, if not it will be specified by the rule. (Optional)"},egressLocalTopicDesc:{zh:"向该本地服务的主题发布消息，可以直接向远程服务发送消息而不用使用规则，如不填写则由规则指定。（可选）",en:"Publish messages to the local broker topic to send messages to the remote broker without using rules, if not it will be specified by the rule. (Optional)"},duplicate:{zh:"复制",en:"Duplicate"},SQLTemplates:{zh:"SQL 示例",en:"SQL Examples"},commonSQLTemplates:{zh:"常用 SQL 示例",en:"Common SQL Examples"},useSQL:{zh:"使用 SQL",en:"Use this SQL"},usageScenarios:{zh:"应用场景",en:"Usage scenarios"},exampleOfInput:{zh:"输入消息示例",en:"Example of input message"},processedResults:{zh:"处理结果",en:"Processed results"},customTopic:{zh:"自定义主题",en:"Custom topic"},events:{zh:"事件",en:"Events"},eventsDesc:{zh:"规则可以通过 MQTT 消息、事件或数据桥来触发。在 SQL 中，多个数据源可以使用逗号分隔。",en:"Rules can be triggered by MQTT messages, events, or data bridges. In SQL, multiple data sources can be separated with commas."},useEvent:{zh:"使用事件",en:"Use event"},messagePublishDesc:{zh:"当消息发布到指定的一个或多个主题时触发规则，SQL 语句中可直接使用 MQTT 主题",en:"Trigger rule when a message is published to one or more of the specified topics, and the MQTT topic can be used directly in the SQL"},messageDeliveredDesc:{zh:"当消息被放入底层 socket 时触发规则",en:"Trigger the rule when a message is put into the underlying socket"},messageAckedDesc:{zh:"当消息发送到客户端，并收到客户端回复的 ACK 时触发规则，仅 QoS1，QoS2 会触发",en:"The rule is triggered when the message is sent to the client and an ack is received from the client. Only QoS1 and QoS2 messages will be triggered"},messageDroppedDesc:{zh:"当一条消息无任何订阅者时触发规则",en:"Trigger rule when a message has no subscribers"},deliveryDroppedDesc:{zh:"当订阅者的消息队列已满时触发规则",en:"Trigger rule when subscriber's message queue is full"},clientConnectedDesc:{zh:"当终端连接成功时触发规则",en:"Trigger the rule when the terminal is connected successfully"},clientDisconnectedDesc:{zh:"当终端连接断开时触发规则",en:"Trigger rule when terminal connection is lost"},clientConnackDesc:{zh:"当服务端向客户端发送 CONNACK 报文时触发规则，reason_code 包含各种错误原因代码",en:"The rule event is triggered when the server sends a CONNACK packet to the client. reason_code contains the error reason code."},clientCheckAuthzCompleteDesc:{zh:"当客户端鉴权结束时触发规则",en:"The rule event is triggered when the client check acl complete."},sessionSubscribedDesc:{zh:"当终端订阅成功时触发规则",en:"Trigger the rule when the terminal subscribes successfully"},sessionUnsubscribedDesc:{zh:"当取消终端订阅成功时触发规则",en:"Triggered when the terminal subscription is cancelled successfully"},useBridge:{zh:"使用桥接",en:"Use bridge"},bridgeForInputDesc:{zh:"当桥接从外部服务接收到消息时触发规则。",en:"Triggered when a message is received from remote server."},clientEvent:{zh:"客户端事件",en:"Client event"},dataTypeSQLNoMatch:{zh:"数据源与当前输入的 SQL 不匹配",en:"Data source doesn't match the entered SQL"},backBridgeList:{zh:"返回 Bridge 列表",en:"Back To Bridge List"},headers:{zh:"请求头",en:"Headers"},body:{zh:"请求体",en:"Body"},httpBridgeURLFieldDesc:{zh:"支持使用 ${'{'}field{'}'} 语法提取数据拼接 URL",en:"Supports extracting data concatenated URLs using the ${'{'}field{'}'} syntax"},useBridgeCreateRule:{zh:"是否使用该数据桥接创建规则？",en:"Would you like to create a Rule using this Data Bridge?"},console:{zh:"打印结果输出到控制台",en:"Print the result to the Console"},total:{zh:"总数",en:"Total"},actionTotalDesc:{zh:"规则调用操作的次数。 此值可能是“命中”的数倍，具体取决于规则的操作数",en:"How many times the actions are called by the rule. This value may several times of 'matched', depending on the number of the actions of the rule"},actionSuccessDesc:{zh:"规则成功调用操作的次数",en:"The number of times the rule has successfully called the action"},actionFailedDesc:{zh:"规则调用操作失败的次数",en:"The number of times the rule calling operation has failed"},outOfService:{zh:"服务中止",en:"Out of Service"},actionOutOfServiceDesc:{zh:"由于操作停止服务而导致规则调用操作失败的次数。 例如，数据桥接被禁用或停止。",en:"The number of times the rule calling action failed due to the action being out of service. For example, a bridge is disabled or stopped."},unknown:{zh:"未知",en:"Unknown"},actionUnknownDesc:{zh:"由于未知错误导致的规则调用失败次数。",en:"The number of times the rule calling action failed due to an unknown error."},deleteBridgeSecondConfirm:{zh:"删除该桥接会影响下方规则的数据流。如果该桥接已被添加到规则的动作中，则会立即删除。是否确认继续？",en:"Deleting this bridge will affect the data flow for the rules listed below. If the bridge has been added to the actions of any rules, it will be removed immediately, continue?"},rateUnit:{zh:"message/sec | messages/sec",en:"message/sec | messages/sec"},saveAsCopy:{zh:"保存为副本",en:"Save as copy"},poolType:{zh:"连接池类型",en:"Pool Type"},connectionPoolSize:{zh:"连接池大小",en:"Connection Pool Size"},autoRestartIntervalValueDesc:{zh:"如果时间间隔设置过短，可导致服务离线时反复进行连接测试以致给系统带来较大负载。",en:"If the auto restart time interval is set too small, it might cause the connection test to be repeated when the service is offline, which will bring a lot load to the system."},confirmReset:{zh:"是否确认重置输入的测试数据？",en:"Are you sure to reset the test data?"},async:{zh:"异步",en:"Async"},sync:{zh:"同步",en:"Sync"}}},d8dc:function(e,n,t){"use strict";t.r(n),n["default"]={errorRange:{zh:"填写错误：数值范围为 {min} - {max}",en:"Input error: the number range is {min} - {max}"},minimumError:{zh:"请输入大于等于 {min} 的数",en:"Please enter a number greater than or equal {min}"},maximumError:{zh:"请输入小于等于 {max} 的数",en:"Please enter a number less than or equal {max}"},errorType:{zh:"类型错误：请填写{type}类型",en:"Type error: please enter {type}"},errorUnit:{zh:"单位错误：请填写 {unit} 单位",en:"Unit error: please enter {unit}"},formatError:{zh:"请输入格式正确的值",en:"Please enter the value in the correct format"},inputFieldRequiredError:{zh:"请输入{name}",en:"{name} is required."},selectFieldRequiredError:{zh:"请选择{name}",en:"Please select the {name}."},int:{zh:"整数",en:"integer"},inputRequired:{zh:"请输入",en:"Please enter"},selectRequired:{zh:"请选择",en:"Please select"}}},ee96:function(e){e.exports=JSON.parse("{}")},f5d2:function(e,n,t){"use strict";t.r(n),n["default"]={retainer:{zh:"保留消息",en:"Retainer"},sysTopics:{zh:"系统主题",en:"System Topics"},rewrite:{zh:"主题重写",en:"Topic Rewrite"},subscribe:{zh:"代理订阅",en:"Auto Subscribe"},postpone:{zh:"延迟发布",en:"Delayed Publish"},message:{zh:"事件消息",en:"Event Message"},storage:{zh:"消息存储",en:"Storage"},policy:{en:"Policy",zh:"策略设置"},flowControl:{en:"Flow Control",zh:"流控"},batchReadNumber:{zh:"批量加载数量",en:"Batch Read Number"},batchDeliverNumber:{zh:"批量发布数量",en:"Batch Deliver Number"},msgExpiryInterval:{en:"Message Expiry Interval",zh:"消息过期间隔"},msgClearInterval:{en:"Message Clear Interval",zh:"消息清理间隔"},deliverRate:{zh:"派发速率",en:"Deliver Rate"},deliverRateDesc:{zh:"派发保留消息的最大速率",en:"The maximum rate of delivering retain messages"},storageMethod:{zh:"存储方式",en:"Storage Method"},storageType:{zh:"存储类型",en:"Storage Type"},maxRetainedMessages:{zh:"最大保留消息数",en:"Max Retained Messages"},maxPayloadSize:{zh:"最大消息负载大小",en:"Max Payload Size"},enable:{zh:"启用",en:"Enable"},enableDelayed:{zh:"启用延迟发布",en:"Enable Delayed Publish"},enableRetained:{zh:"启用保留消息",en:"Enable Retained Messages"},enableDesc:{zh:"打开或关闭保留消息功能，停用后不会清除已保留消息",en:"Enable retainer feature, disabling will not clear the saved retained messages"},enableDelayedDesc:{zh:"启用延迟发布功能，停用将终止延迟列表",en:"Enable the delayed publish and disable it to delete the delayed list"},createDate:{zh:"发布时间",en:"Created At"},unlimited:{zh:"不限",en:"Unlimited"},custom:{zh:"自定义",en:"Custom"},sTopic:{zh:"原始主题",en:"Original Topic"},dTopic:{zh:"目标主题",en:"Destination Topic"},delayedTime:{zh:"延迟时间",en:"Delay"},remainTime:{zh:"剩余时间",en:"Remaining"},publishTime:{zh:"发布时间",en:"Publish Time"},eventTitleDesc:{zh:"将设备生命周期事件通过事件主题以 MQTT 消息的形式发布",en:"Publish client life cycle events through events topic"},configMsg:{zh:"配置需要启用的事件消息",en:"Configure event messages that need to be enabled"},client_connected:{en:"Clients have already connected",zh:"客户端连接完成"},required:{zh:"请填写此项",en:"Required"},client_disconnected:{en:"Clients have already disconnected",zh:"客户端断开连接"},client_subscribed:{en:"Clients have already subscribed",zh:"客户端完成订阅"},client_unsubscribed:{en:"Clients have already unsubscribed",zh:"客户端取消订阅"},message_delivered:{en:"Messages have already delivered",zh:"消息已投递"},message_dropped:{en:"Messages have already dropped",zh:"消息已丢弃"},message_acked:{en:"Messages have already acknowledged",zh:"消息已确认"},action:{zh:"动作类型",en:"Action"},re:{zh:"正则表达式",en:"Regex"},dataManage:{zh:"数据管理",en:"Manage Data"},maxDelayedMsg:{zh:"最大延迟消息数",en:"Max Delayed Messages"},maxDelayedMsgDesc:{zh:"最大延迟消息数，超过此数量将不再接收新的延迟消息",en:"Max delayed messages, no new delayed messages will be accepted when the number is exceeded"},builtInDatabase:{zh:"内置数据库",en:"Built-in Database"},noExp:{en:"Never Expire",zh:"永不过期"},sec:{en:"Second",zh:"秒"},min:{en:"Minute",zh:"分"},hour:{en:"Hour",zh:"小时"},disable:{en:"Disabled",zh:"禁用"},releaseInterval:{en:"Quota Release Interval",zh:"单次发布周期"},openPayload:{en:"Show Payload",zh:"查看 Payload"},view:{zh:"查看",en:"View"},needNumber:{en:"It needs to be a number",zh:"请填写数字"},basicConfig:{zh:"基础配置",en:"Basic Config"},messagePublishInterval:{zh:"消息发布周期",en:"Messages publish interval"},heartbeatInterval:{zh:"心跳周期",en:"Heartbeat interval"},clientEvent:{zh:"客户端事件",en:"Client event"},clientConnected:{zh:"客户端已连接提醒",en:"Client connected notification"},clientDisconnected:{zh:"客户端断开连接提醒",en:"Client disconnected notification "},clientSubscribed:{zh:"客户端订阅提醒",en:"Client subscribed notification "},clientUnsubscribed:{zh:"客户端取消订阅提醒",en:"Client unsubscribed notification "},messages:{zh:"已保留消息",en:"Retained Messages"},retainerDisabled:{zh:"保留消息功能已禁用，点击跳转到设置页面中开启。",en:"Retained message is disabled, click to enable on settings page."},msgExpiryIntervalDesc:{en:"Message retention time. 0 means message will never be expired",zh:"消息保留时间。0 代表永久保留"},msgClearIntervalDesc:{en:"Periodic interval for cleaning up expired messages. Never clear if the value is 0.",zh:"消息清理间隔。0 代表不进行清理"},maxPayloadSizeDesc:{en:"Maximum retained message size",zh:"保留消息的最大长度"},typeDesc:{en:"Backend type",zh:"后端类型"},storageTypeDesc:{en:"Specifies whether the messages are stored in RAM or persisted on disc",zh:"选择消息是存放在磁盘还是内存中"},maxRetainedMessagesDesc:{en:"Maximum number of retained messages, 0 means no limit",zh:"消息保留的数量上限，0 表示无限"},batchReadNumberDesc:{en:"Size of the batch when reading messages from storage, 0 means reading all at once",zh:"从存储后端批量加载时的每批数量上限，0 代表一次性读取"},batchDeliverNumberDesc:{en:"The number of retained messages can be delivered per batch, 0 means delivering all at once.",zh:"批量派发时每批的数量，0 代表一次性全部派发"},sysMsgIntervalDesc:{en:"Time interval of publishing `$SYS` messages.",zh:"发送 `$SYS` 主题的间隔时间。"},sysHeartbeatIntervalDesc:{en:"Time interval for publishing following heartbeat messages:\n- `$SYS/brokers/<node>/uptime`\n- `$SYS/brokers/<node>/datetime`\n",zh:"发送心跳系统消息的间隔时间，它包括：\n- `$SYS/brokers/<node>/uptime`\n- `$SYS/brokers/<node>/datetime`\n"},sysEventClientConnectedDesc:{en:"Enable to publish client connected event messages",zh:"是否开启客户端已连接事件消息。"},sysEventClientDisconnectedDesc:{en:"Enable to publish client disconnected event messages.",zh:"是否开启客户端已断开连接事件消息。"},sysEventClientSubscribedDesc:{en:"Enable to publish event message that client subscribed a topic successfully.",zh:"是否开启客户端已成功订阅主题事件消息。"},sysEventClientUnsubscribedDesc:{en:"Enable to publish event message that client unsubscribed a topic successfully.",zh:"是否开启客户端已成功取消订阅主题事件消息。"},proxySubTip:{zh:"通过代理订阅为客户端订阅主题时，不会经过 AuthZ 检查权限。",en:"The authorization will not check permission when clients subscribe to topics through Auto Subscribe."}}},f9f6:function(e,n,t){"use strict";t.r(n),n["default"]={name:{zh:"名称",en:"Name"},type:{zh:"类型",en:"Type"},condition:{zh:"条件",en:"Condition"},startTime:{zh:"起始时间",en:"Start Time"},endTime:{zh:"结束时间",en:"End Time"},startEndTime:{zh:"起止时间",en:"Start Time/End Time"},status:{zh:"状态",en:"Status"},logSize:{zh:"日志大小",en:"Log Size"},view:{zh:"查看",en:"View"},download:{zh:"下载",en:"Download"},stop:{zh:"停止",en:"Stop"},delete:{zh:"删除",en:"Delete"},waiting:{zh:"等待中",en:"Waiting"},running:{zh:"运行中",en:"Running"},createLog:{zh:"创建 Trace",en:"Create Trace"},viewLog:{zh:"查看 Trace",en:"View Trace"},createSuc:{zh:"创建 Trace 成功",en:"Create Log Trace Successfully"},stopSuc:{zh:"停止 Trace 成功",en:"Stop Log Trace Successfully"},deleteSuc:{zh:"删除 Trace 成功",en:"Delete Log Trace Successfully"},tooLargeLog:{zh:"日志过长，建议下载后查看",en:"The Trace is too long, you better download to view"},confirmDeleteTrace:{zh:"确定删除该 Trace",en:"Confirm to delete this Trace"},needStartTime:{zh:"请输入起始时间和结束时间",en:"start time or end time is required"},loadNextPage:{zh:"正在加载更多",en:"Loading More Log"},srunning:{zh:"运行中",en:"Running"},sstopped:{zh:"已停止",en:"Stopped"},swaiting:{zh:"等待中",en:"Waiting"},allNodes:{zh:"所有节点",en:"All nodes"},logTraceDownloadTimeout:{zh:"下载追踪日志超时，追踪日志可至服务器的`data/trace`路径查找",en:"The download of the trace log times out. The trace log can be found in the `data/trace` path of the server."},defaultNodeTip:{zh:"已默认选中最新产生日志的节点，也可手动选择其他节点进行查看",en:"The default selected node is the node which generated the log latest, or you can manually select another node to view the log"},payload:{zh:"有效负载编码",en:"Payload encode"},payloadDesc:{zh:"确定跟踪文件中有效负载格式的格式。<br/>`text`：基于文本的协议或纯文本协议。建议在有效负载为JSON编码时使用<br/>`hex`：二进制十六进制编码。当有效负载是自定义二进制协议时，建议使用此选项<br/>`hidden`：有效负载被模糊化为 `******`",en:"Determine the format of the payload format in the trace file.<br/>`text`: Text-based protocol or plain text protocol.It is recommended when payload is JSON encoded.<br/>`hex`: Binary hexadecimal encode. It is recommended when payload is a custom binary protocol.<br/>`hidden`: payload is obfuscated as `******`"}}},feab:function(e,n,t){"use strict";t.r(n),n["default"]={selectDesc:{zh:"对数据进行变换，并选择出感兴趣的字段",en:"Select fields in the output"},fromDesc:{zh:"将规则挂载到某个主题上",en:"Mounts rules to a topic"},whereDesc:{zh:"对 SELECT 选择出来的某个字段施加条件过滤",en:"Filter messages based on conditions"},foreachDesc:{zh:"选择需要做 FOREACH 操作的字段，注意选择出的字段必须为数组类型",en:"Select the field that needs to perform FOREACH operation. Note that the selected field must be an array type"},doDesc:{zh:"对 FOREACH 选择出来的数组中的每个元素进行变换，并选择出感兴趣的字段",en:"Transform each element in the array selected by FOREACH and select the field of interest"},incaseDesc:{zh:"对 DO 选择出来的某个字段施加条件过滤",en:"Apply conditional filtering to a field selected by DO"},caseDesc:{zh:"在查询结果中根据特定条件返回不同的值",en:"Return different values based on specific conditions in the query results"},whenDesc:{zh:"用于控制条件语句的执行流程，一般接一个条件表达式，用来判断对应的 CASE 语句中的某个分支是否需要执行",en:"Used to control the execution flow of conditional statements, usually followed by a condition expression to determine whether a certain branch in the corresponding CASE statement needs to be executed."},elseDesc:{zh:"通常与 CASE 表达式一起使用，指定当所有条件都不满足时应返回的默认值",en:"Usually used with CASE expression, specifying the default value to be returned when none of the conditions are met"},thenDesc:{zh:"通常与 CASE 表达式一起使用，指定了当条件满足时要返回的值",en:"Usually used with CASE expression, specifies the value to be returned when the condition is met."},endDesc:{zh:"指示某个块的结束",en:"Indicates the end of a block"},asDesc:{zh:"为选择结果指定别名",en:"Specify an alias for the selects result"},parameter:{zh:"参数",en:"Parameter"},returned:{zh:"返回值",en:"Returned value"},absDesc:{zh:"绝对值",en:"Absolute value"},absParams:{zh:"1. 被操作数",en:"Operand"},absReturns:{zh:"绝对值",en:"absolute value"},cosDesc:{zh:"余弦",en:"Cosine"},cosParams:{zh:"1. 被操作数",en:"Operand"},cosReturns:{zh:"余弦值",en:"Cosine value"},coshDesc:{zh:"双曲余弦",en:"Hyperbolic cosine"},coshParams:{zh:"1. 被操作数",en:"Operand"},coshReturns:{zh:"双曲余弦值",en:"Hyperbolic cosine value"},acosDesc:{zh:"反余弦",en:"Inverse cosine"},acosParams:{zh:"1. 被操作数",en:"Operand"},acosReturns:{zh:"反余弦值",en:"Inverse cosine value"},acoshDesc:{zh:"反双曲余弦",en:"Inverse hyperbolic cosine"},acoshParams:{zh:"1. 被操作数",en:"Operand"},acoshReturns:{zh:"反双曲余弦值",en:"Inverse hyperbolic cosine value"},sinDesc:{zh:"正弦",en:"Sine"},sinParams:{zh:"1. 被操作数",en:"Operand"},sinReturns:{zh:"正弦值",en:"Sine value"},sinhDesc:{zh:"双曲正弦",en:"Hyperbolic sine"},sinhParams:{zh:"1. 被操作数",en:"Operand"},sinhReturns:{zh:"双曲正弦值",en:"Hyperbolic sine value"},asinDesc:{zh:"反正弦",en:"Arcsine"},asinParams:{zh:"1. 被操作数",en:"Operand"},asinReturns:{zh:"值",en:"Arcsine value"},asinhDesc:{zh:"反双曲正弦",en:"inverse hyperbolic sine"},asinhParams:{zh:"1. 被操作数",en:"Operand"},asinhReturns:{zh:"反双曲正弦值",en:"inverse hyperbolic sine value"},tanDesc:{zh:"正切",en:"tangent"},tanParams:{zh:"1. 被操作数",en:"Operand"},tanReturns:{zh:"正切值",en:"tangent value"},tanhDesc:{zh:"双曲正切",en:"Hyperbolic tangent"},tanhParams:{zh:"1. 被操作数",en:"Operand"},tanhReturns:{zh:"双曲正切值",en:"Hyperbolic tangent value"},atanDesc:{zh:"反正切",en:"Arc tangent"},atanParams:{zh:"1. 被操作数",en:"Operand"},atanReturns:{zh:"反正切值",en:"Arc tangent value"},atanhDesc:{zh:"反双曲正切",en:"Inverse hyperbolic tangent"},atanhParams:{zh:"1. 被操作数",en:"Operand"},atanhReturns:{zh:"反双曲正切值",en:"Inverse hyperbolic tangent value"},ceilDesc:{zh:"上取整",en:"Round up"},ceilParams:{zh:"1. 被操作数",en:"Operand"},ceilReturns:{zh:"整数值",en:"Integer value"},floorDesc:{zh:"下取整",en:"Round down"},floorParams:{zh:"1. 被操作数",en:"Operand"},floorReturns:{zh:"整数值",en:"Integer value"},roundDesc:{zh:"四舍五入",en:"rounding"},roundParams:{zh:"1. 被操作数",en:"Operand"},roundReturns:{zh:"整数值",en:"Integer value"},expDesc:{zh:"幂运算",en:"Exponentiation"},expParams:{zh:"1. 被操作数",en:"Operand"},expReturns:{zh:"e 的 x 次幂",en:"X power of e"},powerDesc:{zh:"指数运算",en:"Exponential operation"},powerParams:{zh:"1. 左操作数 x <br />2. 右操作数 y",en:"1. Left operand x <br />2. Right operand y"},powerReturns:{zh:"x 的 y 次方",en:"Y power of X"},sqrtDesc:{zh:"平方根运算",en:"Square root operation"},sqrtParams:{zh:"1. 被操作数",en:"Operand"},sqrtReturns:{zh:"平方根",en:"Square root"},fmodDesc:{zh:"负点数取模函数",en:"Floating point modulus function"},fmodParams:{zh:"1. 左操作数 <br />2. 右操作数",en:"1. left Operand <br />2.right Operand"},fmodReturns:{zh:"模",en:"module"},logDesc:{zh:"以 e 为底对数",en:"Logarithm to e"},logParams:{zh:"1. 被操作数",en:"Operand"},logReturns:{zh:"值",en:"value"},log10Desc:{zh:"以 10 为底对数",en:"Logarithm to 10"},log10Params:{zh:"1. 被操作数",en:"Operand"},log10Returns:{zh:"值",en:"value"},log2Desc:{zh:"以 2 为底对数",en:"Logarithm to 2"},log2Params:{zh:"1. 被操作数",en:"Operand"},log2Returns:{zh:"值",en:"value"},isNullDesc:{zh:"判断变量是否为空值",en:"Judge if the variable is null"},isNullParams:{zh:"Data",en:"Data"},isNullReturns:{zh:"Boolean 类型的数据。如果为空值(undefined) 则返回 true，否则返回 false",en:"Boolean data.if it is empty (undefined), return true, otherwise return false"},isNotNullDesc:{zh:"判断变量是否为非空值",en:"Judge if the variable is not null"},isNotNullParams:{zh:"Data",en:"Data"},isNotNullReturns:{zh:"Boolean 类型的数据。如果为空值(undefined) 则返回 false，否则返回 true",en:"Boolean data.if it is empty (undefined), return false, otherwise return true"},isStrDesc:{zh:"判断变量是否为 String 类型",en:"Judge whether the variable is String type"},isStrParams:{zh:"Data",en:"Data"},isStrReturns:{zh:"Boolean 类型的数据。",en:"Boolean data."},isBoolDesc:{zh:"判断变量是否为 Boolean 类型",en:"Judge if the variable is Boolean type"},isBoolParams:{zh:"Data",en:"Data"},isBoolReturns:{zh:"Boolean 类型的数据。",en:"Boolean data."},isIntDesc:{zh:"判断变量是否为 Integer 类型",en:"Judge whether the variable is Integer type"},isIntParams:{zh:"Data",en:"Data"},isIntReturns:{zh:"Boolean 类型的数据。",en:"Boolean data."},isFloatDesc:{zh:"判断变量是否为 Float 类型",en:"Judge whether the variable is Float type"},isFloatParams:{zh:"Data",en:"Data"},isFloatReturns:{zh:"Boolean 类型的数据。",en:"Boolean data."},isNumDesc:{zh:"判断变量是否为数字类型，包括 Integer 和 Float 类型",en:"Judge whether the variable is a numeric type, including Integer and Float types"},isNumParams:{zh:"Data",en:"Data"},isNumReturns:{zh:"Boolean 类型的数据。",en:"Boolean data."},isMapDesc:{zh:"判断变量是否为 Map 类型",en:"Judge whether the variable is Map type"},isMapParams:{zh:"Data",en:"Data"},isMapReturns:{zh:"Boolean 类型的数据。",en:"Boolean data."},isArrayDesc:{zh:"判断变量是否为 Array 类型",en:"Judge whether the variable is Array type"},isArrayParams:{zh:"Data",en:"Data"},isArrayReturns:{zh:"Boolean 类型的数据。",en:"Boolean data."},strDesc:{zh:"将数据转换为 String 类型",en:"Convert data to String type"},strParams:{zh:"Data",en:"Data"},strReturns:{zh:"String 类型的数据。无法转换将会导致 SQL 匹配失败",en:"Data of type String. Failure to convert will cause SQL matching to fail"},strUtf8Desc:{zh:"将数据转换为 UTF-8 String 类型",en:"Convert data to UTF-8 String type"},strUtf8Params:{zh:"Data",en:"Data"},strUtf8Returns:{zh:"UTF-8 String 类型的数据。无法转换将会导致 SQL 匹配失败",en:"UTF-8 String type data. Failure to convert will cause SQL matching to fail"},boolDesc:{zh:"将数据转换为 Boolean 类型",en:"Convert data to Boolean type"},boolParams:{zh:"Data",en:"Data"},boolReturns:{zh:"Boolean 类型的数据。无法转换将会导致 SQL 匹配失败",en:"Boolean data. Failure to convert will cause SQL matching to fail"},intDesc:{zh:"将数据转换为整数类型",en:"Convert data to integer type"},intParams:{zh:"Data",en:"Data"},intReturns:{zh:"整数类型的数据。无法转换将会导致 SQL 匹配失败",en:"Integer type data. Failure to convert will cause SQL matching to fail"},floatDesc:{zh:"将数据转换为浮点型类型",en:"Convert data to floating type"},floatParams:{zh:"Data",en:"Data"},floatReturns:{zh:"浮点型类型的数据。无法转换将会导致 SQL 匹配失败",en:"Floating type data. Failure to convert will cause SQL matching to fail"},float2StrDesc:{zh:"将浮点型数字以指定精度转换为字符串",en:"Convert a float to string using the given precision"},float2StrParams:{zh:"1. 浮点型数字 2. 精度",en:"1. Float Number 2. Precision"},float2StrReturns:{zh:"字符串",en:"String"},mapDesc:{zh:"将数据转换为 Map 类型",en:"Convert data to Map type"},mapParams:{zh:"Data",en:"Data"},mapReturns:{zh:"Map 类型的数据。无法转换将会导致 SQL 匹配失败",en:"Map type data. Failure to convert will cause SQL matching to fail"},lowerDesc:{zh:"转为小写",en:"convert to lowercase"},lowerParams:{zh:"1. 原字符串",en:"input string"},lowerReturns:{zh:"小写字符串",en:"Lowercase string"},upperDesc:{zh:"转为大写",en:"convert to uppercase"},upperParams:{zh:"1. 原字符串",en:"input string"},upperReturns:{zh:"大写字符串",en:"uppercase string"},trimDesc:{zh:"去掉左右空格",en:"Remove left and right space"},trimParams:{zh:"1. 原字符串",en:"input string"},trimReturns:{zh:"去掉空格后的字符串",en:"output string"},ltrimDesc:{zh:"去掉左空格",en:"Remove the left space"},ltrimParams:{zh:"1. 原字符串",en:"input string"},ltrimReturns:{zh:"去掉空格后的字符串",en:"output string"},rtrimDesc:{zh:"去掉右空格",en:"Remove the right space"},rtrimParams:{zh:"1. 原字符串",en:"input string"},rtrimReturns:{zh:"去掉空格后的字符串",en:"output string"},reverseDesc:{zh:"字符串反转",en:"String inversion"},reverseParams:{zh:"1. 原字符串",en:"input string"},reverseReturns:{zh:"翻转后的字符串",en:"output string"},strlenDesc:{zh:"取字符串长度",en:"string length"},strlenParams:{zh:"1. 原字符串",en:"input string"},strlenReturns:{zh:"整数值，字符长度",en:"Integer value"},substrDesc:{zh:"取字符的子串",en:"Take a substring of characters"},substrParams:{zh:"1. 原字符串：需要提取子串的原始字符串<br />2. 起始位置：子串的起始位置，注意下标从 0 开始计数。<br />\n3. <i>可选</i>要取出的子串长度",en:"1. Original string: the original string from which to extract a substring<br />2. Starting position: the starting position of the substring, note that indexing starts at 0<br />\n3. <i>Optional</i>Length of the substring to be extracted"},substrReturns:{zh:"子串",en:"substring"},splitDesc:{zh:"将一个字符串分割成一个字符串数组",en:"Split a string into an array of strings"},splitParams:{zh:"1. 原字符串 <br />2. 分割符子串 <br />\n2. <i>可选</i>分割的规则，默认匹配字符串中所有分隔符\n<ul>\n  <li><code>leading</code>：只查找左边第一个分隔符</li>\n  <li><code>trailing</code>：只查找右边第一个分隔符</li>\n</ul>",en:"1. Original string <br />2. Separator substring <br />\n2. <i>Optional</i> Rule for splitting, default to matching all separators in the string\n<ul>\n<li><code>leading</code>: Only search for the first separator on the left side</li>\n<li><code>trailing</code>: Only search for the first separator on the right side</li>\n</ul>"},splitReturns:{zh:"分割后的字符串数组",en:"Split string array"},concatDesc:{zh:"字符串拼接",en:""},concatParams:{zh:"1. 左字符串 <br />2. 右符子串",en:""},concatReturns:{zh:"拼接后的字符串",en:""},tokensDesc:{zh:"字符串分解(按照指定字符串和换行符分解)",en:"String decomposition (decomposed according to specified strings and line breaks)"},tokensParams:{zh:"1. 原字符串</br>2. 分隔符</br>\n3. <i>可选</i>是否根据换行符进行分解，为 <code>nocrlf</code> 时则是",en:"1. Original string</br>2. Separator</br>\n3. <i>Optional</i>Whether to decompose according to the line break, when it is <code>nocrlf</code>, it is"},tokensReturns:{zh:"分解后的字符串数组",en:""},sprintfDesc:{zh:'字符串格式化，格式字符串的用法详见 <a href="https://erlang.org/doc/man/io.html#fwrite-1">https://erlang.org/doc/man/io.html#fwrite-1</a> 里的 Format 部分',en:""},sprintfParams:{zh:"1. 格式字符串 <br />2,3,4... 参数列表。参数个数不定",en:""},sprintfReturns:{zh:"分解后的字符串数组",en:""},padDesc:{zh:"将指定字符串填充到指定长度",en:"Fill the specified string to the specified length."},padParams:{zh:"1. 原字符串 <br />2. 字符总长度 <br />\n3. <i>可选</i>填充的位置，<code>trailing</code>，<code>both</code> 或 <code>leading</code>，默认为 <code>trailing</code><br />\n4. <i>可选</i>指定用于补足的字符，默认为空格",en:"1. Original string <br />2. Total length of characters <br />\n3. <i>Optional</i>Filling position, <code>trailing</code>, <code>both</code> or <code>leading</code>, default is <code>trailing</code><br />\n4. <i>Optional</i>Specify the character for filling, default to space"},padReturns:{zh:"补足后的字符串",en:""},replaceDesc:{zh:"在字符串中搜索并替换指定的文本",en:"Search and replace specified text in a string"},replaceParams:{zh:"1. 原字符串 <br />2. 要被替换的字符串 <br />3. 指定用于替换的字符串 <br />\n2. <i>可选</i>替换的规则，默认为 <code>all</code>\n<ul>\n  <li><code>all</code>：查找所有匹配子串替换</li>\n  <li><code>trailing</code>：从尾部查找第一个匹配子串替换</li>\n  <li><code>leading</code>：从头部查找第一个匹配子串替换</li>\n</ul>",en:"1. Original string <br />2. String to be replaced <br />3. Specified string for replacement <br />\n2. <i>Optional</i>Replacement rule, default is <code>all</code>\n<ul>\n  <li><code>all</code>: Replace all matching substrings found.</li>\n  <li><code>trailing</code>: Replace the last matching substring found from the end of the original string.</li>\n  <li><code>leading</code>: Replace the first matching substring found from the beginning of the original string.</li>\n</ul>"},replaceReturns:{zh:"替换后的字符串",en:"Replaced string"},regexMatchDesc:{zh:"判断字符串是否与某正则表达式匹配",en:""},regexMatchParams:{zh:"1. 原字符串 <br />2. 正则表达式",en:""},regexMatchReturns:{zh:"true 或 false",en:""},regexReplaceDesc:{zh:"替换字符串中匹配到某正则表达式的子串",en:""},regexReplaceParams:{zh:"1. 原字符串 <br />2. 正则表达式 <br />3. 指定用于替换的字符串",en:""},regexReplaceReturns:{zh:"替换后的字符串",en:""},asciiDesc:{zh:"返回字符对应的 ASCII 码",en:""},asciiParams:{zh:"1. 字符",en:""},asciiReturns:{zh:"整数值，字符对应的 ASCII 码",en:""},findDesc:{zh:"查找并返回字符串中的某个子串",en:"Find and return a substring in a string."},findParams:{zh:"1. 原字符串<br />2. 要查找的子串<br />\n3. <i>可选</i>指定查找方向，默认为 <code>leading</code>\n<ul>\n  <li><code>leading</code>从字符串的头部开始查找</li>\n  <li><code>trailing</code>从字符串的尾部开始查找</li>\n</ul>",en:" 1. Original string<br />2. Substring to be searched for<br />\n3. <i>Optional</i>Specify search direction, default is <code>leading</code>\n<ul>\n<li><code>leading</code>: start searching from the beginning of the string</li>\n<li><code>trailing</code>: start searching from the end of the string</li>\n</ul>"},findReturns:{zh:"查找到的子串，如找不到则返回空字符串",en:"The substring found, if not found, returns an empty string."},mapGetDesc:{zh:"取 Map 中某个 Key 的值",en:"Take the value of a Key in the Map"},mapGetParams:{zh:"1. Key：需要获取的 Key，支持嵌套的 Key，比如 <code>a.b.c</code><br /> 2. Map：从中获取 Key 的值的 Map<br />\n3. <i>可选</i>Default Value：当 Map 中不存在指定的 Key 时，返回的默认值",en:"1. Key: The key that needs to be obtained, supports nested keys, such as <code>a.b.c</code><br /> 2. Map: The map from which the value of the key is obtained<br />\n3. <i>Optional</i>Default Value: The default value returned when the specified key does not exist in the map."},mapGetReturns:{zh:"Map 中某个 Key 的值",en:"The value of a Key in the Map"},mapPutDesc:{zh:"向 Map 中插入值",en:"Insert value into Map"},mapPutParams:{zh:"1. Key <br />2. Value <br />3. Map",en:"1. Key <br />2. Value <br />3. Map"},mapPutReturns:{zh:'插入后的 Map。支持嵌套的 Key，比如 "a.b.c"',en:'The inserted Map. Support nested keys, such as "a.b.c"'},nthDesc:{zh:"取第 n 个元素，下标从 1 开始",en:"Take the nth element, and subscripts start at 1"},nthParams:{zh:"1. 起始位置 <br /> 2. 原数组",en:"Original array"},nthReturns:{zh:"第 n 个元素",en:"Nth element"},lengthDesc:{zh:"获取数组的长度",en:"Get the length of an array"},lengthParams:{zh:"1. 原数组",en:"Original array"},lengthReturns:{zh:"数组长度",en:"the length of an array"},sublistDesc:{zh:"截取子数组",en:"Extract subarray"},sublistParams:{zh:"1. <i>可选</i>指定截取的开始位置，下标从 1 开始，默认为 1</br>\n2. 截取的数组的长度</br>3. 原数组",en:"1. <i>Optional</i>Specify the starting position of the interception, with an index starting from 1, default to 1</br>\n2. The length of the intercepted array.</br>3. The original array."},sublistReturns:{zh:"子数组",en:"sub-array"},firstDesc:{zh:"取第 1 个元素。下标从 1 开始",en:"Take the first element. Subscripts start at 1"},firstParams:{zh:"1. 原数组",en:"Original array"},firstReturns:{zh:"第 1 个元素",en:"1st element"},lastDesc:{zh:"取最后一个元素。",en:"take the last element"},lastParams:{zh:"1. 原数组",en:"Original array"},lastReturns:{zh:"最后一个元素",en:"the last element"},containsDesc:{zh:"判断数据是否在数组里面",en:"Determine whether the data is in the array"},containsParams:{zh:"1. 数据 <br />2. 原数组",en:"1. data <br />2. Original array"},containsReturns:{zh:"Boolean 值",en:"Boolean value"},md5Desc:{zh:"求 MD5 值",en:"evaluate MD5"},md5Params:{zh:"数据",en:"data"},md5Returns:{zh:"MD5 值",en:"MD5 value"},shaDesc:{zh:"求 SHA 值",en:"evaluate SHA"},shaParams:{zh:"数据",en:"data"},shaReturns:{zh:"SHA 值",en:"SHA value"},sha256Desc:{zh:"求 SHA256 值",en:"evaluate SHA256"},sha256Params:{zh:"数据",en:"data"},sha256Returns:{zh:"SHA256 值",en:"SHA256 value"},gzipDesc:{zh:"压缩数据，结果包含 gz 数据头和校验和",en:"Compresses data with gz headers and checksum."},gzipParams:{zh:"原始的二进制数据",en:"Raw binary data"},gzipReturns:{zh:"压缩后的二进制数据",en:"Compressed binary data"},gunzipDesc:{zh:"解压缩数据，原始数据中包含 gz 数据头和校验和",en:"Uncompresses data with gz headers and checksum."},gunzipParams:{zh:"压缩后的二进制数据",en:"Compressed binary data"},gunzipReturns:{zh:"原始的二进制数据",en:"Raw binary data"},zipDesc:{zh:"压缩数据，结果不包含 zlib 数据头和校验和",en:"Compresses data without zlib headers and checksum."},zipParams:{zh:"原始的二进制数据",en:"Raw binary data"},zipReturns:{zh:"压缩后的二进制数据",en:"Compressed binary data"},unzipDesc:{zh:"解压缩数据，原始数据中不包含 zlib 数据头和校验和",en:"Uncompresses data without zlib headers and checksum."},unzipParams:{zh:"压缩后的二进制数据",en:"Compressed binary data"},unzipReturns:{zh:"原始的二进制数据",en:"Raw binary data"},zipCompressDesc:{zh:"压缩数据，结果包含 zlib 数据头和校验和",en:"Compresses data with zlib headers and checksum."},zipCompressParams:{zh:"原始的二进制数据",en:"Raw binary data"},zipCompressReturns:{zh:"压缩后的二进制数据",en:"Compressed binary data"},zipUncompressDesc:{zh:"解压缩数据，原始数据中包含 zlib 数据头和校验和",en:"Uncompresses data with zlib headers and checksum."},zipUncompressParams:{zh:"压缩后的二进制数据",en:"Compressed binary data"},zipUncompressReturns:{zh:"原始的二进制数据",en:"Raw binary data"},subbitsDesc:{zh:"从二进制数据的指定下标位置获取指定长度的比特位，然后按照给定的参数转换为想要的数据类型",en:"Get a given length of bits start from the specified offset of a binary, and then convert it to a data type according to the arguments provided"},subbitsParams:{zh:"请查看官网文档",en:"Please refer to the official website documentation."},subbitsReturns:{zh:"获取到的数据",en:"The data got from the binary"},base64EncodeDesc:{zh:"BASE64 编码",en:"BASE64 encode"},base64EncodeParams:{zh:"要编码的二进制数据",en:"The binary to be encoded"},base64EncodeReturns:{zh:"Base64 编码的字符串",en:"The encoded base64-formatted string"},base64DecodeDesc:{zh:"BASE64 解码",en:"BASE64 decode"},base64DecodeParams:{zh:"Base64 编码的字符串",en:"The base64-formatted string to be decoded"},base64DecodeReturns:{zh:"解码后的二进制数据",en:"The decoded binary"},jsonEncodeDesc:{zh:"JSON 编码",en:"JSON encode"},jsonEncodeParams:{zh:"要转成 JSON 的数据结构",en:"The data to be encoded"},jsonEncodeReturns:{zh:"JSON 字符串",en:"The JSON string"},jsonDecodeDesc:{zh:"JSON 解码",en:"JSON decode"},jsonDecodeParams:{zh:"要解码的 JSON 字符串",en:"The JSON string to be decoded"},jsonDecodeReturns:{zh:"解码后的数据结构",en:"The decoded data"},bin2HexstrDesc:{zh:"二进制数据转为 Hex 字符串",en:"Binary to Hex String"},bin2HexstrParams:{zh:"二进制数据",en:"The binary"},bin2HexstrReturns:{zh:"Hex 字符串",en:"The hex string"},hexstr2BinDesc:{zh:"Hex 字符串转为二进制数据",en:"Binary to Hex String"},hexstr2BinParams:{zh:"Hex 字符串",en:"The hex string"},hexstr2BinReturns:{zh:"二进制数据",en:"The binary"},nowTimestampDesc:{zh:"返回当前时间的 Unix 时间戳",en:"Return the unix epoch of now"},nowTimestampParams:{zh:"1. <i>可选</i>时间单位，可设置为 <code>second</code>，<code>millisecond</code>，<code>microsecond</code> 或 <code>nanosecond</code>，默认为 <code>second</code>",en:"1. <i>Optional</i>Time unit, can be set to <code>second</code>, <code>millisecond</code>, <code>microsecond</code>, or <code>nanosecond</code>, default is <code>second</code>"},nowTimestampReturns:{zh:"Unix 时间戳",en:"The unix epoch"},nowRfc3339Desc:{zh:"指定时间单位，生成当前时间的 RFC3339 字符串",en:"Create a RFC3339 time string of now, in given time unit"},nowRfc3339Params:{zh:"1. <i>可选</i>时间单位，可设置为 <code>second</code>，<code>millisecond</code>，<code>microsecond</code> 或 <code>nanosecond</code>，默认为 <code>second</code>",en:"1. <i>Optional</i>Time unit, can be set to <code>second</code>, <code>millisecond</code>, <code>microsecond</code>, or <code>nanosecond</code>, default is <code>second</code>"},nowRfc3339Returns:{zh:"RFC3339 时间字符串",en:"The time string of format RFC3339"},unixTsToRfc3339Desc:{zh:"将输入的时间戳转换为 RFC3339 时间字符串",en:"Convert an unix epoch to RFC3339 time string"},unixTsToRfc3339Params:{zh:"1. Unix 时间戳<br />\n2. <i>可选</i>Unix 时间戳的时间单位，可为 <code>second</code>，<code>millisecond</code>，<code>microsecond</code> 或 <code>nanosecond</code>，默认为 <code>second</code>",en:"1. Unix timestamp <br />\n2. <i>Optional</i>Time unit for Unix timestamp, can be <code>second</code>, <code>millisecond</code>, <code>microsecond</code>, or <code>nanosecond</code>. Default is <code>second</code>"},unixTsToRfc3339Returns:{zh:"RFC3339 时间字符串",en:"The time string of format RFC3339"},rfc3339ToUnixTsDesc:{zh:"将 RFC3339 时间字符串转换为 Unix 时间戳",en:"Convert a RFC3339 time string to unix epoch"},rfc3339ToUnixTsParams:{zh:"1. RFC3339 时间字符串 </br>\n2. <i>可选</i>RFC3339 时间字符串的时间单位，可为 <code>second</code>，<code>millisecond</code>，<code>microsecond</code> 或 <code>nanosecond</code>，默认为 <code>second</code>",en:"1. RFC3339 time string </br>\n2. <i>Optional</i>Unit of RFC3339 time string, can be <code>second</code>, <code>millisecond</code>, <code>microsecond</code>, or <code>nanosecond</code>, default is <code>second</code>"},rfc3339ToUnixTsReturns:{zh:"Unix 时间戳",en:"The unix epoch"},formatDateDesc:{zh:"时间戳转格式化时间",en:"Timestamp to formatted time"},formatDateParams:{zh:"1. 时间戳精度（参考时间戳精度定义）</br>2. 时间偏移量（参考时间偏移量定义）</br>3. 日期格式（参考时间字符串编解码格式）</br>4. 时间戳（可选参数，默认为当前时间）",en:"1. The time unit (refer to The time unit)</br>2. The time offset (refer to time offset definition)</br>3. The date format (refer to time string codec format)</br>4. The timestamp (optional parameter, default is current time)"},formatDateReturns:{zh:"格式化时间字符串",en:"Formatted time"},dateToUnixTsDesc:{zh:"格式化时间转时间戳",en:"Formatted time to timestamp"},dateToUnixTsParams:{zh:"1. 时间戳精度（参考时间戳精度定义）</br>2. 时间偏移量（可选，未填写时，使用格式化时间字符串中的时间偏移量，参考时间偏移量定义）</br> 3. 日期格式（参考时间字符串编解码格式）</br>4. 格式化时间字符串",en:"1. The time unit (refer to the following table for definition) </br>2. The time offset (optional, when not filled, use the time offset in the formatted time string, refer to the time offset definition) </br>3. The date format (refer to time string codec format) </br>4. The formatted time string"},dateToUnixTsReturns:{zh:"Unix 时间戳",en:"The unix epoch"},jqDesc:{zh:"JQ 是一款功能强大的命令行工具和编程语言，主要用于转换和查询 JSON 编码的消息。<br />\n对于规则 SQL 及其内置函数很难或无法实现的 JSON 消息处理，使用 JQ 函数可以很方便地实现。",en:"JQ is a powerful command line tool and programming language designed primarily for transforming and querying data encoded as JSON . <br />\nTypical JQ programs describe simple transformations or filters for JSON data, but one can also use JQ to perform complex computations when needed."},jqParams:{zh:"1. 有效的 jq 程序字符串<br />2. JSON 编码的字符串或对象<br />3.执行超时（可选，单位为毫秒，默认为 10 秒）",en:"1. string containing valid jq program<br />2. JSON encoded string or object<br />3. Optional, integer timeout value (milliseconds, default is 10 seconds)"},jqReturns:{zh:"返回值为执行生成生成的 JSON 对象列表。如果执行超时或者 JQ 程序抛出异常，该函数将抛出异常。",en:"list of objects corresponding to the JSON objects generated by the given JQ program (parameter 1) when given the input provided by parameter 2. The function throws an exception if the execution did not finish before the timeout or if the jq program throws an exception."}}}});