services:
  controller:
    container_name: 'controller'
    build: /controller
    tty: true
    ports:
      - 5000:5000
    volumes:
      - ./controller:/controller
      - /controller/node_modules/
    environment:
      - MQTT_HOST=emqx
      - MQTT_PORT=1883
      - MONGODB_IP=mongo1:27017,mongo1:27018,mongo1:27019
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=admin
      - ACCOUNT_SERVICE=account_service:5002
    networks:
      - mongoCluster
      - mqttCluster
      - reverseProxy

  auth:
    container_name: 'auth'
    build: /auth
    tty: true
    ports:
      - 5001:5001
    volumes:
      - ./auth:/auth
      - /auth/node_modules/
    environment:
      - MONGODB_IP=mongo1:27017,mongo1:27018,mongo1:27019
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=admin
    networks:
      - mongoCluster
      - reverseProxy

  account_service:
    container_name: 'account_service'
    build: /accountService
    tty: true
    ports:
      - 5002:5002
    volumes:
      - ./accountService:/accountService
      - /accountService/node_modules/
    environment:
      - NODE_ENV='development'
      - MONGODB_IP=mongo1:27017,mongo1:27018,mongo1:27019
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=admin
    networks:
      - mongoCluster
      - reverseProxy

  # backend:
  #   container_name: 'backend_new'
  #   build: /backend_new
  #   tty: true
  #   ports:
  #     - 5000:5000
  #   volumes:
  #     - ./backend_new:/backend
  #     - /backend/node_modules/
  #   environment:
  #     - MQTT_HOST=emqx
  #     - MQTT_PORT='1883'
  #     - MONGODB_HOST=mongo
  #     - MONGODB_PORT='27017'

  # frontend:
  #   container_name: 'frontend'
  #   build: /frontend
  #   tty: true
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./frontend:/frontend
  #     - /frontend/node_modules/
  #   environment:
  #     - "NEXT_WEBPACK_USEPOLLING=1"
  #     # change this to your local ip
  #     - BACKEND_URL=10.0.0.12
  #     - BACKEND_INTERNAL_URL=backend
  #     - BACKEND_PORT=5000

  emqx:
    image: emqx:5.3.1
    container_name: emqx
    ports:
      - 1883:1883
      - 8083:8083
      - 8084:8084
      - 8883:8883
      - 18083:18083
    environment:
      - "EMQX_NODE_NAME=emqx@node1.emqx.io"
      - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
      - "EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.io]"
    # volumes:
    #   - $PWD/emqx1_data:/opt/emqx/data
    networks:
      - mqttCluster
      - mongoCluster

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongo1:27017,mongo3:27017,mongo2:27017/
    networks:
      mongoCluster:

  mongo1:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    command:
      [
        "mongod",
        "--replSet",
        "rs0",
        "--keyFile",
        "/etc/mongo-keyfile",
        "--port",
        "27017",
        "--bind_ip",
        "localhost,mongo1"
      ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/etc"
    networks:
      mongoCluster:

  mongo2:
    image: mongo
    restart: always
    ports:
      - 27018:27017
    command:
      [
        "mongod",
        "--replSet",
        "rs0",
        "--keyFile",
        "/etc/mongo-keyfile",
        "--port",
        "27017",
        "--bind_ip",
        "localhost,mongo2"
      ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - "mongo2_data:/data/db"
      - "mongo2_config:/etc"
    networks:
      mongoCluster:

  mongo3:
    image: mongo
    restart: always
    ports:
      - 27019:27017
    command:
      [
        "mongod",
        "--replSet",
        "rs0",
        "--keyFile",
        "/etc/mongo-keyfile",
        "--port",
        "27017",
        "--bind_ip",
        "localhost,mongo3"
      ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin

    volumes:
      - "mongo3_data:/data/db"
      - "mongo3_config:/etc"
    networks:
      mongoCluster:

  nginx:
    image: nginx
    volumes:
      - type: bind
        source: ./proxy/selfsigned.key
        target: /etc/nginx/selfsigned.key
        read_only: true
      - type: bind
        source: ./proxy/selfsigned.crt
        target: /etc/nginx/selfsigned.crt
        read_only: true
      - type: bind
        source: ./proxy/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - 80:80
      - 443:443
    depends_on: 
      - auth
      - account_service
    networks:
      - reverseProxy


networks:
  default:
  mongoCluster:
    driver: bridge
  mqttCluster:
    driver: bridge
  reverseProxy:
    driver: bridge

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo1_config:
  mongo2_config:
  mongo3_config: